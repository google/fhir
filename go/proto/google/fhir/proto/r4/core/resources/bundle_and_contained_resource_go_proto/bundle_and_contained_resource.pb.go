//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.12
// source: proto/google/fhir/proto/r4/core/resources/bundle_and_contained_resource.proto

package bundle_and_contained_resource_go_proto

import (
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	account_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/account_go_proto"
	activity_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/activity_definition_go_proto"
	adverse_event_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/adverse_event_go_proto"
	allergy_intolerance_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/allergy_intolerance_go_proto"
	appointment_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/appointment_go_proto"
	appointment_response_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/appointment_response_go_proto"
	audit_event_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/audit_event_go_proto"
	basic_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/basic_go_proto"
	binary_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/binary_go_proto"
	biologically_derived_product_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/biologically_derived_product_go_proto"
	body_structure_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/body_structure_go_proto"
	capability_statement_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/capability_statement_go_proto"
	care_plan_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/care_plan_go_proto"
	care_team_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/care_team_go_proto"
	catalog_entry_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/catalog_entry_go_proto"
	charge_item_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/charge_item_definition_go_proto"
	charge_item_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/charge_item_go_proto"
	claim_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/claim_go_proto"
	claim_response_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/claim_response_go_proto"
	clinical_impression_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/clinical_impression_go_proto"
	code_system_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/code_system_go_proto"
	communication_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/communication_go_proto"
	communication_request_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/communication_request_go_proto"
	compartment_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/compartment_definition_go_proto"
	composition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/composition_go_proto"
	concept_map_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/concept_map_go_proto"
	condition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/condition_go_proto"
	consent_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/consent_go_proto"
	contract_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/contract_go_proto"
	coverage_eligibility_request_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/coverage_eligibility_request_go_proto"
	coverage_eligibility_response_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/coverage_eligibility_response_go_proto"
	coverage_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/coverage_go_proto"
	detected_issue_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/detected_issue_go_proto"
	device_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/device_definition_go_proto"
	device_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/device_go_proto"
	device_metric_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/device_metric_go_proto"
	device_request_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/device_request_go_proto"
	device_use_statement_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/device_use_statement_go_proto"
	diagnostic_report_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/diagnostic_report_go_proto"
	document_manifest_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/document_manifest_go_proto"
	document_reference_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/document_reference_go_proto"
	effect_evidence_synthesis_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/effect_evidence_synthesis_go_proto"
	encounter_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/encounter_go_proto"
	endpoint_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/endpoint_go_proto"
	enrollment_request_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/enrollment_request_go_proto"
	enrollment_response_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/enrollment_response_go_proto"
	episode_of_care_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/episode_of_care_go_proto"
	event_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/event_definition_go_proto"
	evidence_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/evidence_go_proto"
	evidence_variable_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/evidence_variable_go_proto"
	example_scenario_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/example_scenario_go_proto"
	explanation_of_benefit_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/explanation_of_benefit_go_proto"
	family_member_history_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/family_member_history_go_proto"
	flag_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/flag_go_proto"
	goal_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/goal_go_proto"
	graph_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/graph_definition_go_proto"
	group_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/group_go_proto"
	guidance_response_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/guidance_response_go_proto"
	healthcare_service_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/healthcare_service_go_proto"
	imaging_study_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/imaging_study_go_proto"
	immunization_evaluation_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/immunization_evaluation_go_proto"
	immunization_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/immunization_go_proto"
	immunization_recommendation_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/immunization_recommendation_go_proto"
	implementation_guide_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/implementation_guide_go_proto"
	insurance_plan_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/insurance_plan_go_proto"
	invoice_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/invoice_go_proto"
	library_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/library_go_proto"
	linkage_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/linkage_go_proto"
	list_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/list_go_proto"
	location_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/location_go_proto"
	measure_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/measure_go_proto"
	measure_report_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/measure_report_go_proto"
	media_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/media_go_proto"
	medication_administration_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medication_administration_go_proto"
	medication_dispense_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medication_dispense_go_proto"
	medication_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medication_go_proto"
	medication_knowledge_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medication_knowledge_go_proto"
	medication_request_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medication_request_go_proto"
	medication_statement_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medication_statement_go_proto"
	medicinal_product_authorization_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_authorization_go_proto"
	medicinal_product_contraindication_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_contraindication_go_proto"
	medicinal_product_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_go_proto"
	medicinal_product_indication_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_indication_go_proto"
	medicinal_product_ingredient_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_ingredient_go_proto"
	medicinal_product_interaction_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_interaction_go_proto"
	medicinal_product_manufactured_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_manufactured_go_proto"
	medicinal_product_packaged_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_packaged_go_proto"
	medicinal_product_pharmaceutical_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_pharmaceutical_go_proto"
	medicinal_product_undesirable_effect_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/medicinal_product_undesirable_effect_go_proto"
	message_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/message_definition_go_proto"
	message_header_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/message_header_go_proto"
	molecular_sequence_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/molecular_sequence_go_proto"
	naming_system_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/naming_system_go_proto"
	nutrition_order_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/nutrition_order_go_proto"
	observation_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/observation_definition_go_proto"
	observation_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/observation_go_proto"
	operation_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/operation_definition_go_proto"
	operation_outcome_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/operation_outcome_go_proto"
	organization_affiliation_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/organization_affiliation_go_proto"
	organization_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/organization_go_proto"
	parameters_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/parameters_go_proto"
	patient_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/patient_go_proto"
	payment_notice_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/payment_notice_go_proto"
	payment_reconciliation_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/payment_reconciliation_go_proto"
	person_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/person_go_proto"
	plan_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/plan_definition_go_proto"
	practitioner_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/practitioner_go_proto"
	practitioner_role_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/practitioner_role_go_proto"
	procedure_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/procedure_go_proto"
	provenance_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/provenance_go_proto"
	questionnaire_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/questionnaire_go_proto"
	questionnaire_response_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/questionnaire_response_go_proto"
	related_person_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/related_person_go_proto"
	request_group_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/request_group_go_proto"
	research_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/research_definition_go_proto"
	research_element_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/research_element_definition_go_proto"
	research_study_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/research_study_go_proto"
	research_subject_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/research_subject_go_proto"
	risk_assessment_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/risk_assessment_go_proto"
	risk_evidence_synthesis_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/risk_evidence_synthesis_go_proto"
	schedule_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/schedule_go_proto"
	search_parameter_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/search_parameter_go_proto"
	service_request_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/service_request_go_proto"
	slot_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/slot_go_proto"
	specimen_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/specimen_definition_go_proto"
	specimen_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/specimen_go_proto"
	structure_definition_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/structure_definition_go_proto"
	structure_map_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/structure_map_go_proto"
	subscription_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/subscription_go_proto"
	substance_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/substance_go_proto"
	substance_nucleic_acid_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/substance_nucleic_acid_go_proto"
	substance_polymer_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/substance_polymer_go_proto"
	substance_protein_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/substance_protein_go_proto"
	substance_reference_information_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/substance_reference_information_go_proto"
	substance_source_material_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/substance_source_material_go_proto"
	substance_specification_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/substance_specification_go_proto"
	supply_delivery_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/supply_delivery_go_proto"
	supply_request_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/supply_request_go_proto"
	task_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/task_go_proto"
	terminology_capabilities_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/terminology_capabilities_go_proto"
	test_report_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/test_report_go_proto"
	test_script_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/test_script_go_proto"
	value_set_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/value_set_go_proto"
	verification_result_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/verification_result_go_proto"
	vision_prescription_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/resources/vision_prescription_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for Bundle.
// Contains a collection of resources.
// See http://hl7.org/fhir/StructureDefinition/Bundle
type Bundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Persistent identifier for the bundle
	Identifier *datatypes_go_proto.Identifier `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Type       *Bundle_TypeCode               `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// When the bundle was assembled
	Timestamp *datatypes_go_proto.Instant `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// If search, the total number of matches
	Total *datatypes_go_proto.UnsignedInt `protobuf:"bytes,8,opt,name=total,proto3" json:"total,omitempty"`
	Link  []*Bundle_Link                  `protobuf:"bytes,9,rep,name=link,proto3" json:"link,omitempty"`
	Entry []*Bundle_Entry                 `protobuf:"bytes,10,rep,name=entry,proto3" json:"entry,omitempty"`
	// Digital Signature
	Signature *datatypes_go_proto.Signature `protobuf:"bytes,11,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Bundle) Reset() {
	*x = Bundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle) ProtoMessage() {}

func (x *Bundle) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle.ProtoReflect.Descriptor instead.
func (*Bundle) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0}
}

func (x *Bundle) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Bundle) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *Bundle) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *Bundle) GetIdentifier() *datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *Bundle) GetType() *Bundle_TypeCode {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Bundle) GetTimestamp() *datatypes_go_proto.Instant {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Bundle) GetTotal() *datatypes_go_proto.UnsignedInt {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *Bundle) GetLink() []*Bundle_Link {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *Bundle) GetEntry() []*Bundle_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *Bundle) GetSignature() *datatypes_go_proto.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ContainedResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneofResource:
	//
	//	*ContainedResource_Account
	//	*ContainedResource_ActivityDefinition
	//	*ContainedResource_AdverseEvent
	//	*ContainedResource_AllergyIntolerance
	//	*ContainedResource_Appointment
	//	*ContainedResource_AppointmentResponse
	//	*ContainedResource_AuditEvent
	//	*ContainedResource_Basic
	//	*ContainedResource_Binary
	//	*ContainedResource_BiologicallyDerivedProduct
	//	*ContainedResource_BodyStructure
	//	*ContainedResource_Bundle
	//	*ContainedResource_CapabilityStatement
	//	*ContainedResource_CarePlan
	//	*ContainedResource_CareTeam
	//	*ContainedResource_CatalogEntry
	//	*ContainedResource_ChargeItem
	//	*ContainedResource_ChargeItemDefinition
	//	*ContainedResource_Claim
	//	*ContainedResource_ClaimResponse
	//	*ContainedResource_ClinicalImpression
	//	*ContainedResource_CodeSystem
	//	*ContainedResource_Communication
	//	*ContainedResource_CommunicationRequest
	//	*ContainedResource_CompartmentDefinition
	//	*ContainedResource_Composition
	//	*ContainedResource_ConceptMap
	//	*ContainedResource_Condition
	//	*ContainedResource_Consent
	//	*ContainedResource_Contract
	//	*ContainedResource_Coverage
	//	*ContainedResource_CoverageEligibilityRequest
	//	*ContainedResource_CoverageEligibilityResponse
	//	*ContainedResource_DetectedIssue
	//	*ContainedResource_Device
	//	*ContainedResource_DeviceDefinition
	//	*ContainedResource_DeviceMetric
	//	*ContainedResource_DeviceRequest
	//	*ContainedResource_DeviceUseStatement
	//	*ContainedResource_DiagnosticReport
	//	*ContainedResource_DocumentManifest
	//	*ContainedResource_DocumentReference
	//	*ContainedResource_EffectEvidenceSynthesis
	//	*ContainedResource_Encounter
	//	*ContainedResource_Endpoint
	//	*ContainedResource_EnrollmentRequest
	//	*ContainedResource_EnrollmentResponse
	//	*ContainedResource_EpisodeOfCare
	//	*ContainedResource_EventDefinition
	//	*ContainedResource_Evidence
	//	*ContainedResource_EvidenceVariable
	//	*ContainedResource_ExampleScenario
	//	*ContainedResource_ExplanationOfBenefit
	//	*ContainedResource_FamilyMemberHistory
	//	*ContainedResource_Flag
	//	*ContainedResource_Goal
	//	*ContainedResource_GraphDefinition
	//	*ContainedResource_Group
	//	*ContainedResource_GuidanceResponse
	//	*ContainedResource_HealthcareService
	//	*ContainedResource_ImagingStudy
	//	*ContainedResource_Immunization
	//	*ContainedResource_ImmunizationEvaluation
	//	*ContainedResource_ImmunizationRecommendation
	//	*ContainedResource_ImplementationGuide
	//	*ContainedResource_InsurancePlan
	//	*ContainedResource_Invoice
	//	*ContainedResource_Library
	//	*ContainedResource_Linkage
	//	*ContainedResource_List
	//	*ContainedResource_Location
	//	*ContainedResource_Measure
	//	*ContainedResource_MeasureReport
	//	*ContainedResource_Media
	//	*ContainedResource_Medication
	//	*ContainedResource_MedicationAdministration
	//	*ContainedResource_MedicationDispense
	//	*ContainedResource_MedicationKnowledge
	//	*ContainedResource_MedicationRequest
	//	*ContainedResource_MedicationStatement
	//	*ContainedResource_MedicinalProduct
	//	*ContainedResource_MedicinalProductAuthorization
	//	*ContainedResource_MedicinalProductContraindication
	//	*ContainedResource_MedicinalProductIndication
	//	*ContainedResource_MedicinalProductIngredient
	//	*ContainedResource_MedicinalProductInteraction
	//	*ContainedResource_MedicinalProductManufactured
	//	*ContainedResource_MedicinalProductPackaged
	//	*ContainedResource_MedicinalProductPharmaceutical
	//	*ContainedResource_MedicinalProductUndesirableEffect
	//	*ContainedResource_MessageDefinition
	//	*ContainedResource_MessageHeader
	//	*ContainedResource_MolecularSequence
	//	*ContainedResource_NamingSystem
	//	*ContainedResource_NutritionOrder
	//	*ContainedResource_Observation
	//	*ContainedResource_ObservationDefinition
	//	*ContainedResource_OperationDefinition
	//	*ContainedResource_OperationOutcome
	//	*ContainedResource_Organization
	//	*ContainedResource_OrganizationAffiliation
	//	*ContainedResource_Parameters
	//	*ContainedResource_Patient
	//	*ContainedResource_PaymentNotice
	//	*ContainedResource_PaymentReconciliation
	//	*ContainedResource_Person
	//	*ContainedResource_PlanDefinition
	//	*ContainedResource_Practitioner
	//	*ContainedResource_PractitionerRole
	//	*ContainedResource_Procedure
	//	*ContainedResource_Provenance
	//	*ContainedResource_Questionnaire
	//	*ContainedResource_QuestionnaireResponse
	//	*ContainedResource_RelatedPerson
	//	*ContainedResource_RequestGroup
	//	*ContainedResource_ResearchDefinition
	//	*ContainedResource_ResearchElementDefinition
	//	*ContainedResource_ResearchStudy
	//	*ContainedResource_ResearchSubject
	//	*ContainedResource_RiskAssessment
	//	*ContainedResource_RiskEvidenceSynthesis
	//	*ContainedResource_Schedule
	//	*ContainedResource_SearchParameter
	//	*ContainedResource_ServiceRequest
	//	*ContainedResource_Slot
	//	*ContainedResource_Specimen
	//	*ContainedResource_SpecimenDefinition
	//	*ContainedResource_StructureDefinition
	//	*ContainedResource_StructureMap
	//	*ContainedResource_Subscription
	//	*ContainedResource_Substance
	//	*ContainedResource_SubstanceNucleicAcid
	//	*ContainedResource_SubstancePolymer
	//	*ContainedResource_SubstanceProtein
	//	*ContainedResource_SubstanceReferenceInformation
	//	*ContainedResource_SubstanceSourceMaterial
	//	*ContainedResource_SubstanceSpecification
	//	*ContainedResource_SupplyDelivery
	//	*ContainedResource_SupplyRequest
	//	*ContainedResource_Task
	//	*ContainedResource_TerminologyCapabilities
	//	*ContainedResource_TestReport
	//	*ContainedResource_TestScript
	//	*ContainedResource_ValueSet
	//	*ContainedResource_VerificationResult
	//	*ContainedResource_VisionPrescription
	OneofResource isContainedResource_OneofResource `protobuf_oneof:"oneof_resource"`
}

func (x *ContainedResource) Reset() {
	*x = ContainedResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainedResource) ProtoMessage() {}

func (x *ContainedResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainedResource.ProtoReflect.Descriptor instead.
func (*ContainedResource) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{1}
}

func (m *ContainedResource) GetOneofResource() isContainedResource_OneofResource {
	if m != nil {
		return m.OneofResource
	}
	return nil
}

func (x *ContainedResource) GetAccount() *account_go_proto.Account {
	if x, ok := x.GetOneofResource().(*ContainedResource_Account); ok {
		return x.Account
	}
	return nil
}

func (x *ContainedResource) GetActivityDefinition() *activity_definition_go_proto.ActivityDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_ActivityDefinition); ok {
		return x.ActivityDefinition
	}
	return nil
}

func (x *ContainedResource) GetAdverseEvent() *adverse_event_go_proto.AdverseEvent {
	if x, ok := x.GetOneofResource().(*ContainedResource_AdverseEvent); ok {
		return x.AdverseEvent
	}
	return nil
}

func (x *ContainedResource) GetAllergyIntolerance() *allergy_intolerance_go_proto.AllergyIntolerance {
	if x, ok := x.GetOneofResource().(*ContainedResource_AllergyIntolerance); ok {
		return x.AllergyIntolerance
	}
	return nil
}

func (x *ContainedResource) GetAppointment() *appointment_go_proto.Appointment {
	if x, ok := x.GetOneofResource().(*ContainedResource_Appointment); ok {
		return x.Appointment
	}
	return nil
}

func (x *ContainedResource) GetAppointmentResponse() *appointment_response_go_proto.AppointmentResponse {
	if x, ok := x.GetOneofResource().(*ContainedResource_AppointmentResponse); ok {
		return x.AppointmentResponse
	}
	return nil
}

func (x *ContainedResource) GetAuditEvent() *audit_event_go_proto.AuditEvent {
	if x, ok := x.GetOneofResource().(*ContainedResource_AuditEvent); ok {
		return x.AuditEvent
	}
	return nil
}

func (x *ContainedResource) GetBasic() *basic_go_proto.Basic {
	if x, ok := x.GetOneofResource().(*ContainedResource_Basic); ok {
		return x.Basic
	}
	return nil
}

func (x *ContainedResource) GetBinary() *binary_go_proto.Binary {
	if x, ok := x.GetOneofResource().(*ContainedResource_Binary); ok {
		return x.Binary
	}
	return nil
}

func (x *ContainedResource) GetBiologicallyDerivedProduct() *biologically_derived_product_go_proto.BiologicallyDerivedProduct {
	if x, ok := x.GetOneofResource().(*ContainedResource_BiologicallyDerivedProduct); ok {
		return x.BiologicallyDerivedProduct
	}
	return nil
}

func (x *ContainedResource) GetBodyStructure() *body_structure_go_proto.BodyStructure {
	if x, ok := x.GetOneofResource().(*ContainedResource_BodyStructure); ok {
		return x.BodyStructure
	}
	return nil
}

func (x *ContainedResource) GetBundle() *Bundle {
	if x, ok := x.GetOneofResource().(*ContainedResource_Bundle); ok {
		return x.Bundle
	}
	return nil
}

func (x *ContainedResource) GetCapabilityStatement() *capability_statement_go_proto.CapabilityStatement {
	if x, ok := x.GetOneofResource().(*ContainedResource_CapabilityStatement); ok {
		return x.CapabilityStatement
	}
	return nil
}

func (x *ContainedResource) GetCarePlan() *care_plan_go_proto.CarePlan {
	if x, ok := x.GetOneofResource().(*ContainedResource_CarePlan); ok {
		return x.CarePlan
	}
	return nil
}

func (x *ContainedResource) GetCareTeam() *care_team_go_proto.CareTeam {
	if x, ok := x.GetOneofResource().(*ContainedResource_CareTeam); ok {
		return x.CareTeam
	}
	return nil
}

func (x *ContainedResource) GetCatalogEntry() *catalog_entry_go_proto.CatalogEntry {
	if x, ok := x.GetOneofResource().(*ContainedResource_CatalogEntry); ok {
		return x.CatalogEntry
	}
	return nil
}

func (x *ContainedResource) GetChargeItem() *charge_item_go_proto.ChargeItem {
	if x, ok := x.GetOneofResource().(*ContainedResource_ChargeItem); ok {
		return x.ChargeItem
	}
	return nil
}

func (x *ContainedResource) GetChargeItemDefinition() *charge_item_definition_go_proto.ChargeItemDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_ChargeItemDefinition); ok {
		return x.ChargeItemDefinition
	}
	return nil
}

func (x *ContainedResource) GetClaim() *claim_go_proto.Claim {
	if x, ok := x.GetOneofResource().(*ContainedResource_Claim); ok {
		return x.Claim
	}
	return nil
}

func (x *ContainedResource) GetClaimResponse() *claim_response_go_proto.ClaimResponse {
	if x, ok := x.GetOneofResource().(*ContainedResource_ClaimResponse); ok {
		return x.ClaimResponse
	}
	return nil
}

func (x *ContainedResource) GetClinicalImpression() *clinical_impression_go_proto.ClinicalImpression {
	if x, ok := x.GetOneofResource().(*ContainedResource_ClinicalImpression); ok {
		return x.ClinicalImpression
	}
	return nil
}

func (x *ContainedResource) GetCodeSystem() *code_system_go_proto.CodeSystem {
	if x, ok := x.GetOneofResource().(*ContainedResource_CodeSystem); ok {
		return x.CodeSystem
	}
	return nil
}

func (x *ContainedResource) GetCommunication() *communication_go_proto.Communication {
	if x, ok := x.GetOneofResource().(*ContainedResource_Communication); ok {
		return x.Communication
	}
	return nil
}

func (x *ContainedResource) GetCommunicationRequest() *communication_request_go_proto.CommunicationRequest {
	if x, ok := x.GetOneofResource().(*ContainedResource_CommunicationRequest); ok {
		return x.CommunicationRequest
	}
	return nil
}

func (x *ContainedResource) GetCompartmentDefinition() *compartment_definition_go_proto.CompartmentDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_CompartmentDefinition); ok {
		return x.CompartmentDefinition
	}
	return nil
}

func (x *ContainedResource) GetComposition() *composition_go_proto.Composition {
	if x, ok := x.GetOneofResource().(*ContainedResource_Composition); ok {
		return x.Composition
	}
	return nil
}

func (x *ContainedResource) GetConceptMap() *concept_map_go_proto.ConceptMap {
	if x, ok := x.GetOneofResource().(*ContainedResource_ConceptMap); ok {
		return x.ConceptMap
	}
	return nil
}

func (x *ContainedResource) GetCondition() *condition_go_proto.Condition {
	if x, ok := x.GetOneofResource().(*ContainedResource_Condition); ok {
		return x.Condition
	}
	return nil
}

func (x *ContainedResource) GetConsent() *consent_go_proto.Consent {
	if x, ok := x.GetOneofResource().(*ContainedResource_Consent); ok {
		return x.Consent
	}
	return nil
}

func (x *ContainedResource) GetContract() *contract_go_proto.Contract {
	if x, ok := x.GetOneofResource().(*ContainedResource_Contract); ok {
		return x.Contract
	}
	return nil
}

func (x *ContainedResource) GetCoverage() *coverage_go_proto.Coverage {
	if x, ok := x.GetOneofResource().(*ContainedResource_Coverage); ok {
		return x.Coverage
	}
	return nil
}

func (x *ContainedResource) GetCoverageEligibilityRequest() *coverage_eligibility_request_go_proto.CoverageEligibilityRequest {
	if x, ok := x.GetOneofResource().(*ContainedResource_CoverageEligibilityRequest); ok {
		return x.CoverageEligibilityRequest
	}
	return nil
}

func (x *ContainedResource) GetCoverageEligibilityResponse() *coverage_eligibility_response_go_proto.CoverageEligibilityResponse {
	if x, ok := x.GetOneofResource().(*ContainedResource_CoverageEligibilityResponse); ok {
		return x.CoverageEligibilityResponse
	}
	return nil
}

func (x *ContainedResource) GetDetectedIssue() *detected_issue_go_proto.DetectedIssue {
	if x, ok := x.GetOneofResource().(*ContainedResource_DetectedIssue); ok {
		return x.DetectedIssue
	}
	return nil
}

func (x *ContainedResource) GetDevice() *device_go_proto.Device {
	if x, ok := x.GetOneofResource().(*ContainedResource_Device); ok {
		return x.Device
	}
	return nil
}

func (x *ContainedResource) GetDeviceDefinition() *device_definition_go_proto.DeviceDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_DeviceDefinition); ok {
		return x.DeviceDefinition
	}
	return nil
}

func (x *ContainedResource) GetDeviceMetric() *device_metric_go_proto.DeviceMetric {
	if x, ok := x.GetOneofResource().(*ContainedResource_DeviceMetric); ok {
		return x.DeviceMetric
	}
	return nil
}

func (x *ContainedResource) GetDeviceRequest() *device_request_go_proto.DeviceRequest {
	if x, ok := x.GetOneofResource().(*ContainedResource_DeviceRequest); ok {
		return x.DeviceRequest
	}
	return nil
}

func (x *ContainedResource) GetDeviceUseStatement() *device_use_statement_go_proto.DeviceUseStatement {
	if x, ok := x.GetOneofResource().(*ContainedResource_DeviceUseStatement); ok {
		return x.DeviceUseStatement
	}
	return nil
}

func (x *ContainedResource) GetDiagnosticReport() *diagnostic_report_go_proto.DiagnosticReport {
	if x, ok := x.GetOneofResource().(*ContainedResource_DiagnosticReport); ok {
		return x.DiagnosticReport
	}
	return nil
}

func (x *ContainedResource) GetDocumentManifest() *document_manifest_go_proto.DocumentManifest {
	if x, ok := x.GetOneofResource().(*ContainedResource_DocumentManifest); ok {
		return x.DocumentManifest
	}
	return nil
}

func (x *ContainedResource) GetDocumentReference() *document_reference_go_proto.DocumentReference {
	if x, ok := x.GetOneofResource().(*ContainedResource_DocumentReference); ok {
		return x.DocumentReference
	}
	return nil
}

func (x *ContainedResource) GetEffectEvidenceSynthesis() *effect_evidence_synthesis_go_proto.EffectEvidenceSynthesis {
	if x, ok := x.GetOneofResource().(*ContainedResource_EffectEvidenceSynthesis); ok {
		return x.EffectEvidenceSynthesis
	}
	return nil
}

func (x *ContainedResource) GetEncounter() *encounter_go_proto.Encounter {
	if x, ok := x.GetOneofResource().(*ContainedResource_Encounter); ok {
		return x.Encounter
	}
	return nil
}

func (x *ContainedResource) GetEndpoint() *endpoint_go_proto.Endpoint {
	if x, ok := x.GetOneofResource().(*ContainedResource_Endpoint); ok {
		return x.Endpoint
	}
	return nil
}

func (x *ContainedResource) GetEnrollmentRequest() *enrollment_request_go_proto.EnrollmentRequest {
	if x, ok := x.GetOneofResource().(*ContainedResource_EnrollmentRequest); ok {
		return x.EnrollmentRequest
	}
	return nil
}

func (x *ContainedResource) GetEnrollmentResponse() *enrollment_response_go_proto.EnrollmentResponse {
	if x, ok := x.GetOneofResource().(*ContainedResource_EnrollmentResponse); ok {
		return x.EnrollmentResponse
	}
	return nil
}

func (x *ContainedResource) GetEpisodeOfCare() *episode_of_care_go_proto.EpisodeOfCare {
	if x, ok := x.GetOneofResource().(*ContainedResource_EpisodeOfCare); ok {
		return x.EpisodeOfCare
	}
	return nil
}

func (x *ContainedResource) GetEventDefinition() *event_definition_go_proto.EventDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_EventDefinition); ok {
		return x.EventDefinition
	}
	return nil
}

func (x *ContainedResource) GetEvidence() *evidence_go_proto.Evidence {
	if x, ok := x.GetOneofResource().(*ContainedResource_Evidence); ok {
		return x.Evidence
	}
	return nil
}

func (x *ContainedResource) GetEvidenceVariable() *evidence_variable_go_proto.EvidenceVariable {
	if x, ok := x.GetOneofResource().(*ContainedResource_EvidenceVariable); ok {
		return x.EvidenceVariable
	}
	return nil
}

func (x *ContainedResource) GetExampleScenario() *example_scenario_go_proto.ExampleScenario {
	if x, ok := x.GetOneofResource().(*ContainedResource_ExampleScenario); ok {
		return x.ExampleScenario
	}
	return nil
}

func (x *ContainedResource) GetExplanationOfBenefit() *explanation_of_benefit_go_proto.ExplanationOfBenefit {
	if x, ok := x.GetOneofResource().(*ContainedResource_ExplanationOfBenefit); ok {
		return x.ExplanationOfBenefit
	}
	return nil
}

func (x *ContainedResource) GetFamilyMemberHistory() *family_member_history_go_proto.FamilyMemberHistory {
	if x, ok := x.GetOneofResource().(*ContainedResource_FamilyMemberHistory); ok {
		return x.FamilyMemberHistory
	}
	return nil
}

func (x *ContainedResource) GetFlag() *flag_go_proto.Flag {
	if x, ok := x.GetOneofResource().(*ContainedResource_Flag); ok {
		return x.Flag
	}
	return nil
}

func (x *ContainedResource) GetGoal() *goal_go_proto.Goal {
	if x, ok := x.GetOneofResource().(*ContainedResource_Goal); ok {
		return x.Goal
	}
	return nil
}

func (x *ContainedResource) GetGraphDefinition() *graph_definition_go_proto.GraphDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_GraphDefinition); ok {
		return x.GraphDefinition
	}
	return nil
}

func (x *ContainedResource) GetGroup() *group_go_proto.Group {
	if x, ok := x.GetOneofResource().(*ContainedResource_Group); ok {
		return x.Group
	}
	return nil
}

func (x *ContainedResource) GetGuidanceResponse() *guidance_response_go_proto.GuidanceResponse {
	if x, ok := x.GetOneofResource().(*ContainedResource_GuidanceResponse); ok {
		return x.GuidanceResponse
	}
	return nil
}

func (x *ContainedResource) GetHealthcareService() *healthcare_service_go_proto.HealthcareService {
	if x, ok := x.GetOneofResource().(*ContainedResource_HealthcareService); ok {
		return x.HealthcareService
	}
	return nil
}

func (x *ContainedResource) GetImagingStudy() *imaging_study_go_proto.ImagingStudy {
	if x, ok := x.GetOneofResource().(*ContainedResource_ImagingStudy); ok {
		return x.ImagingStudy
	}
	return nil
}

func (x *ContainedResource) GetImmunization() *immunization_go_proto.Immunization {
	if x, ok := x.GetOneofResource().(*ContainedResource_Immunization); ok {
		return x.Immunization
	}
	return nil
}

func (x *ContainedResource) GetImmunizationEvaluation() *immunization_evaluation_go_proto.ImmunizationEvaluation {
	if x, ok := x.GetOneofResource().(*ContainedResource_ImmunizationEvaluation); ok {
		return x.ImmunizationEvaluation
	}
	return nil
}

func (x *ContainedResource) GetImmunizationRecommendation() *immunization_recommendation_go_proto.ImmunizationRecommendation {
	if x, ok := x.GetOneofResource().(*ContainedResource_ImmunizationRecommendation); ok {
		return x.ImmunizationRecommendation
	}
	return nil
}

func (x *ContainedResource) GetImplementationGuide() *implementation_guide_go_proto.ImplementationGuide {
	if x, ok := x.GetOneofResource().(*ContainedResource_ImplementationGuide); ok {
		return x.ImplementationGuide
	}
	return nil
}

func (x *ContainedResource) GetInsurancePlan() *insurance_plan_go_proto.InsurancePlan {
	if x, ok := x.GetOneofResource().(*ContainedResource_InsurancePlan); ok {
		return x.InsurancePlan
	}
	return nil
}

func (x *ContainedResource) GetInvoice() *invoice_go_proto.Invoice {
	if x, ok := x.GetOneofResource().(*ContainedResource_Invoice); ok {
		return x.Invoice
	}
	return nil
}

func (x *ContainedResource) GetLibrary() *library_go_proto.Library {
	if x, ok := x.GetOneofResource().(*ContainedResource_Library); ok {
		return x.Library
	}
	return nil
}

func (x *ContainedResource) GetLinkage() *linkage_go_proto.Linkage {
	if x, ok := x.GetOneofResource().(*ContainedResource_Linkage); ok {
		return x.Linkage
	}
	return nil
}

func (x *ContainedResource) GetList() *list_go_proto.List {
	if x, ok := x.GetOneofResource().(*ContainedResource_List); ok {
		return x.List
	}
	return nil
}

func (x *ContainedResource) GetLocation() *location_go_proto.Location {
	if x, ok := x.GetOneofResource().(*ContainedResource_Location); ok {
		return x.Location
	}
	return nil
}

func (x *ContainedResource) GetMeasure() *measure_go_proto.Measure {
	if x, ok := x.GetOneofResource().(*ContainedResource_Measure); ok {
		return x.Measure
	}
	return nil
}

func (x *ContainedResource) GetMeasureReport() *measure_report_go_proto.MeasureReport {
	if x, ok := x.GetOneofResource().(*ContainedResource_MeasureReport); ok {
		return x.MeasureReport
	}
	return nil
}

func (x *ContainedResource) GetMedia() *media_go_proto.Media {
	if x, ok := x.GetOneofResource().(*ContainedResource_Media); ok {
		return x.Media
	}
	return nil
}

func (x *ContainedResource) GetMedication() *medication_go_proto.Medication {
	if x, ok := x.GetOneofResource().(*ContainedResource_Medication); ok {
		return x.Medication
	}
	return nil
}

func (x *ContainedResource) GetMedicationAdministration() *medication_administration_go_proto.MedicationAdministration {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicationAdministration); ok {
		return x.MedicationAdministration
	}
	return nil
}

func (x *ContainedResource) GetMedicationDispense() *medication_dispense_go_proto.MedicationDispense {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicationDispense); ok {
		return x.MedicationDispense
	}
	return nil
}

func (x *ContainedResource) GetMedicationKnowledge() *medication_knowledge_go_proto.MedicationKnowledge {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicationKnowledge); ok {
		return x.MedicationKnowledge
	}
	return nil
}

func (x *ContainedResource) GetMedicationRequest() *medication_request_go_proto.MedicationRequest {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicationRequest); ok {
		return x.MedicationRequest
	}
	return nil
}

func (x *ContainedResource) GetMedicationStatement() *medication_statement_go_proto.MedicationStatement {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicationStatement); ok {
		return x.MedicationStatement
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProduct() *medicinal_product_go_proto.MedicinalProduct {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProduct); ok {
		return x.MedicinalProduct
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductAuthorization() *medicinal_product_authorization_go_proto.MedicinalProductAuthorization {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductAuthorization); ok {
		return x.MedicinalProductAuthorization
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductContraindication() *medicinal_product_contraindication_go_proto.MedicinalProductContraindication {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductContraindication); ok {
		return x.MedicinalProductContraindication
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductIndication() *medicinal_product_indication_go_proto.MedicinalProductIndication {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductIndication); ok {
		return x.MedicinalProductIndication
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductIngredient() *medicinal_product_ingredient_go_proto.MedicinalProductIngredient {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductIngredient); ok {
		return x.MedicinalProductIngredient
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductInteraction() *medicinal_product_interaction_go_proto.MedicinalProductInteraction {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductInteraction); ok {
		return x.MedicinalProductInteraction
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductManufactured() *medicinal_product_manufactured_go_proto.MedicinalProductManufactured {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductManufactured); ok {
		return x.MedicinalProductManufactured
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductPackaged() *medicinal_product_packaged_go_proto.MedicinalProductPackaged {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductPackaged); ok {
		return x.MedicinalProductPackaged
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductPharmaceutical() *medicinal_product_pharmaceutical_go_proto.MedicinalProductPharmaceutical {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductPharmaceutical); ok {
		return x.MedicinalProductPharmaceutical
	}
	return nil
}

func (x *ContainedResource) GetMedicinalProductUndesirableEffect() *medicinal_product_undesirable_effect_go_proto.MedicinalProductUndesirableEffect {
	if x, ok := x.GetOneofResource().(*ContainedResource_MedicinalProductUndesirableEffect); ok {
		return x.MedicinalProductUndesirableEffect
	}
	return nil
}

func (x *ContainedResource) GetMessageDefinition() *message_definition_go_proto.MessageDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_MessageDefinition); ok {
		return x.MessageDefinition
	}
	return nil
}

func (x *ContainedResource) GetMessageHeader() *message_header_go_proto.MessageHeader {
	if x, ok := x.GetOneofResource().(*ContainedResource_MessageHeader); ok {
		return x.MessageHeader
	}
	return nil
}

func (x *ContainedResource) GetMolecularSequence() *molecular_sequence_go_proto.MolecularSequence {
	if x, ok := x.GetOneofResource().(*ContainedResource_MolecularSequence); ok {
		return x.MolecularSequence
	}
	return nil
}

func (x *ContainedResource) GetNamingSystem() *naming_system_go_proto.NamingSystem {
	if x, ok := x.GetOneofResource().(*ContainedResource_NamingSystem); ok {
		return x.NamingSystem
	}
	return nil
}

func (x *ContainedResource) GetNutritionOrder() *nutrition_order_go_proto.NutritionOrder {
	if x, ok := x.GetOneofResource().(*ContainedResource_NutritionOrder); ok {
		return x.NutritionOrder
	}
	return nil
}

func (x *ContainedResource) GetObservation() *observation_go_proto.Observation {
	if x, ok := x.GetOneofResource().(*ContainedResource_Observation); ok {
		return x.Observation
	}
	return nil
}

func (x *ContainedResource) GetObservationDefinition() *observation_definition_go_proto.ObservationDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_ObservationDefinition); ok {
		return x.ObservationDefinition
	}
	return nil
}

func (x *ContainedResource) GetOperationDefinition() *operation_definition_go_proto.OperationDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_OperationDefinition); ok {
		return x.OperationDefinition
	}
	return nil
}

func (x *ContainedResource) GetOperationOutcome() *operation_outcome_go_proto.OperationOutcome {
	if x, ok := x.GetOneofResource().(*ContainedResource_OperationOutcome); ok {
		return x.OperationOutcome
	}
	return nil
}

func (x *ContainedResource) GetOrganization() *organization_go_proto.Organization {
	if x, ok := x.GetOneofResource().(*ContainedResource_Organization); ok {
		return x.Organization
	}
	return nil
}

func (x *ContainedResource) GetOrganizationAffiliation() *organization_affiliation_go_proto.OrganizationAffiliation {
	if x, ok := x.GetOneofResource().(*ContainedResource_OrganizationAffiliation); ok {
		return x.OrganizationAffiliation
	}
	return nil
}

func (x *ContainedResource) GetParameters() *parameters_go_proto.Parameters {
	if x, ok := x.GetOneofResource().(*ContainedResource_Parameters); ok {
		return x.Parameters
	}
	return nil
}

func (x *ContainedResource) GetPatient() *patient_go_proto.Patient {
	if x, ok := x.GetOneofResource().(*ContainedResource_Patient); ok {
		return x.Patient
	}
	return nil
}

func (x *ContainedResource) GetPaymentNotice() *payment_notice_go_proto.PaymentNotice {
	if x, ok := x.GetOneofResource().(*ContainedResource_PaymentNotice); ok {
		return x.PaymentNotice
	}
	return nil
}

func (x *ContainedResource) GetPaymentReconciliation() *payment_reconciliation_go_proto.PaymentReconciliation {
	if x, ok := x.GetOneofResource().(*ContainedResource_PaymentReconciliation); ok {
		return x.PaymentReconciliation
	}
	return nil
}

func (x *ContainedResource) GetPerson() *person_go_proto.Person {
	if x, ok := x.GetOneofResource().(*ContainedResource_Person); ok {
		return x.Person
	}
	return nil
}

func (x *ContainedResource) GetPlanDefinition() *plan_definition_go_proto.PlanDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_PlanDefinition); ok {
		return x.PlanDefinition
	}
	return nil
}

func (x *ContainedResource) GetPractitioner() *practitioner_go_proto.Practitioner {
	if x, ok := x.GetOneofResource().(*ContainedResource_Practitioner); ok {
		return x.Practitioner
	}
	return nil
}

func (x *ContainedResource) GetPractitionerRole() *practitioner_role_go_proto.PractitionerRole {
	if x, ok := x.GetOneofResource().(*ContainedResource_PractitionerRole); ok {
		return x.PractitionerRole
	}
	return nil
}

func (x *ContainedResource) GetProcedure() *procedure_go_proto.Procedure {
	if x, ok := x.GetOneofResource().(*ContainedResource_Procedure); ok {
		return x.Procedure
	}
	return nil
}

func (x *ContainedResource) GetProvenance() *provenance_go_proto.Provenance {
	if x, ok := x.GetOneofResource().(*ContainedResource_Provenance); ok {
		return x.Provenance
	}
	return nil
}

func (x *ContainedResource) GetQuestionnaire() *questionnaire_go_proto.Questionnaire {
	if x, ok := x.GetOneofResource().(*ContainedResource_Questionnaire); ok {
		return x.Questionnaire
	}
	return nil
}

func (x *ContainedResource) GetQuestionnaireResponse() *questionnaire_response_go_proto.QuestionnaireResponse {
	if x, ok := x.GetOneofResource().(*ContainedResource_QuestionnaireResponse); ok {
		return x.QuestionnaireResponse
	}
	return nil
}

func (x *ContainedResource) GetRelatedPerson() *related_person_go_proto.RelatedPerson {
	if x, ok := x.GetOneofResource().(*ContainedResource_RelatedPerson); ok {
		return x.RelatedPerson
	}
	return nil
}

func (x *ContainedResource) GetRequestGroup() *request_group_go_proto.RequestGroup {
	if x, ok := x.GetOneofResource().(*ContainedResource_RequestGroup); ok {
		return x.RequestGroup
	}
	return nil
}

func (x *ContainedResource) GetResearchDefinition() *research_definition_go_proto.ResearchDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_ResearchDefinition); ok {
		return x.ResearchDefinition
	}
	return nil
}

func (x *ContainedResource) GetResearchElementDefinition() *research_element_definition_go_proto.ResearchElementDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_ResearchElementDefinition); ok {
		return x.ResearchElementDefinition
	}
	return nil
}

func (x *ContainedResource) GetResearchStudy() *research_study_go_proto.ResearchStudy {
	if x, ok := x.GetOneofResource().(*ContainedResource_ResearchStudy); ok {
		return x.ResearchStudy
	}
	return nil
}

func (x *ContainedResource) GetResearchSubject() *research_subject_go_proto.ResearchSubject {
	if x, ok := x.GetOneofResource().(*ContainedResource_ResearchSubject); ok {
		return x.ResearchSubject
	}
	return nil
}

func (x *ContainedResource) GetRiskAssessment() *risk_assessment_go_proto.RiskAssessment {
	if x, ok := x.GetOneofResource().(*ContainedResource_RiskAssessment); ok {
		return x.RiskAssessment
	}
	return nil
}

func (x *ContainedResource) GetRiskEvidenceSynthesis() *risk_evidence_synthesis_go_proto.RiskEvidenceSynthesis {
	if x, ok := x.GetOneofResource().(*ContainedResource_RiskEvidenceSynthesis); ok {
		return x.RiskEvidenceSynthesis
	}
	return nil
}

func (x *ContainedResource) GetSchedule() *schedule_go_proto.Schedule {
	if x, ok := x.GetOneofResource().(*ContainedResource_Schedule); ok {
		return x.Schedule
	}
	return nil
}

func (x *ContainedResource) GetSearchParameter() *search_parameter_go_proto.SearchParameter {
	if x, ok := x.GetOneofResource().(*ContainedResource_SearchParameter); ok {
		return x.SearchParameter
	}
	return nil
}

func (x *ContainedResource) GetServiceRequest() *service_request_go_proto.ServiceRequest {
	if x, ok := x.GetOneofResource().(*ContainedResource_ServiceRequest); ok {
		return x.ServiceRequest
	}
	return nil
}

func (x *ContainedResource) GetSlot() *slot_go_proto.Slot {
	if x, ok := x.GetOneofResource().(*ContainedResource_Slot); ok {
		return x.Slot
	}
	return nil
}

func (x *ContainedResource) GetSpecimen() *specimen_go_proto.Specimen {
	if x, ok := x.GetOneofResource().(*ContainedResource_Specimen); ok {
		return x.Specimen
	}
	return nil
}

func (x *ContainedResource) GetSpecimenDefinition() *specimen_definition_go_proto.SpecimenDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_SpecimenDefinition); ok {
		return x.SpecimenDefinition
	}
	return nil
}

func (x *ContainedResource) GetStructureDefinition() *structure_definition_go_proto.StructureDefinition {
	if x, ok := x.GetOneofResource().(*ContainedResource_StructureDefinition); ok {
		return x.StructureDefinition
	}
	return nil
}

func (x *ContainedResource) GetStructureMap() *structure_map_go_proto.StructureMap {
	if x, ok := x.GetOneofResource().(*ContainedResource_StructureMap); ok {
		return x.StructureMap
	}
	return nil
}

func (x *ContainedResource) GetSubscription() *subscription_go_proto.Subscription {
	if x, ok := x.GetOneofResource().(*ContainedResource_Subscription); ok {
		return x.Subscription
	}
	return nil
}

func (x *ContainedResource) GetSubstance() *substance_go_proto.Substance {
	if x, ok := x.GetOneofResource().(*ContainedResource_Substance); ok {
		return x.Substance
	}
	return nil
}

func (x *ContainedResource) GetSubstanceNucleicAcid() *substance_nucleic_acid_go_proto.SubstanceNucleicAcid {
	if x, ok := x.GetOneofResource().(*ContainedResource_SubstanceNucleicAcid); ok {
		return x.SubstanceNucleicAcid
	}
	return nil
}

func (x *ContainedResource) GetSubstancePolymer() *substance_polymer_go_proto.SubstancePolymer {
	if x, ok := x.GetOneofResource().(*ContainedResource_SubstancePolymer); ok {
		return x.SubstancePolymer
	}
	return nil
}

func (x *ContainedResource) GetSubstanceProtein() *substance_protein_go_proto.SubstanceProtein {
	if x, ok := x.GetOneofResource().(*ContainedResource_SubstanceProtein); ok {
		return x.SubstanceProtein
	}
	return nil
}

func (x *ContainedResource) GetSubstanceReferenceInformation() *substance_reference_information_go_proto.SubstanceReferenceInformation {
	if x, ok := x.GetOneofResource().(*ContainedResource_SubstanceReferenceInformation); ok {
		return x.SubstanceReferenceInformation
	}
	return nil
}

func (x *ContainedResource) GetSubstanceSourceMaterial() *substance_source_material_go_proto.SubstanceSourceMaterial {
	if x, ok := x.GetOneofResource().(*ContainedResource_SubstanceSourceMaterial); ok {
		return x.SubstanceSourceMaterial
	}
	return nil
}

func (x *ContainedResource) GetSubstanceSpecification() *substance_specification_go_proto.SubstanceSpecification {
	if x, ok := x.GetOneofResource().(*ContainedResource_SubstanceSpecification); ok {
		return x.SubstanceSpecification
	}
	return nil
}

func (x *ContainedResource) GetSupplyDelivery() *supply_delivery_go_proto.SupplyDelivery {
	if x, ok := x.GetOneofResource().(*ContainedResource_SupplyDelivery); ok {
		return x.SupplyDelivery
	}
	return nil
}

func (x *ContainedResource) GetSupplyRequest() *supply_request_go_proto.SupplyRequest {
	if x, ok := x.GetOneofResource().(*ContainedResource_SupplyRequest); ok {
		return x.SupplyRequest
	}
	return nil
}

func (x *ContainedResource) GetTask() *task_go_proto.Task {
	if x, ok := x.GetOneofResource().(*ContainedResource_Task); ok {
		return x.Task
	}
	return nil
}

func (x *ContainedResource) GetTerminologyCapabilities() *terminology_capabilities_go_proto.TerminologyCapabilities {
	if x, ok := x.GetOneofResource().(*ContainedResource_TerminologyCapabilities); ok {
		return x.TerminologyCapabilities
	}
	return nil
}

func (x *ContainedResource) GetTestReport() *test_report_go_proto.TestReport {
	if x, ok := x.GetOneofResource().(*ContainedResource_TestReport); ok {
		return x.TestReport
	}
	return nil
}

func (x *ContainedResource) GetTestScript() *test_script_go_proto.TestScript {
	if x, ok := x.GetOneofResource().(*ContainedResource_TestScript); ok {
		return x.TestScript
	}
	return nil
}

func (x *ContainedResource) GetValueSet() *value_set_go_proto.ValueSet {
	if x, ok := x.GetOneofResource().(*ContainedResource_ValueSet); ok {
		return x.ValueSet
	}
	return nil
}

func (x *ContainedResource) GetVerificationResult() *verification_result_go_proto.VerificationResult {
	if x, ok := x.GetOneofResource().(*ContainedResource_VerificationResult); ok {
		return x.VerificationResult
	}
	return nil
}

func (x *ContainedResource) GetVisionPrescription() *vision_prescription_go_proto.VisionPrescription {
	if x, ok := x.GetOneofResource().(*ContainedResource_VisionPrescription); ok {
		return x.VisionPrescription
	}
	return nil
}

type isContainedResource_OneofResource interface {
	isContainedResource_OneofResource()
}

type ContainedResource_Account struct {
	Account *account_go_proto.Account `protobuf:"bytes,1,opt,name=account,proto3,oneof"`
}

type ContainedResource_ActivityDefinition struct {
	ActivityDefinition *activity_definition_go_proto.ActivityDefinition `protobuf:"bytes,2,opt,name=activity_definition,json=activityDefinition,proto3,oneof"`
}

type ContainedResource_AdverseEvent struct {
	AdverseEvent *adverse_event_go_proto.AdverseEvent `protobuf:"bytes,3,opt,name=adverse_event,json=adverseEvent,proto3,oneof"`
}

type ContainedResource_AllergyIntolerance struct {
	AllergyIntolerance *allergy_intolerance_go_proto.AllergyIntolerance `protobuf:"bytes,4,opt,name=allergy_intolerance,json=allergyIntolerance,proto3,oneof"`
}

type ContainedResource_Appointment struct {
	Appointment *appointment_go_proto.Appointment `protobuf:"bytes,5,opt,name=appointment,proto3,oneof"`
}

type ContainedResource_AppointmentResponse struct {
	AppointmentResponse *appointment_response_go_proto.AppointmentResponse `protobuf:"bytes,6,opt,name=appointment_response,json=appointmentResponse,proto3,oneof"`
}

type ContainedResource_AuditEvent struct {
	AuditEvent *audit_event_go_proto.AuditEvent `protobuf:"bytes,7,opt,name=audit_event,json=auditEvent,proto3,oneof"`
}

type ContainedResource_Basic struct {
	Basic *basic_go_proto.Basic `protobuf:"bytes,8,opt,name=basic,proto3,oneof"`
}

type ContainedResource_Binary struct {
	Binary *binary_go_proto.Binary `protobuf:"bytes,9,opt,name=binary,proto3,oneof"`
}

type ContainedResource_BiologicallyDerivedProduct struct {
	BiologicallyDerivedProduct *biologically_derived_product_go_proto.BiologicallyDerivedProduct `protobuf:"bytes,10,opt,name=biologically_derived_product,json=biologicallyDerivedProduct,proto3,oneof"`
}

type ContainedResource_BodyStructure struct {
	BodyStructure *body_structure_go_proto.BodyStructure `protobuf:"bytes,11,opt,name=body_structure,json=bodyStructure,proto3,oneof"`
}

type ContainedResource_Bundle struct {
	Bundle *Bundle `protobuf:"bytes,12,opt,name=bundle,proto3,oneof"`
}

type ContainedResource_CapabilityStatement struct {
	CapabilityStatement *capability_statement_go_proto.CapabilityStatement `protobuf:"bytes,13,opt,name=capability_statement,json=capabilityStatement,proto3,oneof"`
}

type ContainedResource_CarePlan struct {
	CarePlan *care_plan_go_proto.CarePlan `protobuf:"bytes,14,opt,name=care_plan,json=carePlan,proto3,oneof"`
}

type ContainedResource_CareTeam struct {
	CareTeam *care_team_go_proto.CareTeam `protobuf:"bytes,15,opt,name=care_team,json=careTeam,proto3,oneof"`
}

type ContainedResource_CatalogEntry struct {
	CatalogEntry *catalog_entry_go_proto.CatalogEntry `protobuf:"bytes,16,opt,name=catalog_entry,json=catalogEntry,proto3,oneof"`
}

type ContainedResource_ChargeItem struct {
	ChargeItem *charge_item_go_proto.ChargeItem `protobuf:"bytes,17,opt,name=charge_item,json=chargeItem,proto3,oneof"`
}

type ContainedResource_ChargeItemDefinition struct {
	ChargeItemDefinition *charge_item_definition_go_proto.ChargeItemDefinition `protobuf:"bytes,18,opt,name=charge_item_definition,json=chargeItemDefinition,proto3,oneof"`
}

type ContainedResource_Claim struct {
	Claim *claim_go_proto.Claim `protobuf:"bytes,19,opt,name=claim,proto3,oneof"`
}

type ContainedResource_ClaimResponse struct {
	ClaimResponse *claim_response_go_proto.ClaimResponse `protobuf:"bytes,20,opt,name=claim_response,json=claimResponse,proto3,oneof"`
}

type ContainedResource_ClinicalImpression struct {
	ClinicalImpression *clinical_impression_go_proto.ClinicalImpression `protobuf:"bytes,21,opt,name=clinical_impression,json=clinicalImpression,proto3,oneof"`
}

type ContainedResource_CodeSystem struct {
	CodeSystem *code_system_go_proto.CodeSystem `protobuf:"bytes,22,opt,name=code_system,json=codeSystem,proto3,oneof"`
}

type ContainedResource_Communication struct {
	Communication *communication_go_proto.Communication `protobuf:"bytes,23,opt,name=communication,proto3,oneof"`
}

type ContainedResource_CommunicationRequest struct {
	CommunicationRequest *communication_request_go_proto.CommunicationRequest `protobuf:"bytes,24,opt,name=communication_request,json=communicationRequest,proto3,oneof"`
}

type ContainedResource_CompartmentDefinition struct {
	CompartmentDefinition *compartment_definition_go_proto.CompartmentDefinition `protobuf:"bytes,25,opt,name=compartment_definition,json=compartmentDefinition,proto3,oneof"`
}

type ContainedResource_Composition struct {
	Composition *composition_go_proto.Composition `protobuf:"bytes,26,opt,name=composition,proto3,oneof"`
}

type ContainedResource_ConceptMap struct {
	ConceptMap *concept_map_go_proto.ConceptMap `protobuf:"bytes,27,opt,name=concept_map,json=conceptMap,proto3,oneof"`
}

type ContainedResource_Condition struct {
	Condition *condition_go_proto.Condition `protobuf:"bytes,28,opt,name=condition,proto3,oneof"`
}

type ContainedResource_Consent struct {
	Consent *consent_go_proto.Consent `protobuf:"bytes,29,opt,name=consent,proto3,oneof"`
}

type ContainedResource_Contract struct {
	Contract *contract_go_proto.Contract `protobuf:"bytes,30,opt,name=contract,proto3,oneof"`
}

type ContainedResource_Coverage struct {
	Coverage *coverage_go_proto.Coverage `protobuf:"bytes,31,opt,name=coverage,proto3,oneof"`
}

type ContainedResource_CoverageEligibilityRequest struct {
	CoverageEligibilityRequest *coverage_eligibility_request_go_proto.CoverageEligibilityRequest `protobuf:"bytes,32,opt,name=coverage_eligibility_request,json=coverageEligibilityRequest,proto3,oneof"`
}

type ContainedResource_CoverageEligibilityResponse struct {
	CoverageEligibilityResponse *coverage_eligibility_response_go_proto.CoverageEligibilityResponse `protobuf:"bytes,33,opt,name=coverage_eligibility_response,json=coverageEligibilityResponse,proto3,oneof"`
}

type ContainedResource_DetectedIssue struct {
	DetectedIssue *detected_issue_go_proto.DetectedIssue `protobuf:"bytes,34,opt,name=detected_issue,json=detectedIssue,proto3,oneof"`
}

type ContainedResource_Device struct {
	Device *device_go_proto.Device `protobuf:"bytes,35,opt,name=device,proto3,oneof"`
}

type ContainedResource_DeviceDefinition struct {
	DeviceDefinition *device_definition_go_proto.DeviceDefinition `protobuf:"bytes,36,opt,name=device_definition,json=deviceDefinition,proto3,oneof"`
}

type ContainedResource_DeviceMetric struct {
	DeviceMetric *device_metric_go_proto.DeviceMetric `protobuf:"bytes,37,opt,name=device_metric,json=deviceMetric,proto3,oneof"`
}

type ContainedResource_DeviceRequest struct {
	DeviceRequest *device_request_go_proto.DeviceRequest `protobuf:"bytes,38,opt,name=device_request,json=deviceRequest,proto3,oneof"`
}

type ContainedResource_DeviceUseStatement struct {
	DeviceUseStatement *device_use_statement_go_proto.DeviceUseStatement `protobuf:"bytes,39,opt,name=device_use_statement,json=deviceUseStatement,proto3,oneof"`
}

type ContainedResource_DiagnosticReport struct {
	DiagnosticReport *diagnostic_report_go_proto.DiagnosticReport `protobuf:"bytes,40,opt,name=diagnostic_report,json=diagnosticReport,proto3,oneof"`
}

type ContainedResource_DocumentManifest struct {
	DocumentManifest *document_manifest_go_proto.DocumentManifest `protobuf:"bytes,41,opt,name=document_manifest,json=documentManifest,proto3,oneof"`
}

type ContainedResource_DocumentReference struct {
	DocumentReference *document_reference_go_proto.DocumentReference `protobuf:"bytes,42,opt,name=document_reference,json=documentReference,proto3,oneof"`
}

type ContainedResource_EffectEvidenceSynthesis struct {
	EffectEvidenceSynthesis *effect_evidence_synthesis_go_proto.EffectEvidenceSynthesis `protobuf:"bytes,43,opt,name=effect_evidence_synthesis,json=effectEvidenceSynthesis,proto3,oneof"`
}

type ContainedResource_Encounter struct {
	Encounter *encounter_go_proto.Encounter `protobuf:"bytes,44,opt,name=encounter,proto3,oneof"`
}

type ContainedResource_Endpoint struct {
	Endpoint *endpoint_go_proto.Endpoint `protobuf:"bytes,45,opt,name=endpoint,proto3,oneof"`
}

type ContainedResource_EnrollmentRequest struct {
	EnrollmentRequest *enrollment_request_go_proto.EnrollmentRequest `protobuf:"bytes,46,opt,name=enrollment_request,json=enrollmentRequest,proto3,oneof"`
}

type ContainedResource_EnrollmentResponse struct {
	EnrollmentResponse *enrollment_response_go_proto.EnrollmentResponse `protobuf:"bytes,47,opt,name=enrollment_response,json=enrollmentResponse,proto3,oneof"`
}

type ContainedResource_EpisodeOfCare struct {
	EpisodeOfCare *episode_of_care_go_proto.EpisodeOfCare `protobuf:"bytes,48,opt,name=episode_of_care,json=episodeOfCare,proto3,oneof"`
}

type ContainedResource_EventDefinition struct {
	EventDefinition *event_definition_go_proto.EventDefinition `protobuf:"bytes,49,opt,name=event_definition,json=eventDefinition,proto3,oneof"`
}

type ContainedResource_Evidence struct {
	Evidence *evidence_go_proto.Evidence `protobuf:"bytes,50,opt,name=evidence,proto3,oneof"`
}

type ContainedResource_EvidenceVariable struct {
	EvidenceVariable *evidence_variable_go_proto.EvidenceVariable `protobuf:"bytes,51,opt,name=evidence_variable,json=evidenceVariable,proto3,oneof"`
}

type ContainedResource_ExampleScenario struct {
	ExampleScenario *example_scenario_go_proto.ExampleScenario `protobuf:"bytes,52,opt,name=example_scenario,json=exampleScenario,proto3,oneof"`
}

type ContainedResource_ExplanationOfBenefit struct {
	ExplanationOfBenefit *explanation_of_benefit_go_proto.ExplanationOfBenefit `protobuf:"bytes,53,opt,name=explanation_of_benefit,json=explanationOfBenefit,proto3,oneof"`
}

type ContainedResource_FamilyMemberHistory struct {
	FamilyMemberHistory *family_member_history_go_proto.FamilyMemberHistory `protobuf:"bytes,54,opt,name=family_member_history,json=familyMemberHistory,proto3,oneof"`
}

type ContainedResource_Flag struct {
	Flag *flag_go_proto.Flag `protobuf:"bytes,55,opt,name=flag,proto3,oneof"`
}

type ContainedResource_Goal struct {
	Goal *goal_go_proto.Goal `protobuf:"bytes,56,opt,name=goal,proto3,oneof"`
}

type ContainedResource_GraphDefinition struct {
	GraphDefinition *graph_definition_go_proto.GraphDefinition `protobuf:"bytes,57,opt,name=graph_definition,json=graphDefinition,proto3,oneof"`
}

type ContainedResource_Group struct {
	Group *group_go_proto.Group `protobuf:"bytes,58,opt,name=group,proto3,oneof"`
}

type ContainedResource_GuidanceResponse struct {
	GuidanceResponse *guidance_response_go_proto.GuidanceResponse `protobuf:"bytes,59,opt,name=guidance_response,json=guidanceResponse,proto3,oneof"`
}

type ContainedResource_HealthcareService struct {
	HealthcareService *healthcare_service_go_proto.HealthcareService `protobuf:"bytes,60,opt,name=healthcare_service,json=healthcareService,proto3,oneof"`
}

type ContainedResource_ImagingStudy struct {
	ImagingStudy *imaging_study_go_proto.ImagingStudy `protobuf:"bytes,61,opt,name=imaging_study,json=imagingStudy,proto3,oneof"`
}

type ContainedResource_Immunization struct {
	Immunization *immunization_go_proto.Immunization `protobuf:"bytes,62,opt,name=immunization,proto3,oneof"`
}

type ContainedResource_ImmunizationEvaluation struct {
	ImmunizationEvaluation *immunization_evaluation_go_proto.ImmunizationEvaluation `protobuf:"bytes,63,opt,name=immunization_evaluation,json=immunizationEvaluation,proto3,oneof"`
}

type ContainedResource_ImmunizationRecommendation struct {
	ImmunizationRecommendation *immunization_recommendation_go_proto.ImmunizationRecommendation `protobuf:"bytes,64,opt,name=immunization_recommendation,json=immunizationRecommendation,proto3,oneof"`
}

type ContainedResource_ImplementationGuide struct {
	ImplementationGuide *implementation_guide_go_proto.ImplementationGuide `protobuf:"bytes,65,opt,name=implementation_guide,json=implementationGuide,proto3,oneof"`
}

type ContainedResource_InsurancePlan struct {
	InsurancePlan *insurance_plan_go_proto.InsurancePlan `protobuf:"bytes,66,opt,name=insurance_plan,json=insurancePlan,proto3,oneof"`
}

type ContainedResource_Invoice struct {
	Invoice *invoice_go_proto.Invoice `protobuf:"bytes,67,opt,name=invoice,proto3,oneof"`
}

type ContainedResource_Library struct {
	Library *library_go_proto.Library `protobuf:"bytes,68,opt,name=library,proto3,oneof"`
}

type ContainedResource_Linkage struct {
	Linkage *linkage_go_proto.Linkage `protobuf:"bytes,69,opt,name=linkage,proto3,oneof"`
}

type ContainedResource_List struct {
	List *list_go_proto.List `protobuf:"bytes,70,opt,name=list,proto3,oneof"`
}

type ContainedResource_Location struct {
	Location *location_go_proto.Location `protobuf:"bytes,71,opt,name=location,proto3,oneof"`
}

type ContainedResource_Measure struct {
	Measure *measure_go_proto.Measure `protobuf:"bytes,72,opt,name=measure,proto3,oneof"`
}

type ContainedResource_MeasureReport struct {
	MeasureReport *measure_report_go_proto.MeasureReport `protobuf:"bytes,73,opt,name=measure_report,json=measureReport,proto3,oneof"`
}

type ContainedResource_Media struct {
	Media *media_go_proto.Media `protobuf:"bytes,74,opt,name=media,proto3,oneof"`
}

type ContainedResource_Medication struct {
	Medication *medication_go_proto.Medication `protobuf:"bytes,75,opt,name=medication,proto3,oneof"`
}

type ContainedResource_MedicationAdministration struct {
	MedicationAdministration *medication_administration_go_proto.MedicationAdministration `protobuf:"bytes,76,opt,name=medication_administration,json=medicationAdministration,proto3,oneof"`
}

type ContainedResource_MedicationDispense struct {
	MedicationDispense *medication_dispense_go_proto.MedicationDispense `protobuf:"bytes,77,opt,name=medication_dispense,json=medicationDispense,proto3,oneof"`
}

type ContainedResource_MedicationKnowledge struct {
	MedicationKnowledge *medication_knowledge_go_proto.MedicationKnowledge `protobuf:"bytes,78,opt,name=medication_knowledge,json=medicationKnowledge,proto3,oneof"`
}

type ContainedResource_MedicationRequest struct {
	MedicationRequest *medication_request_go_proto.MedicationRequest `protobuf:"bytes,79,opt,name=medication_request,json=medicationRequest,proto3,oneof"`
}

type ContainedResource_MedicationStatement struct {
	MedicationStatement *medication_statement_go_proto.MedicationStatement `protobuf:"bytes,80,opt,name=medication_statement,json=medicationStatement,proto3,oneof"`
}

type ContainedResource_MedicinalProduct struct {
	MedicinalProduct *medicinal_product_go_proto.MedicinalProduct `protobuf:"bytes,81,opt,name=medicinal_product,json=medicinalProduct,proto3,oneof"`
}

type ContainedResource_MedicinalProductAuthorization struct {
	MedicinalProductAuthorization *medicinal_product_authorization_go_proto.MedicinalProductAuthorization `protobuf:"bytes,82,opt,name=medicinal_product_authorization,json=medicinalProductAuthorization,proto3,oneof"`
}

type ContainedResource_MedicinalProductContraindication struct {
	MedicinalProductContraindication *medicinal_product_contraindication_go_proto.MedicinalProductContraindication `protobuf:"bytes,83,opt,name=medicinal_product_contraindication,json=medicinalProductContraindication,proto3,oneof"`
}

type ContainedResource_MedicinalProductIndication struct {
	MedicinalProductIndication *medicinal_product_indication_go_proto.MedicinalProductIndication `protobuf:"bytes,84,opt,name=medicinal_product_indication,json=medicinalProductIndication,proto3,oneof"`
}

type ContainedResource_MedicinalProductIngredient struct {
	MedicinalProductIngredient *medicinal_product_ingredient_go_proto.MedicinalProductIngredient `protobuf:"bytes,85,opt,name=medicinal_product_ingredient,json=medicinalProductIngredient,proto3,oneof"`
}

type ContainedResource_MedicinalProductInteraction struct {
	MedicinalProductInteraction *medicinal_product_interaction_go_proto.MedicinalProductInteraction `protobuf:"bytes,86,opt,name=medicinal_product_interaction,json=medicinalProductInteraction,proto3,oneof"`
}

type ContainedResource_MedicinalProductManufactured struct {
	MedicinalProductManufactured *medicinal_product_manufactured_go_proto.MedicinalProductManufactured `protobuf:"bytes,87,opt,name=medicinal_product_manufactured,json=medicinalProductManufactured,proto3,oneof"`
}

type ContainedResource_MedicinalProductPackaged struct {
	MedicinalProductPackaged *medicinal_product_packaged_go_proto.MedicinalProductPackaged `protobuf:"bytes,88,opt,name=medicinal_product_packaged,json=medicinalProductPackaged,proto3,oneof"`
}

type ContainedResource_MedicinalProductPharmaceutical struct {
	MedicinalProductPharmaceutical *medicinal_product_pharmaceutical_go_proto.MedicinalProductPharmaceutical `protobuf:"bytes,89,opt,name=medicinal_product_pharmaceutical,json=medicinalProductPharmaceutical,proto3,oneof"`
}

type ContainedResource_MedicinalProductUndesirableEffect struct {
	MedicinalProductUndesirableEffect *medicinal_product_undesirable_effect_go_proto.MedicinalProductUndesirableEffect `protobuf:"bytes,90,opt,name=medicinal_product_undesirable_effect,json=medicinalProductUndesirableEffect,proto3,oneof"`
}

type ContainedResource_MessageDefinition struct {
	MessageDefinition *message_definition_go_proto.MessageDefinition `protobuf:"bytes,91,opt,name=message_definition,json=messageDefinition,proto3,oneof"`
}

type ContainedResource_MessageHeader struct {
	MessageHeader *message_header_go_proto.MessageHeader `protobuf:"bytes,92,opt,name=message_header,json=messageHeader,proto3,oneof"`
}

type ContainedResource_MolecularSequence struct {
	MolecularSequence *molecular_sequence_go_proto.MolecularSequence `protobuf:"bytes,93,opt,name=molecular_sequence,json=molecularSequence,proto3,oneof"`
}

type ContainedResource_NamingSystem struct {
	NamingSystem *naming_system_go_proto.NamingSystem `protobuf:"bytes,94,opt,name=naming_system,json=namingSystem,proto3,oneof"`
}

type ContainedResource_NutritionOrder struct {
	NutritionOrder *nutrition_order_go_proto.NutritionOrder `protobuf:"bytes,95,opt,name=nutrition_order,json=nutritionOrder,proto3,oneof"`
}

type ContainedResource_Observation struct {
	Observation *observation_go_proto.Observation `protobuf:"bytes,96,opt,name=observation,proto3,oneof"`
}

type ContainedResource_ObservationDefinition struct {
	ObservationDefinition *observation_definition_go_proto.ObservationDefinition `protobuf:"bytes,97,opt,name=observation_definition,json=observationDefinition,proto3,oneof"`
}

type ContainedResource_OperationDefinition struct {
	OperationDefinition *operation_definition_go_proto.OperationDefinition `protobuf:"bytes,98,opt,name=operation_definition,json=operationDefinition,proto3,oneof"`
}

type ContainedResource_OperationOutcome struct {
	OperationOutcome *operation_outcome_go_proto.OperationOutcome `protobuf:"bytes,99,opt,name=operation_outcome,json=operationOutcome,proto3,oneof"`
}

type ContainedResource_Organization struct {
	Organization *organization_go_proto.Organization `protobuf:"bytes,100,opt,name=organization,proto3,oneof"`
}

type ContainedResource_OrganizationAffiliation struct {
	OrganizationAffiliation *organization_affiliation_go_proto.OrganizationAffiliation `protobuf:"bytes,101,opt,name=organization_affiliation,json=organizationAffiliation,proto3,oneof"`
}

type ContainedResource_Parameters struct {
	Parameters *parameters_go_proto.Parameters `protobuf:"bytes,102,opt,name=parameters,proto3,oneof"`
}

type ContainedResource_Patient struct {
	Patient *patient_go_proto.Patient `protobuf:"bytes,103,opt,name=patient,proto3,oneof"`
}

type ContainedResource_PaymentNotice struct {
	PaymentNotice *payment_notice_go_proto.PaymentNotice `protobuf:"bytes,104,opt,name=payment_notice,json=paymentNotice,proto3,oneof"`
}

type ContainedResource_PaymentReconciliation struct {
	PaymentReconciliation *payment_reconciliation_go_proto.PaymentReconciliation `protobuf:"bytes,105,opt,name=payment_reconciliation,json=paymentReconciliation,proto3,oneof"`
}

type ContainedResource_Person struct {
	Person *person_go_proto.Person `protobuf:"bytes,106,opt,name=person,proto3,oneof"`
}

type ContainedResource_PlanDefinition struct {
	PlanDefinition *plan_definition_go_proto.PlanDefinition `protobuf:"bytes,107,opt,name=plan_definition,json=planDefinition,proto3,oneof"`
}

type ContainedResource_Practitioner struct {
	Practitioner *practitioner_go_proto.Practitioner `protobuf:"bytes,108,opt,name=practitioner,proto3,oneof"`
}

type ContainedResource_PractitionerRole struct {
	PractitionerRole *practitioner_role_go_proto.PractitionerRole `protobuf:"bytes,109,opt,name=practitioner_role,json=practitionerRole,proto3,oneof"`
}

type ContainedResource_Procedure struct {
	Procedure *procedure_go_proto.Procedure `protobuf:"bytes,110,opt,name=procedure,proto3,oneof"`
}

type ContainedResource_Provenance struct {
	Provenance *provenance_go_proto.Provenance `protobuf:"bytes,111,opt,name=provenance,proto3,oneof"`
}

type ContainedResource_Questionnaire struct {
	Questionnaire *questionnaire_go_proto.Questionnaire `protobuf:"bytes,112,opt,name=questionnaire,proto3,oneof"`
}

type ContainedResource_QuestionnaireResponse struct {
	QuestionnaireResponse *questionnaire_response_go_proto.QuestionnaireResponse `protobuf:"bytes,113,opt,name=questionnaire_response,json=questionnaireResponse,proto3,oneof"`
}

type ContainedResource_RelatedPerson struct {
	RelatedPerson *related_person_go_proto.RelatedPerson `protobuf:"bytes,114,opt,name=related_person,json=relatedPerson,proto3,oneof"`
}

type ContainedResource_RequestGroup struct {
	RequestGroup *request_group_go_proto.RequestGroup `protobuf:"bytes,115,opt,name=request_group,json=requestGroup,proto3,oneof"`
}

type ContainedResource_ResearchDefinition struct {
	ResearchDefinition *research_definition_go_proto.ResearchDefinition `protobuf:"bytes,116,opt,name=research_definition,json=researchDefinition,proto3,oneof"`
}

type ContainedResource_ResearchElementDefinition struct {
	ResearchElementDefinition *research_element_definition_go_proto.ResearchElementDefinition `protobuf:"bytes,117,opt,name=research_element_definition,json=researchElementDefinition,proto3,oneof"`
}

type ContainedResource_ResearchStudy struct {
	ResearchStudy *research_study_go_proto.ResearchStudy `protobuf:"bytes,118,opt,name=research_study,json=researchStudy,proto3,oneof"`
}

type ContainedResource_ResearchSubject struct {
	ResearchSubject *research_subject_go_proto.ResearchSubject `protobuf:"bytes,119,opt,name=research_subject,json=researchSubject,proto3,oneof"`
}

type ContainedResource_RiskAssessment struct {
	RiskAssessment *risk_assessment_go_proto.RiskAssessment `protobuf:"bytes,120,opt,name=risk_assessment,json=riskAssessment,proto3,oneof"`
}

type ContainedResource_RiskEvidenceSynthesis struct {
	RiskEvidenceSynthesis *risk_evidence_synthesis_go_proto.RiskEvidenceSynthesis `protobuf:"bytes,121,opt,name=risk_evidence_synthesis,json=riskEvidenceSynthesis,proto3,oneof"`
}

type ContainedResource_Schedule struct {
	Schedule *schedule_go_proto.Schedule `protobuf:"bytes,122,opt,name=schedule,proto3,oneof"`
}

type ContainedResource_SearchParameter struct {
	SearchParameter *search_parameter_go_proto.SearchParameter `protobuf:"bytes,123,opt,name=search_parameter,json=searchParameter,proto3,oneof"`
}

type ContainedResource_ServiceRequest struct {
	ServiceRequest *service_request_go_proto.ServiceRequest `protobuf:"bytes,124,opt,name=service_request,json=serviceRequest,proto3,oneof"`
}

type ContainedResource_Slot struct {
	Slot *slot_go_proto.Slot `protobuf:"bytes,125,opt,name=slot,proto3,oneof"`
}

type ContainedResource_Specimen struct {
	Specimen *specimen_go_proto.Specimen `protobuf:"bytes,126,opt,name=specimen,proto3,oneof"`
}

type ContainedResource_SpecimenDefinition struct {
	SpecimenDefinition *specimen_definition_go_proto.SpecimenDefinition `protobuf:"bytes,127,opt,name=specimen_definition,json=specimenDefinition,proto3,oneof"`
}

type ContainedResource_StructureDefinition struct {
	StructureDefinition *structure_definition_go_proto.StructureDefinition `protobuf:"bytes,128,opt,name=structure_definition,json=structureDefinition,proto3,oneof"`
}

type ContainedResource_StructureMap struct {
	StructureMap *structure_map_go_proto.StructureMap `protobuf:"bytes,129,opt,name=structure_map,json=structureMap,proto3,oneof"`
}

type ContainedResource_Subscription struct {
	Subscription *subscription_go_proto.Subscription `protobuf:"bytes,130,opt,name=subscription,proto3,oneof"`
}

type ContainedResource_Substance struct {
	Substance *substance_go_proto.Substance `protobuf:"bytes,131,opt,name=substance,proto3,oneof"`
}

type ContainedResource_SubstanceNucleicAcid struct {
	SubstanceNucleicAcid *substance_nucleic_acid_go_proto.SubstanceNucleicAcid `protobuf:"bytes,132,opt,name=substance_nucleic_acid,json=substanceNucleicAcid,proto3,oneof"`
}

type ContainedResource_SubstancePolymer struct {
	SubstancePolymer *substance_polymer_go_proto.SubstancePolymer `protobuf:"bytes,133,opt,name=substance_polymer,json=substancePolymer,proto3,oneof"`
}

type ContainedResource_SubstanceProtein struct {
	SubstanceProtein *substance_protein_go_proto.SubstanceProtein `protobuf:"bytes,134,opt,name=substance_protein,json=substanceProtein,proto3,oneof"`
}

type ContainedResource_SubstanceReferenceInformation struct {
	SubstanceReferenceInformation *substance_reference_information_go_proto.SubstanceReferenceInformation `protobuf:"bytes,135,opt,name=substance_reference_information,json=substanceReferenceInformation,proto3,oneof"`
}

type ContainedResource_SubstanceSourceMaterial struct {
	SubstanceSourceMaterial *substance_source_material_go_proto.SubstanceSourceMaterial `protobuf:"bytes,136,opt,name=substance_source_material,json=substanceSourceMaterial,proto3,oneof"`
}

type ContainedResource_SubstanceSpecification struct {
	SubstanceSpecification *substance_specification_go_proto.SubstanceSpecification `protobuf:"bytes,137,opt,name=substance_specification,json=substanceSpecification,proto3,oneof"`
}

type ContainedResource_SupplyDelivery struct {
	SupplyDelivery *supply_delivery_go_proto.SupplyDelivery `protobuf:"bytes,138,opt,name=supply_delivery,json=supplyDelivery,proto3,oneof"`
}

type ContainedResource_SupplyRequest struct {
	SupplyRequest *supply_request_go_proto.SupplyRequest `protobuf:"bytes,139,opt,name=supply_request,json=supplyRequest,proto3,oneof"`
}

type ContainedResource_Task struct {
	Task *task_go_proto.Task `protobuf:"bytes,140,opt,name=task,proto3,oneof"`
}

type ContainedResource_TerminologyCapabilities struct {
	TerminologyCapabilities *terminology_capabilities_go_proto.TerminologyCapabilities `protobuf:"bytes,141,opt,name=terminology_capabilities,json=terminologyCapabilities,proto3,oneof"`
}

type ContainedResource_TestReport struct {
	TestReport *test_report_go_proto.TestReport `protobuf:"bytes,142,opt,name=test_report,json=testReport,proto3,oneof"`
}

type ContainedResource_TestScript struct {
	TestScript *test_script_go_proto.TestScript `protobuf:"bytes,143,opt,name=test_script,json=testScript,proto3,oneof"`
}

type ContainedResource_ValueSet struct {
	ValueSet *value_set_go_proto.ValueSet `protobuf:"bytes,144,opt,name=value_set,json=valueSet,proto3,oneof"`
}

type ContainedResource_VerificationResult struct {
	VerificationResult *verification_result_go_proto.VerificationResult `protobuf:"bytes,145,opt,name=verification_result,json=verificationResult,proto3,oneof"`
}

type ContainedResource_VisionPrescription struct {
	VisionPrescription *vision_prescription_go_proto.VisionPrescription `protobuf:"bytes,146,opt,name=vision_prescription,json=visionPrescription,proto3,oneof"`
}

func (*ContainedResource_Account) isContainedResource_OneofResource() {}

func (*ContainedResource_ActivityDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_AdverseEvent) isContainedResource_OneofResource() {}

func (*ContainedResource_AllergyIntolerance) isContainedResource_OneofResource() {}

func (*ContainedResource_Appointment) isContainedResource_OneofResource() {}

func (*ContainedResource_AppointmentResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_AuditEvent) isContainedResource_OneofResource() {}

func (*ContainedResource_Basic) isContainedResource_OneofResource() {}

func (*ContainedResource_Binary) isContainedResource_OneofResource() {}

func (*ContainedResource_BiologicallyDerivedProduct) isContainedResource_OneofResource() {}

func (*ContainedResource_BodyStructure) isContainedResource_OneofResource() {}

func (*ContainedResource_Bundle) isContainedResource_OneofResource() {}

func (*ContainedResource_CapabilityStatement) isContainedResource_OneofResource() {}

func (*ContainedResource_CarePlan) isContainedResource_OneofResource() {}

func (*ContainedResource_CareTeam) isContainedResource_OneofResource() {}

func (*ContainedResource_CatalogEntry) isContainedResource_OneofResource() {}

func (*ContainedResource_ChargeItem) isContainedResource_OneofResource() {}

func (*ContainedResource_ChargeItemDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Claim) isContainedResource_OneofResource() {}

func (*ContainedResource_ClaimResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_ClinicalImpression) isContainedResource_OneofResource() {}

func (*ContainedResource_CodeSystem) isContainedResource_OneofResource() {}

func (*ContainedResource_Communication) isContainedResource_OneofResource() {}

func (*ContainedResource_CommunicationRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_CompartmentDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Composition) isContainedResource_OneofResource() {}

func (*ContainedResource_ConceptMap) isContainedResource_OneofResource() {}

func (*ContainedResource_Condition) isContainedResource_OneofResource() {}

func (*ContainedResource_Consent) isContainedResource_OneofResource() {}

func (*ContainedResource_Contract) isContainedResource_OneofResource() {}

func (*ContainedResource_Coverage) isContainedResource_OneofResource() {}

func (*ContainedResource_CoverageEligibilityRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_CoverageEligibilityResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_DetectedIssue) isContainedResource_OneofResource() {}

func (*ContainedResource_Device) isContainedResource_OneofResource() {}

func (*ContainedResource_DeviceDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_DeviceMetric) isContainedResource_OneofResource() {}

func (*ContainedResource_DeviceRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_DeviceUseStatement) isContainedResource_OneofResource() {}

func (*ContainedResource_DiagnosticReport) isContainedResource_OneofResource() {}

func (*ContainedResource_DocumentManifest) isContainedResource_OneofResource() {}

func (*ContainedResource_DocumentReference) isContainedResource_OneofResource() {}

func (*ContainedResource_EffectEvidenceSynthesis) isContainedResource_OneofResource() {}

func (*ContainedResource_Encounter) isContainedResource_OneofResource() {}

func (*ContainedResource_Endpoint) isContainedResource_OneofResource() {}

func (*ContainedResource_EnrollmentRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_EnrollmentResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_EpisodeOfCare) isContainedResource_OneofResource() {}

func (*ContainedResource_EventDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Evidence) isContainedResource_OneofResource() {}

func (*ContainedResource_EvidenceVariable) isContainedResource_OneofResource() {}

func (*ContainedResource_ExampleScenario) isContainedResource_OneofResource() {}

func (*ContainedResource_ExplanationOfBenefit) isContainedResource_OneofResource() {}

func (*ContainedResource_FamilyMemberHistory) isContainedResource_OneofResource() {}

func (*ContainedResource_Flag) isContainedResource_OneofResource() {}

func (*ContainedResource_Goal) isContainedResource_OneofResource() {}

func (*ContainedResource_GraphDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Group) isContainedResource_OneofResource() {}

func (*ContainedResource_GuidanceResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_HealthcareService) isContainedResource_OneofResource() {}

func (*ContainedResource_ImagingStudy) isContainedResource_OneofResource() {}

func (*ContainedResource_Immunization) isContainedResource_OneofResource() {}

func (*ContainedResource_ImmunizationEvaluation) isContainedResource_OneofResource() {}

func (*ContainedResource_ImmunizationRecommendation) isContainedResource_OneofResource() {}

func (*ContainedResource_ImplementationGuide) isContainedResource_OneofResource() {}

func (*ContainedResource_InsurancePlan) isContainedResource_OneofResource() {}

func (*ContainedResource_Invoice) isContainedResource_OneofResource() {}

func (*ContainedResource_Library) isContainedResource_OneofResource() {}

func (*ContainedResource_Linkage) isContainedResource_OneofResource() {}

func (*ContainedResource_List) isContainedResource_OneofResource() {}

func (*ContainedResource_Location) isContainedResource_OneofResource() {}

func (*ContainedResource_Measure) isContainedResource_OneofResource() {}

func (*ContainedResource_MeasureReport) isContainedResource_OneofResource() {}

func (*ContainedResource_Media) isContainedResource_OneofResource() {}

func (*ContainedResource_Medication) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationAdministration) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationDispense) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationKnowledge) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicationStatement) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProduct) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductAuthorization) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductContraindication) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductIndication) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductIngredient) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductInteraction) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductManufactured) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductPackaged) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductPharmaceutical) isContainedResource_OneofResource() {}

func (*ContainedResource_MedicinalProductUndesirableEffect) isContainedResource_OneofResource() {}

func (*ContainedResource_MessageDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_MessageHeader) isContainedResource_OneofResource() {}

func (*ContainedResource_MolecularSequence) isContainedResource_OneofResource() {}

func (*ContainedResource_NamingSystem) isContainedResource_OneofResource() {}

func (*ContainedResource_NutritionOrder) isContainedResource_OneofResource() {}

func (*ContainedResource_Observation) isContainedResource_OneofResource() {}

func (*ContainedResource_ObservationDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_OperationDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_OperationOutcome) isContainedResource_OneofResource() {}

func (*ContainedResource_Organization) isContainedResource_OneofResource() {}

func (*ContainedResource_OrganizationAffiliation) isContainedResource_OneofResource() {}

func (*ContainedResource_Parameters) isContainedResource_OneofResource() {}

func (*ContainedResource_Patient) isContainedResource_OneofResource() {}

func (*ContainedResource_PaymentNotice) isContainedResource_OneofResource() {}

func (*ContainedResource_PaymentReconciliation) isContainedResource_OneofResource() {}

func (*ContainedResource_Person) isContainedResource_OneofResource() {}

func (*ContainedResource_PlanDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_Practitioner) isContainedResource_OneofResource() {}

func (*ContainedResource_PractitionerRole) isContainedResource_OneofResource() {}

func (*ContainedResource_Procedure) isContainedResource_OneofResource() {}

func (*ContainedResource_Provenance) isContainedResource_OneofResource() {}

func (*ContainedResource_Questionnaire) isContainedResource_OneofResource() {}

func (*ContainedResource_QuestionnaireResponse) isContainedResource_OneofResource() {}

func (*ContainedResource_RelatedPerson) isContainedResource_OneofResource() {}

func (*ContainedResource_RequestGroup) isContainedResource_OneofResource() {}

func (*ContainedResource_ResearchDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_ResearchElementDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_ResearchStudy) isContainedResource_OneofResource() {}

func (*ContainedResource_ResearchSubject) isContainedResource_OneofResource() {}

func (*ContainedResource_RiskAssessment) isContainedResource_OneofResource() {}

func (*ContainedResource_RiskEvidenceSynthesis) isContainedResource_OneofResource() {}

func (*ContainedResource_Schedule) isContainedResource_OneofResource() {}

func (*ContainedResource_SearchParameter) isContainedResource_OneofResource() {}

func (*ContainedResource_ServiceRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_Slot) isContainedResource_OneofResource() {}

func (*ContainedResource_Specimen) isContainedResource_OneofResource() {}

func (*ContainedResource_SpecimenDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_StructureDefinition) isContainedResource_OneofResource() {}

func (*ContainedResource_StructureMap) isContainedResource_OneofResource() {}

func (*ContainedResource_Subscription) isContainedResource_OneofResource() {}

func (*ContainedResource_Substance) isContainedResource_OneofResource() {}

func (*ContainedResource_SubstanceNucleicAcid) isContainedResource_OneofResource() {}

func (*ContainedResource_SubstancePolymer) isContainedResource_OneofResource() {}

func (*ContainedResource_SubstanceProtein) isContainedResource_OneofResource() {}

func (*ContainedResource_SubstanceReferenceInformation) isContainedResource_OneofResource() {}

func (*ContainedResource_SubstanceSourceMaterial) isContainedResource_OneofResource() {}

func (*ContainedResource_SubstanceSpecification) isContainedResource_OneofResource() {}

func (*ContainedResource_SupplyDelivery) isContainedResource_OneofResource() {}

func (*ContainedResource_SupplyRequest) isContainedResource_OneofResource() {}

func (*ContainedResource_Task) isContainedResource_OneofResource() {}

func (*ContainedResource_TerminologyCapabilities) isContainedResource_OneofResource() {}

func (*ContainedResource_TestReport) isContainedResource_OneofResource() {}

func (*ContainedResource_TestScript) isContainedResource_OneofResource() {}

func (*ContainedResource_ValueSet) isContainedResource_OneofResource() {}

func (*ContainedResource_VerificationResult) isContainedResource_OneofResource() {}

func (*ContainedResource_VisionPrescription) isContainedResource_OneofResource() {}

// document | message | transaction | transaction-response | batch |
// batch-response | history | searchset | collection
type Bundle_TypeCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.BundleTypeCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.BundleTypeCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension     `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *Bundle_TypeCode) Reset() {
	*x = Bundle_TypeCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle_TypeCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle_TypeCode) ProtoMessage() {}

func (x *Bundle_TypeCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle_TypeCode.ProtoReflect.Descriptor instead.
func (*Bundle_TypeCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Bundle_TypeCode) GetValue() codes_go_proto.BundleTypeCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.BundleTypeCode_Value(0)
}

func (x *Bundle_TypeCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle_TypeCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Links related to this Bundle
type Bundle_Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// See
	// http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1
	Relation *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
	// Reference details for the link
	Url *datatypes_go_proto.Uri `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Bundle_Link) Reset() {
	*x = Bundle_Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle_Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle_Link) ProtoMessage() {}

func (x *Bundle_Link) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle_Link.ProtoReflect.Descriptor instead.
func (*Bundle_Link) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Bundle_Link) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle_Link) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Bundle_Link) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *Bundle_Link) GetRelation() *datatypes_go_proto.String {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *Bundle_Link) GetUrl() *datatypes_go_proto.Uri {
	if x != nil {
		return x.Url
	}
	return nil
}

// Entry in the bundle - will have a resource or information
type Bundle_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Links related to this entry
	Link []*Bundle_Link `protobuf:"bytes,4,rep,name=link,proto3" json:"link,omitempty"`
	// URI for resource (Absolute URL server address or URI for UUID/OID)
	FullUrl *datatypes_go_proto.Uri `protobuf:"bytes,5,opt,name=full_url,json=fullUrl,proto3" json:"full_url,omitempty"`
	// A resource in the bundle
	Resource *ContainedResource     `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	Search   *Bundle_Entry_Search   `protobuf:"bytes,7,opt,name=search,proto3" json:"search,omitempty"`
	Request  *Bundle_Entry_Request  `protobuf:"bytes,8,opt,name=request,proto3" json:"request,omitempty"`
	Response *Bundle_Entry_Response `protobuf:"bytes,9,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Bundle_Entry) Reset() {
	*x = Bundle_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle_Entry) ProtoMessage() {}

func (x *Bundle_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle_Entry.ProtoReflect.Descriptor instead.
func (*Bundle_Entry) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Bundle_Entry) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle_Entry) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Bundle_Entry) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *Bundle_Entry) GetLink() []*Bundle_Link {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *Bundle_Entry) GetFullUrl() *datatypes_go_proto.Uri {
	if x != nil {
		return x.FullUrl
	}
	return nil
}

func (x *Bundle_Entry) GetResource() *ContainedResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Bundle_Entry) GetSearch() *Bundle_Entry_Search {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *Bundle_Entry) GetRequest() *Bundle_Entry_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Bundle_Entry) GetResponse() *Bundle_Entry_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Search related information
type Bundle_Entry_Search struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Mode              *Bundle_Entry_Search_ModeCode   `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	// Search ranking (between 0 and 1)
	Score *datatypes_go_proto.Decimal `protobuf:"bytes,5,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Bundle_Entry_Search) Reset() {
	*x = Bundle_Entry_Search{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle_Entry_Search) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle_Entry_Search) ProtoMessage() {}

func (x *Bundle_Entry_Search) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle_Entry_Search.ProtoReflect.Descriptor instead.
func (*Bundle_Entry_Search) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Bundle_Entry_Search) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle_Entry_Search) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Bundle_Entry_Search) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *Bundle_Entry_Search) GetMode() *Bundle_Entry_Search_ModeCode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *Bundle_Entry_Search) GetScore() *datatypes_go_proto.Decimal {
	if x != nil {
		return x.Score
	}
	return nil
}

// Additional execution information (transaction/batch/history)
type Bundle_Entry_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension  `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Method            *Bundle_Entry_Request_MethodCode `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	// URL for HTTP equivalent of this entry
	Url *datatypes_go_proto.Uri `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// For managing cache currency
	IfNoneMatch *datatypes_go_proto.String `protobuf:"bytes,6,opt,name=if_none_match,json=ifNoneMatch,proto3" json:"if_none_match,omitempty"`
	// For managing cache currency
	IfModifiedSince *datatypes_go_proto.Instant `protobuf:"bytes,7,opt,name=if_modified_since,json=ifModifiedSince,proto3" json:"if_modified_since,omitempty"`
	// For managing update contention
	IfMatch *datatypes_go_proto.String `protobuf:"bytes,8,opt,name=if_match,json=ifMatch,proto3" json:"if_match,omitempty"`
	// For conditional creates
	IfNoneExist *datatypes_go_proto.String `protobuf:"bytes,9,opt,name=if_none_exist,json=ifNoneExist,proto3" json:"if_none_exist,omitempty"`
}

func (x *Bundle_Entry_Request) Reset() {
	*x = Bundle_Entry_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle_Entry_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle_Entry_Request) ProtoMessage() {}

func (x *Bundle_Entry_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle_Entry_Request.ProtoReflect.Descriptor instead.
func (*Bundle_Entry_Request) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *Bundle_Entry_Request) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle_Entry_Request) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Bundle_Entry_Request) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *Bundle_Entry_Request) GetMethod() *Bundle_Entry_Request_MethodCode {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *Bundle_Entry_Request) GetUrl() *datatypes_go_proto.Uri {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *Bundle_Entry_Request) GetIfNoneMatch() *datatypes_go_proto.String {
	if x != nil {
		return x.IfNoneMatch
	}
	return nil
}

func (x *Bundle_Entry_Request) GetIfModifiedSince() *datatypes_go_proto.Instant {
	if x != nil {
		return x.IfModifiedSince
	}
	return nil
}

func (x *Bundle_Entry_Request) GetIfMatch() *datatypes_go_proto.String {
	if x != nil {
		return x.IfMatch
	}
	return nil
}

func (x *Bundle_Entry_Request) GetIfNoneExist() *datatypes_go_proto.String {
	if x != nil {
		return x.IfNoneExist
	}
	return nil
}

// Results of execution (transaction/batch/history)
type Bundle_Entry_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Status response code (text optional)
	Status *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// The location (if the operation returns a location)
	Location *datatypes_go_proto.Uri `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// The Etag for the resource (if relevant)
	Etag *datatypes_go_proto.String `protobuf:"bytes,6,opt,name=etag,proto3" json:"etag,omitempty"`
	// Server's date time modified
	LastModified *datatypes_go_proto.Instant `protobuf:"bytes,7,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	// OperationOutcome with hints and warnings (for batch/transaction)
	Outcome *ContainedResource `protobuf:"bytes,8,opt,name=outcome,proto3" json:"outcome,omitempty"`
}

func (x *Bundle_Entry_Response) Reset() {
	*x = Bundle_Entry_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle_Entry_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle_Entry_Response) ProtoMessage() {}

func (x *Bundle_Entry_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle_Entry_Response.ProtoReflect.Descriptor instead.
func (*Bundle_Entry_Response) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0, 2, 2}
}

func (x *Bundle_Entry_Response) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle_Entry_Response) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Bundle_Entry_Response) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *Bundle_Entry_Response) GetStatus() *datatypes_go_proto.String {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Bundle_Entry_Response) GetLocation() *datatypes_go_proto.Uri {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Bundle_Entry_Response) GetEtag() *datatypes_go_proto.String {
	if x != nil {
		return x.Etag
	}
	return nil
}

func (x *Bundle_Entry_Response) GetLastModified() *datatypes_go_proto.Instant {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *Bundle_Entry_Response) GetOutcome() *ContainedResource {
	if x != nil {
		return x.Outcome
	}
	return nil
}

// match | include | outcome - why this is in the result set
type Bundle_Entry_Search_ModeCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.SearchEntryModeCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.SearchEntryModeCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension          `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *Bundle_Entry_Search_ModeCode) Reset() {
	*x = Bundle_Entry_Search_ModeCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle_Entry_Search_ModeCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle_Entry_Search_ModeCode) ProtoMessage() {}

func (x *Bundle_Entry_Search_ModeCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle_Entry_Search_ModeCode.ProtoReflect.Descriptor instead.
func (*Bundle_Entry_Search_ModeCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

func (x *Bundle_Entry_Search_ModeCode) GetValue() codes_go_proto.SearchEntryModeCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.SearchEntryModeCode_Value(0)
}

func (x *Bundle_Entry_Search_ModeCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle_Entry_Search_ModeCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// GET | HEAD | POST | PUT | DELETE | PATCH
type Bundle_Entry_Request_MethodCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.HTTPVerbCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.HTTPVerbCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension   `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *Bundle_Entry_Request_MethodCode) Reset() {
	*x = Bundle_Entry_Request_MethodCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bundle_Entry_Request_MethodCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bundle_Entry_Request_MethodCode) ProtoMessage() {}

func (x *Bundle_Entry_Request_MethodCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bundle_Entry_Request_MethodCode.ProtoReflect.Descriptor instead.
func (*Bundle_Entry_Request_MethodCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP(), []int{0, 2, 1, 0}
}

func (x *Bundle_Entry_Request_MethodCode) GetValue() codes_go_proto.HTTPVerbCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.HTTPVerbCode_Value(0)
}

func (x *Bundle_Entry_Request_MethodCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bundle_Entry_Request_MethodCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

var File_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDesc = []byte{
	0x0a, 0x4d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e,
	0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x35, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4c,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x69, 0x6f, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x39, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61,
	0x72, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x45, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x38, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x4d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x36, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x42, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x49, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x65,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x38, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x42, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x43, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x61, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x66, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x45, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x66, 0x6c, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x40, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x42,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x63, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x3c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x47, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x3e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x35, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x49, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x44, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x42, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x52, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4c, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x50, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70,
	0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x65, 0x75, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x54, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x42, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x42, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c,
	0x61, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x75, 0x74, 0x72,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x3c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x48, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x4b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x3f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x69, 0x73, 0x6b, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x47, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x69, 0x73, 0x6b,
	0x5f, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x63, 0x6c, 0x65, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x49, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x47, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x48, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x43, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x26, 0x0a,
	0x06, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72,
	0x69, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0,
	0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x9e, 0x02, 0x0a, 0x08,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x66, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x28, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xb5, 0x02, 0x0a,
	0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3f, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x06,
	0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x32, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x1a, 0xd0, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x33,
	0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x07, 0x66, 0x75, 0x6c, 0x6c,
	0x55, 0x72, 0x6c, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x43, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xe9, 0x04, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0xa9, 0x02, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6c, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01,
	0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x64, 0x65, 0x1a, 0xf0, 0x06, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06,
	0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x32,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x55, 0x72, 0x69, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x69, 0x66, 0x4e, 0x6f, 0x6e, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x48, 0x0a, 0x11, 0x69, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x0f, 0x69, 0x66,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a,
	0x08, 0x69, 0x66, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x69, 0x66,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x6e, 0x65,
	0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x69, 0x66, 0x4e, 0x6f, 0x6e,
	0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x1a, 0x9c, 0x02, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x56,
	0x65, 0x72, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x64, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x26, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x65, 0x74, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2d, 0x76, 0x65, 0x72, 0x62, 0xc0, 0x9f, 0xe3,
	0xb6, 0x05, 0x01, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xed, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a,
	0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04,
	0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67,
	0x12, 0x41, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x6f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x3a, 0x40, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x3a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x20, 0x6f,
	0x72, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x3a, 0x89, 0x08, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03,
	0xb2, 0xfe, 0xe4, 0x97, 0x06, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x3b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x2e,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x74, 0x79, 0x70, 0x65,
	0x20, 0x3d, 0x20, 0x27, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x73, 0x65, 0x74, 0x27, 0x29, 0x20,
	0x6f, 0x72, 0x20, 0x28, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x27, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x2c, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20,
	0x6f, 0x72, 0x20, 0x28, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x73, 0x65, 0x74, 0x27, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x78, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x2e, 0x61, 0x6c, 0x6c, 0x28, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x20, 0x3d, 0x20, 0x28, 0x25, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x25, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x25, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x27, 0x29, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x8b, 0x01, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x61, 0x6c, 0x6c, 0x28, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x20, 0x3d, 0x20, 0x28, 0x25, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x2d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x27, 0x20, 0x6f, 0x72, 0x20,
	0x25, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d,
	0x20, 0x27, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x25, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x27, 0x29, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x68, 0x28, 0x74, 0x79,
	0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x27, 0x29, 0x20,
	0x6f, 0x72, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x77, 0x68, 0x65, 0x72, 0x65, 0x28, 0x66,
	0x75, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x29,
	0x2e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x66, 0x75, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x26,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x29, 0x2e, 0x69, 0x73, 0x44, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x63, 0x74, 0x28, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x54, 0x74, 0x79, 0x70, 0x65, 0x20,
	0x3d, 0x20, 0x27, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x69, 0x6d, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x20, 0x28, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x29, 0x9a,
	0x86, 0x93, 0xa0, 0x08, 0x30, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x20, 0x28,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x68, 0x61, 0x73, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x28, 0x29, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x40, 0x74, 0x79, 0x70, 0x65, 0x20,
	0x3d, 0x20, 0x27, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x69, 0x6d, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x28, 0x29, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x69, 0x73, 0x28, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x9a, 0x86, 0x93, 0xa0, 0x08,
	0x41, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x27, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x28, 0x29, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x69, 0x73, 0x28, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x29, 0xb2, 0xf5, 0xf5, 0xd7, 0x09, 0x29, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x1a, 0x18, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0xb2, 0xf5, 0xf5, 0xd7, 0x09, 0x21, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x10, 0x04, 0x1a, 0x11, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0xb2, 0xf5, 0xf5, 0xd7, 0x09, 0x25, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x05, 0x1a, 0x18, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0xb2, 0xf5, 0xf5, 0xd7, 0x09, 0x1f, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x10, 0x02, 0x1a, 0x10, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0xb2, 0xf5, 0xf5, 0xd7, 0x09, 0x15, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x10, 0x04, 0x1a, 0x0b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xaf, 0x5e, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x48, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x13, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6c, 0x6c,
	0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x74, 0x6f, 0x6c, 0x65,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x14, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x12, 0x35, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x73, 0x0a, 0x1c, 0x62, 0x69, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c,
	0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x1a, 0x62, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x4b,
	0x0a, 0x0e, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x64,
	0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6f,
	0x64, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12,
	0x3c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x48, 0x0a,
	0x0d, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x61, 0x0a, 0x16, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61,
	0x6c, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0b, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x4a, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x15, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a,
	0x16, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x61, 0x70, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x3e, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x73, 0x0a, 0x1c, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x6c, 0x69,
	0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x1d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x69, 0x67, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x1b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x54, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b,
	0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x10, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x54, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x11, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x6a, 0x0a, 0x19, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x48, 0x00, 0x52, 0x17, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x45, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x12, 0x3e, 0x0a, 0x09,
	0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x65, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x11, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5a, 0x0a, 0x13, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x65, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x0f, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x61, 0x72,
	0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x43, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x65,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x43, 0x61, 0x72, 0x65, 0x12, 0x51, 0x0a, 0x10,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3b, 0x0a, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x11,
	0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x61, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x18,
	0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6c,
	0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x48, 0x00, 0x52, 0x14, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x66, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x12, 0x5e, 0x0a, 0x15, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x13, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x6c, 0x61,
	0x67, 0x48, 0x00, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x67, 0x6f, 0x61,
	0x6c, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x6f,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x51, 0x0a, 0x10, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x39,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x54, 0x0a, 0x11, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x63, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x11, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x48, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x75, 0x64, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x69, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x17, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x16, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x72, 0x0a, 0x1b, 0x69,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x1a, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5d, 0x0a, 0x14, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x12, 0x4b,
	0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x42, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73,
	0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e,
	0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x38, 0x0a, 0x07, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12,
	0x38, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x32,
	0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x19, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x18, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x12,
	0x5d, 0x0a, 0x14, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x57,
	0x0a, 0x12, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x14, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x51, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x7c, 0x0a, 0x1f,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1d, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x85, 0x01, 0x0a, 0x22, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x1c, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1a, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x1c, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x1a, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x76, 0x0a, 0x1d,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x56, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1b, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x1e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x1c, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x12,
	0x6d, 0x0a, 0x1a, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x64, 0x18, 0x58, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x18, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x64, 0x12, 0x7f,
	0x0a, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x65, 0x75, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x18, 0x59, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50,
	0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x65, 0x75, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52,
	0x1e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x65, 0x75, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12,
	0x89, 0x01, 0x0a, 0x24, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x21, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x73, 0x69,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x57, 0x0a, 0x12, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c,
	0x61, 0x72, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x5e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x4e, 0x0a, 0x0f, 0x6e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x60, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x16, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5d, 0x0a, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54,
	0x0a, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x48, 0x00, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a,
	0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x66,
	0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x66, 0x66,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x69, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e,
	0x70, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47,
	0x0a, 0x0c, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x11, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x6d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x10, 0x70, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3e, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x12, 0x41, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x4a, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x63, 0x0a, 0x16,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x48,
	0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x12, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x1b, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19, 0x72, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4e, 0x0a, 0x0f, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x17, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x65,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x69,
	0x73, 0x6b, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x48, 0x00, 0x52, 0x15, 0x72, 0x69, 0x73, 0x6b, 0x45, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x12, 0x3b, 0x0a, 0x08,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x7b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x3b, 0x0a,
	0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x12, 0x5a, 0x0a, 0x13, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x12, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x80,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x13, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61,
	0x70, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61,
	0x70, 0x12, 0x48, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x16,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x69,
	0x63, 0x5f, 0x61, 0x63, 0x69, 0x64, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x63,
	0x6c, 0x65, 0x69, 0x63, 0x41, 0x63, 0x69, 0x64, 0x48, 0x00, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x69, 0x63, 0x41, 0x63, 0x69, 0x64,
	0x12, 0x55, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f,
	0x6c, 0x79, 0x6d, 0x65, 0x72, 0x18, 0x85, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x79,
	0x6d, 0x65, 0x72, 0x48, 0x00, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x18, 0x86, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x12, 0x7d,
	0x0a, 0x1f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x87, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1d,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a,
	0x19, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x88, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x48,
	0x00, 0x52, 0x17, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x67, 0x0a, 0x17, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x89, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x16, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x8a, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x0e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x8b, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x12, 0x6a, 0x0a, 0x18, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x17, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x43, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x8e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x8f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x74, 0x65, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x90, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x12, 0x5b, 0x0a, 0x13, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x91, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5b, 0x0a, 0x13, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x92, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x12, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x8d, 0x01, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x04, 0x0a, 0x17,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x6a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_goTypes = []interface{}{
	(*Bundle)(nil),                                                                          // 0: google.fhir.r4.core.Bundle
	(*ContainedResource)(nil),                                                               // 1: google.fhir.r4.core.ContainedResource
	(*Bundle_TypeCode)(nil),                                                                 // 2: google.fhir.r4.core.Bundle.TypeCode
	(*Bundle_Link)(nil),                                                                     // 3: google.fhir.r4.core.Bundle.Link
	(*Bundle_Entry)(nil),                                                                    // 4: google.fhir.r4.core.Bundle.Entry
	(*Bundle_Entry_Search)(nil),                                                             // 5: google.fhir.r4.core.Bundle.Entry.Search
	(*Bundle_Entry_Request)(nil),                                                            // 6: google.fhir.r4.core.Bundle.Entry.Request
	(*Bundle_Entry_Response)(nil),                                                           // 7: google.fhir.r4.core.Bundle.Entry.Response
	(*Bundle_Entry_Search_ModeCode)(nil),                                                    // 8: google.fhir.r4.core.Bundle.Entry.Search.ModeCode
	(*Bundle_Entry_Request_MethodCode)(nil),                                                 // 9: google.fhir.r4.core.Bundle.Entry.Request.MethodCode
	(*datatypes_go_proto.Id)(nil),                                                           // 10: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                                                         // 11: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                                                          // 12: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                                                         // 13: google.fhir.r4.core.Code
	(*datatypes_go_proto.Identifier)(nil),                                                   // 14: google.fhir.r4.core.Identifier
	(*datatypes_go_proto.Instant)(nil),                                                      // 15: google.fhir.r4.core.Instant
	(*datatypes_go_proto.UnsignedInt)(nil),                                                  // 16: google.fhir.r4.core.UnsignedInt
	(*datatypes_go_proto.Signature)(nil),                                                    // 17: google.fhir.r4.core.Signature
	(*account_go_proto.Account)(nil),                                                        // 18: google.fhir.r4.core.Account
	(*activity_definition_go_proto.ActivityDefinition)(nil),                                 // 19: google.fhir.r4.core.ActivityDefinition
	(*adverse_event_go_proto.AdverseEvent)(nil),                                             // 20: google.fhir.r4.core.AdverseEvent
	(*allergy_intolerance_go_proto.AllergyIntolerance)(nil),                                 // 21: google.fhir.r4.core.AllergyIntolerance
	(*appointment_go_proto.Appointment)(nil),                                                // 22: google.fhir.r4.core.Appointment
	(*appointment_response_go_proto.AppointmentResponse)(nil),                               // 23: google.fhir.r4.core.AppointmentResponse
	(*audit_event_go_proto.AuditEvent)(nil),                                                 // 24: google.fhir.r4.core.AuditEvent
	(*basic_go_proto.Basic)(nil),                                                            // 25: google.fhir.r4.core.Basic
	(*binary_go_proto.Binary)(nil),                                                          // 26: google.fhir.r4.core.Binary
	(*biologically_derived_product_go_proto.BiologicallyDerivedProduct)(nil),                // 27: google.fhir.r4.core.BiologicallyDerivedProduct
	(*body_structure_go_proto.BodyStructure)(nil),                                           // 28: google.fhir.r4.core.BodyStructure
	(*capability_statement_go_proto.CapabilityStatement)(nil),                               // 29: google.fhir.r4.core.CapabilityStatement
	(*care_plan_go_proto.CarePlan)(nil),                                                     // 30: google.fhir.r4.core.CarePlan
	(*care_team_go_proto.CareTeam)(nil),                                                     // 31: google.fhir.r4.core.CareTeam
	(*catalog_entry_go_proto.CatalogEntry)(nil),                                             // 32: google.fhir.r4.core.CatalogEntry
	(*charge_item_go_proto.ChargeItem)(nil),                                                 // 33: google.fhir.r4.core.ChargeItem
	(*charge_item_definition_go_proto.ChargeItemDefinition)(nil),                            // 34: google.fhir.r4.core.ChargeItemDefinition
	(*claim_go_proto.Claim)(nil),                                                            // 35: google.fhir.r4.core.Claim
	(*claim_response_go_proto.ClaimResponse)(nil),                                           // 36: google.fhir.r4.core.ClaimResponse
	(*clinical_impression_go_proto.ClinicalImpression)(nil),                                 // 37: google.fhir.r4.core.ClinicalImpression
	(*code_system_go_proto.CodeSystem)(nil),                                                 // 38: google.fhir.r4.core.CodeSystem
	(*communication_go_proto.Communication)(nil),                                            // 39: google.fhir.r4.core.Communication
	(*communication_request_go_proto.CommunicationRequest)(nil),                             // 40: google.fhir.r4.core.CommunicationRequest
	(*compartment_definition_go_proto.CompartmentDefinition)(nil),                           // 41: google.fhir.r4.core.CompartmentDefinition
	(*composition_go_proto.Composition)(nil),                                                // 42: google.fhir.r4.core.Composition
	(*concept_map_go_proto.ConceptMap)(nil),                                                 // 43: google.fhir.r4.core.ConceptMap
	(*condition_go_proto.Condition)(nil),                                                    // 44: google.fhir.r4.core.Condition
	(*consent_go_proto.Consent)(nil),                                                        // 45: google.fhir.r4.core.Consent
	(*contract_go_proto.Contract)(nil),                                                      // 46: google.fhir.r4.core.Contract
	(*coverage_go_proto.Coverage)(nil),                                                      // 47: google.fhir.r4.core.Coverage
	(*coverage_eligibility_request_go_proto.CoverageEligibilityRequest)(nil),                // 48: google.fhir.r4.core.CoverageEligibilityRequest
	(*coverage_eligibility_response_go_proto.CoverageEligibilityResponse)(nil),              // 49: google.fhir.r4.core.CoverageEligibilityResponse
	(*detected_issue_go_proto.DetectedIssue)(nil),                                           // 50: google.fhir.r4.core.DetectedIssue
	(*device_go_proto.Device)(nil),                                                          // 51: google.fhir.r4.core.Device
	(*device_definition_go_proto.DeviceDefinition)(nil),                                     // 52: google.fhir.r4.core.DeviceDefinition
	(*device_metric_go_proto.DeviceMetric)(nil),                                             // 53: google.fhir.r4.core.DeviceMetric
	(*device_request_go_proto.DeviceRequest)(nil),                                           // 54: google.fhir.r4.core.DeviceRequest
	(*device_use_statement_go_proto.DeviceUseStatement)(nil),                                // 55: google.fhir.r4.core.DeviceUseStatement
	(*diagnostic_report_go_proto.DiagnosticReport)(nil),                                     // 56: google.fhir.r4.core.DiagnosticReport
	(*document_manifest_go_proto.DocumentManifest)(nil),                                     // 57: google.fhir.r4.core.DocumentManifest
	(*document_reference_go_proto.DocumentReference)(nil),                                   // 58: google.fhir.r4.core.DocumentReference
	(*effect_evidence_synthesis_go_proto.EffectEvidenceSynthesis)(nil),                      // 59: google.fhir.r4.core.EffectEvidenceSynthesis
	(*encounter_go_proto.Encounter)(nil),                                                    // 60: google.fhir.r4.core.Encounter
	(*endpoint_go_proto.Endpoint)(nil),                                                      // 61: google.fhir.r4.core.Endpoint
	(*enrollment_request_go_proto.EnrollmentRequest)(nil),                                   // 62: google.fhir.r4.core.EnrollmentRequest
	(*enrollment_response_go_proto.EnrollmentResponse)(nil),                                 // 63: google.fhir.r4.core.EnrollmentResponse
	(*episode_of_care_go_proto.EpisodeOfCare)(nil),                                          // 64: google.fhir.r4.core.EpisodeOfCare
	(*event_definition_go_proto.EventDefinition)(nil),                                       // 65: google.fhir.r4.core.EventDefinition
	(*evidence_go_proto.Evidence)(nil),                                                      // 66: google.fhir.r4.core.Evidence
	(*evidence_variable_go_proto.EvidenceVariable)(nil),                                     // 67: google.fhir.r4.core.EvidenceVariable
	(*example_scenario_go_proto.ExampleScenario)(nil),                                       // 68: google.fhir.r4.core.ExampleScenario
	(*explanation_of_benefit_go_proto.ExplanationOfBenefit)(nil),                            // 69: google.fhir.r4.core.ExplanationOfBenefit
	(*family_member_history_go_proto.FamilyMemberHistory)(nil),                              // 70: google.fhir.r4.core.FamilyMemberHistory
	(*flag_go_proto.Flag)(nil),                                                              // 71: google.fhir.r4.core.Flag
	(*goal_go_proto.Goal)(nil),                                                              // 72: google.fhir.r4.core.Goal
	(*graph_definition_go_proto.GraphDefinition)(nil),                                       // 73: google.fhir.r4.core.GraphDefinition
	(*group_go_proto.Group)(nil),                                                            // 74: google.fhir.r4.core.Group
	(*guidance_response_go_proto.GuidanceResponse)(nil),                                     // 75: google.fhir.r4.core.GuidanceResponse
	(*healthcare_service_go_proto.HealthcareService)(nil),                                   // 76: google.fhir.r4.core.HealthcareService
	(*imaging_study_go_proto.ImagingStudy)(nil),                                             // 77: google.fhir.r4.core.ImagingStudy
	(*immunization_go_proto.Immunization)(nil),                                              // 78: google.fhir.r4.core.Immunization
	(*immunization_evaluation_go_proto.ImmunizationEvaluation)(nil),                         // 79: google.fhir.r4.core.ImmunizationEvaluation
	(*immunization_recommendation_go_proto.ImmunizationRecommendation)(nil),                 // 80: google.fhir.r4.core.ImmunizationRecommendation
	(*implementation_guide_go_proto.ImplementationGuide)(nil),                               // 81: google.fhir.r4.core.ImplementationGuide
	(*insurance_plan_go_proto.InsurancePlan)(nil),                                           // 82: google.fhir.r4.core.InsurancePlan
	(*invoice_go_proto.Invoice)(nil),                                                        // 83: google.fhir.r4.core.Invoice
	(*library_go_proto.Library)(nil),                                                        // 84: google.fhir.r4.core.Library
	(*linkage_go_proto.Linkage)(nil),                                                        // 85: google.fhir.r4.core.Linkage
	(*list_go_proto.List)(nil),                                                              // 86: google.fhir.r4.core.List
	(*location_go_proto.Location)(nil),                                                      // 87: google.fhir.r4.core.Location
	(*measure_go_proto.Measure)(nil),                                                        // 88: google.fhir.r4.core.Measure
	(*measure_report_go_proto.MeasureReport)(nil),                                           // 89: google.fhir.r4.core.MeasureReport
	(*media_go_proto.Media)(nil),                                                            // 90: google.fhir.r4.core.Media
	(*medication_go_proto.Medication)(nil),                                                  // 91: google.fhir.r4.core.Medication
	(*medication_administration_go_proto.MedicationAdministration)(nil),                     // 92: google.fhir.r4.core.MedicationAdministration
	(*medication_dispense_go_proto.MedicationDispense)(nil),                                 // 93: google.fhir.r4.core.MedicationDispense
	(*medication_knowledge_go_proto.MedicationKnowledge)(nil),                               // 94: google.fhir.r4.core.MedicationKnowledge
	(*medication_request_go_proto.MedicationRequest)(nil),                                   // 95: google.fhir.r4.core.MedicationRequest
	(*medication_statement_go_proto.MedicationStatement)(nil),                               // 96: google.fhir.r4.core.MedicationStatement
	(*medicinal_product_go_proto.MedicinalProduct)(nil),                                     // 97: google.fhir.r4.core.MedicinalProduct
	(*medicinal_product_authorization_go_proto.MedicinalProductAuthorization)(nil),          // 98: google.fhir.r4.core.MedicinalProductAuthorization
	(*medicinal_product_contraindication_go_proto.MedicinalProductContraindication)(nil),    // 99: google.fhir.r4.core.MedicinalProductContraindication
	(*medicinal_product_indication_go_proto.MedicinalProductIndication)(nil),                // 100: google.fhir.r4.core.MedicinalProductIndication
	(*medicinal_product_ingredient_go_proto.MedicinalProductIngredient)(nil),                // 101: google.fhir.r4.core.MedicinalProductIngredient
	(*medicinal_product_interaction_go_proto.MedicinalProductInteraction)(nil),              // 102: google.fhir.r4.core.MedicinalProductInteraction
	(*medicinal_product_manufactured_go_proto.MedicinalProductManufactured)(nil),            // 103: google.fhir.r4.core.MedicinalProductManufactured
	(*medicinal_product_packaged_go_proto.MedicinalProductPackaged)(nil),                    // 104: google.fhir.r4.core.MedicinalProductPackaged
	(*medicinal_product_pharmaceutical_go_proto.MedicinalProductPharmaceutical)(nil),        // 105: google.fhir.r4.core.MedicinalProductPharmaceutical
	(*medicinal_product_undesirable_effect_go_proto.MedicinalProductUndesirableEffect)(nil), // 106: google.fhir.r4.core.MedicinalProductUndesirableEffect
	(*message_definition_go_proto.MessageDefinition)(nil),                                   // 107: google.fhir.r4.core.MessageDefinition
	(*message_header_go_proto.MessageHeader)(nil),                                           // 108: google.fhir.r4.core.MessageHeader
	(*molecular_sequence_go_proto.MolecularSequence)(nil),                                   // 109: google.fhir.r4.core.MolecularSequence
	(*naming_system_go_proto.NamingSystem)(nil),                                             // 110: google.fhir.r4.core.NamingSystem
	(*nutrition_order_go_proto.NutritionOrder)(nil),                                         // 111: google.fhir.r4.core.NutritionOrder
	(*observation_go_proto.Observation)(nil),                                                // 112: google.fhir.r4.core.Observation
	(*observation_definition_go_proto.ObservationDefinition)(nil),                           // 113: google.fhir.r4.core.ObservationDefinition
	(*operation_definition_go_proto.OperationDefinition)(nil),                               // 114: google.fhir.r4.core.OperationDefinition
	(*operation_outcome_go_proto.OperationOutcome)(nil),                                     // 115: google.fhir.r4.core.OperationOutcome
	(*organization_go_proto.Organization)(nil),                                              // 116: google.fhir.r4.core.Organization
	(*organization_affiliation_go_proto.OrganizationAffiliation)(nil),                       // 117: google.fhir.r4.core.OrganizationAffiliation
	(*parameters_go_proto.Parameters)(nil),                                                  // 118: google.fhir.r4.core.Parameters
	(*patient_go_proto.Patient)(nil),                                                        // 119: google.fhir.r4.core.Patient
	(*payment_notice_go_proto.PaymentNotice)(nil),                                           // 120: google.fhir.r4.core.PaymentNotice
	(*payment_reconciliation_go_proto.PaymentReconciliation)(nil),                           // 121: google.fhir.r4.core.PaymentReconciliation
	(*person_go_proto.Person)(nil),                                                          // 122: google.fhir.r4.core.Person
	(*plan_definition_go_proto.PlanDefinition)(nil),                                         // 123: google.fhir.r4.core.PlanDefinition
	(*practitioner_go_proto.Practitioner)(nil),                                              // 124: google.fhir.r4.core.Practitioner
	(*practitioner_role_go_proto.PractitionerRole)(nil),                                     // 125: google.fhir.r4.core.PractitionerRole
	(*procedure_go_proto.Procedure)(nil),                                                    // 126: google.fhir.r4.core.Procedure
	(*provenance_go_proto.Provenance)(nil),                                                  // 127: google.fhir.r4.core.Provenance
	(*questionnaire_go_proto.Questionnaire)(nil),                                            // 128: google.fhir.r4.core.Questionnaire
	(*questionnaire_response_go_proto.QuestionnaireResponse)(nil),                           // 129: google.fhir.r4.core.QuestionnaireResponse
	(*related_person_go_proto.RelatedPerson)(nil),                                           // 130: google.fhir.r4.core.RelatedPerson
	(*request_group_go_proto.RequestGroup)(nil),                                             // 131: google.fhir.r4.core.RequestGroup
	(*research_definition_go_proto.ResearchDefinition)(nil),                                 // 132: google.fhir.r4.core.ResearchDefinition
	(*research_element_definition_go_proto.ResearchElementDefinition)(nil),                  // 133: google.fhir.r4.core.ResearchElementDefinition
	(*research_study_go_proto.ResearchStudy)(nil),                                           // 134: google.fhir.r4.core.ResearchStudy
	(*research_subject_go_proto.ResearchSubject)(nil),                                       // 135: google.fhir.r4.core.ResearchSubject
	(*risk_assessment_go_proto.RiskAssessment)(nil),                                         // 136: google.fhir.r4.core.RiskAssessment
	(*risk_evidence_synthesis_go_proto.RiskEvidenceSynthesis)(nil),                          // 137: google.fhir.r4.core.RiskEvidenceSynthesis
	(*schedule_go_proto.Schedule)(nil),                                                      // 138: google.fhir.r4.core.Schedule
	(*search_parameter_go_proto.SearchParameter)(nil),                                       // 139: google.fhir.r4.core.SearchParameter
	(*service_request_go_proto.ServiceRequest)(nil),                                         // 140: google.fhir.r4.core.ServiceRequest
	(*slot_go_proto.Slot)(nil),                                                              // 141: google.fhir.r4.core.Slot
	(*specimen_go_proto.Specimen)(nil),                                                      // 142: google.fhir.r4.core.Specimen
	(*specimen_definition_go_proto.SpecimenDefinition)(nil),                                 // 143: google.fhir.r4.core.SpecimenDefinition
	(*structure_definition_go_proto.StructureDefinition)(nil),                               // 144: google.fhir.r4.core.StructureDefinition
	(*structure_map_go_proto.StructureMap)(nil),                                             // 145: google.fhir.r4.core.StructureMap
	(*subscription_go_proto.Subscription)(nil),                                              // 146: google.fhir.r4.core.Subscription
	(*substance_go_proto.Substance)(nil),                                                    // 147: google.fhir.r4.core.Substance
	(*substance_nucleic_acid_go_proto.SubstanceNucleicAcid)(nil),                            // 148: google.fhir.r4.core.SubstanceNucleicAcid
	(*substance_polymer_go_proto.SubstancePolymer)(nil),                                     // 149: google.fhir.r4.core.SubstancePolymer
	(*substance_protein_go_proto.SubstanceProtein)(nil),                                     // 150: google.fhir.r4.core.SubstanceProtein
	(*substance_reference_information_go_proto.SubstanceReferenceInformation)(nil),          // 151: google.fhir.r4.core.SubstanceReferenceInformation
	(*substance_source_material_go_proto.SubstanceSourceMaterial)(nil),                      // 152: google.fhir.r4.core.SubstanceSourceMaterial
	(*substance_specification_go_proto.SubstanceSpecification)(nil),                         // 153: google.fhir.r4.core.SubstanceSpecification
	(*supply_delivery_go_proto.SupplyDelivery)(nil),                                         // 154: google.fhir.r4.core.SupplyDelivery
	(*supply_request_go_proto.SupplyRequest)(nil),                                           // 155: google.fhir.r4.core.SupplyRequest
	(*task_go_proto.Task)(nil),                                                              // 156: google.fhir.r4.core.Task
	(*terminology_capabilities_go_proto.TerminologyCapabilities)(nil),                       // 157: google.fhir.r4.core.TerminologyCapabilities
	(*test_report_go_proto.TestReport)(nil),                                                 // 158: google.fhir.r4.core.TestReport
	(*test_script_go_proto.TestScript)(nil),                                                 // 159: google.fhir.r4.core.TestScript
	(*value_set_go_proto.ValueSet)(nil),                                                     // 160: google.fhir.r4.core.ValueSet
	(*verification_result_go_proto.VerificationResult)(nil),                                 // 161: google.fhir.r4.core.VerificationResult
	(*vision_prescription_go_proto.VisionPrescription)(nil),                                 // 162: google.fhir.r4.core.VisionPrescription
	(codes_go_proto.BundleTypeCode_Value)(0),                                                // 163: google.fhir.r4.core.BundleTypeCode.Value
	(*datatypes_go_proto.String)(nil),                                                       // 164: google.fhir.r4.core.String
	(*datatypes_go_proto.Extension)(nil),                                                    // 165: google.fhir.r4.core.Extension
	(*datatypes_go_proto.Decimal)(nil),                                                      // 166: google.fhir.r4.core.Decimal
	(codes_go_proto.SearchEntryModeCode_Value)(0),                                           // 167: google.fhir.r4.core.SearchEntryModeCode.Value
	(codes_go_proto.HTTPVerbCode_Value)(0),                                                  // 168: google.fhir.r4.core.HTTPVerbCode.Value
}
var file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_depIdxs = []int32{
	10,  // 0: google.fhir.r4.core.Bundle.id:type_name -> google.fhir.r4.core.Id
	11,  // 1: google.fhir.r4.core.Bundle.meta:type_name -> google.fhir.r4.core.Meta
	12,  // 2: google.fhir.r4.core.Bundle.implicit_rules:type_name -> google.fhir.r4.core.Uri
	13,  // 3: google.fhir.r4.core.Bundle.language:type_name -> google.fhir.r4.core.Code
	14,  // 4: google.fhir.r4.core.Bundle.identifier:type_name -> google.fhir.r4.core.Identifier
	2,   // 5: google.fhir.r4.core.Bundle.type:type_name -> google.fhir.r4.core.Bundle.TypeCode
	15,  // 6: google.fhir.r4.core.Bundle.timestamp:type_name -> google.fhir.r4.core.Instant
	16,  // 7: google.fhir.r4.core.Bundle.total:type_name -> google.fhir.r4.core.UnsignedInt
	3,   // 8: google.fhir.r4.core.Bundle.link:type_name -> google.fhir.r4.core.Bundle.Link
	4,   // 9: google.fhir.r4.core.Bundle.entry:type_name -> google.fhir.r4.core.Bundle.Entry
	17,  // 10: google.fhir.r4.core.Bundle.signature:type_name -> google.fhir.r4.core.Signature
	18,  // 11: google.fhir.r4.core.ContainedResource.account:type_name -> google.fhir.r4.core.Account
	19,  // 12: google.fhir.r4.core.ContainedResource.activity_definition:type_name -> google.fhir.r4.core.ActivityDefinition
	20,  // 13: google.fhir.r4.core.ContainedResource.adverse_event:type_name -> google.fhir.r4.core.AdverseEvent
	21,  // 14: google.fhir.r4.core.ContainedResource.allergy_intolerance:type_name -> google.fhir.r4.core.AllergyIntolerance
	22,  // 15: google.fhir.r4.core.ContainedResource.appointment:type_name -> google.fhir.r4.core.Appointment
	23,  // 16: google.fhir.r4.core.ContainedResource.appointment_response:type_name -> google.fhir.r4.core.AppointmentResponse
	24,  // 17: google.fhir.r4.core.ContainedResource.audit_event:type_name -> google.fhir.r4.core.AuditEvent
	25,  // 18: google.fhir.r4.core.ContainedResource.basic:type_name -> google.fhir.r4.core.Basic
	26,  // 19: google.fhir.r4.core.ContainedResource.binary:type_name -> google.fhir.r4.core.Binary
	27,  // 20: google.fhir.r4.core.ContainedResource.biologically_derived_product:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct
	28,  // 21: google.fhir.r4.core.ContainedResource.body_structure:type_name -> google.fhir.r4.core.BodyStructure
	0,   // 22: google.fhir.r4.core.ContainedResource.bundle:type_name -> google.fhir.r4.core.Bundle
	29,  // 23: google.fhir.r4.core.ContainedResource.capability_statement:type_name -> google.fhir.r4.core.CapabilityStatement
	30,  // 24: google.fhir.r4.core.ContainedResource.care_plan:type_name -> google.fhir.r4.core.CarePlan
	31,  // 25: google.fhir.r4.core.ContainedResource.care_team:type_name -> google.fhir.r4.core.CareTeam
	32,  // 26: google.fhir.r4.core.ContainedResource.catalog_entry:type_name -> google.fhir.r4.core.CatalogEntry
	33,  // 27: google.fhir.r4.core.ContainedResource.charge_item:type_name -> google.fhir.r4.core.ChargeItem
	34,  // 28: google.fhir.r4.core.ContainedResource.charge_item_definition:type_name -> google.fhir.r4.core.ChargeItemDefinition
	35,  // 29: google.fhir.r4.core.ContainedResource.claim:type_name -> google.fhir.r4.core.Claim
	36,  // 30: google.fhir.r4.core.ContainedResource.claim_response:type_name -> google.fhir.r4.core.ClaimResponse
	37,  // 31: google.fhir.r4.core.ContainedResource.clinical_impression:type_name -> google.fhir.r4.core.ClinicalImpression
	38,  // 32: google.fhir.r4.core.ContainedResource.code_system:type_name -> google.fhir.r4.core.CodeSystem
	39,  // 33: google.fhir.r4.core.ContainedResource.communication:type_name -> google.fhir.r4.core.Communication
	40,  // 34: google.fhir.r4.core.ContainedResource.communication_request:type_name -> google.fhir.r4.core.CommunicationRequest
	41,  // 35: google.fhir.r4.core.ContainedResource.compartment_definition:type_name -> google.fhir.r4.core.CompartmentDefinition
	42,  // 36: google.fhir.r4.core.ContainedResource.composition:type_name -> google.fhir.r4.core.Composition
	43,  // 37: google.fhir.r4.core.ContainedResource.concept_map:type_name -> google.fhir.r4.core.ConceptMap
	44,  // 38: google.fhir.r4.core.ContainedResource.condition:type_name -> google.fhir.r4.core.Condition
	45,  // 39: google.fhir.r4.core.ContainedResource.consent:type_name -> google.fhir.r4.core.Consent
	46,  // 40: google.fhir.r4.core.ContainedResource.contract:type_name -> google.fhir.r4.core.Contract
	47,  // 41: google.fhir.r4.core.ContainedResource.coverage:type_name -> google.fhir.r4.core.Coverage
	48,  // 42: google.fhir.r4.core.ContainedResource.coverage_eligibility_request:type_name -> google.fhir.r4.core.CoverageEligibilityRequest
	49,  // 43: google.fhir.r4.core.ContainedResource.coverage_eligibility_response:type_name -> google.fhir.r4.core.CoverageEligibilityResponse
	50,  // 44: google.fhir.r4.core.ContainedResource.detected_issue:type_name -> google.fhir.r4.core.DetectedIssue
	51,  // 45: google.fhir.r4.core.ContainedResource.device:type_name -> google.fhir.r4.core.Device
	52,  // 46: google.fhir.r4.core.ContainedResource.device_definition:type_name -> google.fhir.r4.core.DeviceDefinition
	53,  // 47: google.fhir.r4.core.ContainedResource.device_metric:type_name -> google.fhir.r4.core.DeviceMetric
	54,  // 48: google.fhir.r4.core.ContainedResource.device_request:type_name -> google.fhir.r4.core.DeviceRequest
	55,  // 49: google.fhir.r4.core.ContainedResource.device_use_statement:type_name -> google.fhir.r4.core.DeviceUseStatement
	56,  // 50: google.fhir.r4.core.ContainedResource.diagnostic_report:type_name -> google.fhir.r4.core.DiagnosticReport
	57,  // 51: google.fhir.r4.core.ContainedResource.document_manifest:type_name -> google.fhir.r4.core.DocumentManifest
	58,  // 52: google.fhir.r4.core.ContainedResource.document_reference:type_name -> google.fhir.r4.core.DocumentReference
	59,  // 53: google.fhir.r4.core.ContainedResource.effect_evidence_synthesis:type_name -> google.fhir.r4.core.EffectEvidenceSynthesis
	60,  // 54: google.fhir.r4.core.ContainedResource.encounter:type_name -> google.fhir.r4.core.Encounter
	61,  // 55: google.fhir.r4.core.ContainedResource.endpoint:type_name -> google.fhir.r4.core.Endpoint
	62,  // 56: google.fhir.r4.core.ContainedResource.enrollment_request:type_name -> google.fhir.r4.core.EnrollmentRequest
	63,  // 57: google.fhir.r4.core.ContainedResource.enrollment_response:type_name -> google.fhir.r4.core.EnrollmentResponse
	64,  // 58: google.fhir.r4.core.ContainedResource.episode_of_care:type_name -> google.fhir.r4.core.EpisodeOfCare
	65,  // 59: google.fhir.r4.core.ContainedResource.event_definition:type_name -> google.fhir.r4.core.EventDefinition
	66,  // 60: google.fhir.r4.core.ContainedResource.evidence:type_name -> google.fhir.r4.core.Evidence
	67,  // 61: google.fhir.r4.core.ContainedResource.evidence_variable:type_name -> google.fhir.r4.core.EvidenceVariable
	68,  // 62: google.fhir.r4.core.ContainedResource.example_scenario:type_name -> google.fhir.r4.core.ExampleScenario
	69,  // 63: google.fhir.r4.core.ContainedResource.explanation_of_benefit:type_name -> google.fhir.r4.core.ExplanationOfBenefit
	70,  // 64: google.fhir.r4.core.ContainedResource.family_member_history:type_name -> google.fhir.r4.core.FamilyMemberHistory
	71,  // 65: google.fhir.r4.core.ContainedResource.flag:type_name -> google.fhir.r4.core.Flag
	72,  // 66: google.fhir.r4.core.ContainedResource.goal:type_name -> google.fhir.r4.core.Goal
	73,  // 67: google.fhir.r4.core.ContainedResource.graph_definition:type_name -> google.fhir.r4.core.GraphDefinition
	74,  // 68: google.fhir.r4.core.ContainedResource.group:type_name -> google.fhir.r4.core.Group
	75,  // 69: google.fhir.r4.core.ContainedResource.guidance_response:type_name -> google.fhir.r4.core.GuidanceResponse
	76,  // 70: google.fhir.r4.core.ContainedResource.healthcare_service:type_name -> google.fhir.r4.core.HealthcareService
	77,  // 71: google.fhir.r4.core.ContainedResource.imaging_study:type_name -> google.fhir.r4.core.ImagingStudy
	78,  // 72: google.fhir.r4.core.ContainedResource.immunization:type_name -> google.fhir.r4.core.Immunization
	79,  // 73: google.fhir.r4.core.ContainedResource.immunization_evaluation:type_name -> google.fhir.r4.core.ImmunizationEvaluation
	80,  // 74: google.fhir.r4.core.ContainedResource.immunization_recommendation:type_name -> google.fhir.r4.core.ImmunizationRecommendation
	81,  // 75: google.fhir.r4.core.ContainedResource.implementation_guide:type_name -> google.fhir.r4.core.ImplementationGuide
	82,  // 76: google.fhir.r4.core.ContainedResource.insurance_plan:type_name -> google.fhir.r4.core.InsurancePlan
	83,  // 77: google.fhir.r4.core.ContainedResource.invoice:type_name -> google.fhir.r4.core.Invoice
	84,  // 78: google.fhir.r4.core.ContainedResource.library:type_name -> google.fhir.r4.core.Library
	85,  // 79: google.fhir.r4.core.ContainedResource.linkage:type_name -> google.fhir.r4.core.Linkage
	86,  // 80: google.fhir.r4.core.ContainedResource.list:type_name -> google.fhir.r4.core.List
	87,  // 81: google.fhir.r4.core.ContainedResource.location:type_name -> google.fhir.r4.core.Location
	88,  // 82: google.fhir.r4.core.ContainedResource.measure:type_name -> google.fhir.r4.core.Measure
	89,  // 83: google.fhir.r4.core.ContainedResource.measure_report:type_name -> google.fhir.r4.core.MeasureReport
	90,  // 84: google.fhir.r4.core.ContainedResource.media:type_name -> google.fhir.r4.core.Media
	91,  // 85: google.fhir.r4.core.ContainedResource.medication:type_name -> google.fhir.r4.core.Medication
	92,  // 86: google.fhir.r4.core.ContainedResource.medication_administration:type_name -> google.fhir.r4.core.MedicationAdministration
	93,  // 87: google.fhir.r4.core.ContainedResource.medication_dispense:type_name -> google.fhir.r4.core.MedicationDispense
	94,  // 88: google.fhir.r4.core.ContainedResource.medication_knowledge:type_name -> google.fhir.r4.core.MedicationKnowledge
	95,  // 89: google.fhir.r4.core.ContainedResource.medication_request:type_name -> google.fhir.r4.core.MedicationRequest
	96,  // 90: google.fhir.r4.core.ContainedResource.medication_statement:type_name -> google.fhir.r4.core.MedicationStatement
	97,  // 91: google.fhir.r4.core.ContainedResource.medicinal_product:type_name -> google.fhir.r4.core.MedicinalProduct
	98,  // 92: google.fhir.r4.core.ContainedResource.medicinal_product_authorization:type_name -> google.fhir.r4.core.MedicinalProductAuthorization
	99,  // 93: google.fhir.r4.core.ContainedResource.medicinal_product_contraindication:type_name -> google.fhir.r4.core.MedicinalProductContraindication
	100, // 94: google.fhir.r4.core.ContainedResource.medicinal_product_indication:type_name -> google.fhir.r4.core.MedicinalProductIndication
	101, // 95: google.fhir.r4.core.ContainedResource.medicinal_product_ingredient:type_name -> google.fhir.r4.core.MedicinalProductIngredient
	102, // 96: google.fhir.r4.core.ContainedResource.medicinal_product_interaction:type_name -> google.fhir.r4.core.MedicinalProductInteraction
	103, // 97: google.fhir.r4.core.ContainedResource.medicinal_product_manufactured:type_name -> google.fhir.r4.core.MedicinalProductManufactured
	104, // 98: google.fhir.r4.core.ContainedResource.medicinal_product_packaged:type_name -> google.fhir.r4.core.MedicinalProductPackaged
	105, // 99: google.fhir.r4.core.ContainedResource.medicinal_product_pharmaceutical:type_name -> google.fhir.r4.core.MedicinalProductPharmaceutical
	106, // 100: google.fhir.r4.core.ContainedResource.medicinal_product_undesirable_effect:type_name -> google.fhir.r4.core.MedicinalProductUndesirableEffect
	107, // 101: google.fhir.r4.core.ContainedResource.message_definition:type_name -> google.fhir.r4.core.MessageDefinition
	108, // 102: google.fhir.r4.core.ContainedResource.message_header:type_name -> google.fhir.r4.core.MessageHeader
	109, // 103: google.fhir.r4.core.ContainedResource.molecular_sequence:type_name -> google.fhir.r4.core.MolecularSequence
	110, // 104: google.fhir.r4.core.ContainedResource.naming_system:type_name -> google.fhir.r4.core.NamingSystem
	111, // 105: google.fhir.r4.core.ContainedResource.nutrition_order:type_name -> google.fhir.r4.core.NutritionOrder
	112, // 106: google.fhir.r4.core.ContainedResource.observation:type_name -> google.fhir.r4.core.Observation
	113, // 107: google.fhir.r4.core.ContainedResource.observation_definition:type_name -> google.fhir.r4.core.ObservationDefinition
	114, // 108: google.fhir.r4.core.ContainedResource.operation_definition:type_name -> google.fhir.r4.core.OperationDefinition
	115, // 109: google.fhir.r4.core.ContainedResource.operation_outcome:type_name -> google.fhir.r4.core.OperationOutcome
	116, // 110: google.fhir.r4.core.ContainedResource.organization:type_name -> google.fhir.r4.core.Organization
	117, // 111: google.fhir.r4.core.ContainedResource.organization_affiliation:type_name -> google.fhir.r4.core.OrganizationAffiliation
	118, // 112: google.fhir.r4.core.ContainedResource.parameters:type_name -> google.fhir.r4.core.Parameters
	119, // 113: google.fhir.r4.core.ContainedResource.patient:type_name -> google.fhir.r4.core.Patient
	120, // 114: google.fhir.r4.core.ContainedResource.payment_notice:type_name -> google.fhir.r4.core.PaymentNotice
	121, // 115: google.fhir.r4.core.ContainedResource.payment_reconciliation:type_name -> google.fhir.r4.core.PaymentReconciliation
	122, // 116: google.fhir.r4.core.ContainedResource.person:type_name -> google.fhir.r4.core.Person
	123, // 117: google.fhir.r4.core.ContainedResource.plan_definition:type_name -> google.fhir.r4.core.PlanDefinition
	124, // 118: google.fhir.r4.core.ContainedResource.practitioner:type_name -> google.fhir.r4.core.Practitioner
	125, // 119: google.fhir.r4.core.ContainedResource.practitioner_role:type_name -> google.fhir.r4.core.PractitionerRole
	126, // 120: google.fhir.r4.core.ContainedResource.procedure:type_name -> google.fhir.r4.core.Procedure
	127, // 121: google.fhir.r4.core.ContainedResource.provenance:type_name -> google.fhir.r4.core.Provenance
	128, // 122: google.fhir.r4.core.ContainedResource.questionnaire:type_name -> google.fhir.r4.core.Questionnaire
	129, // 123: google.fhir.r4.core.ContainedResource.questionnaire_response:type_name -> google.fhir.r4.core.QuestionnaireResponse
	130, // 124: google.fhir.r4.core.ContainedResource.related_person:type_name -> google.fhir.r4.core.RelatedPerson
	131, // 125: google.fhir.r4.core.ContainedResource.request_group:type_name -> google.fhir.r4.core.RequestGroup
	132, // 126: google.fhir.r4.core.ContainedResource.research_definition:type_name -> google.fhir.r4.core.ResearchDefinition
	133, // 127: google.fhir.r4.core.ContainedResource.research_element_definition:type_name -> google.fhir.r4.core.ResearchElementDefinition
	134, // 128: google.fhir.r4.core.ContainedResource.research_study:type_name -> google.fhir.r4.core.ResearchStudy
	135, // 129: google.fhir.r4.core.ContainedResource.research_subject:type_name -> google.fhir.r4.core.ResearchSubject
	136, // 130: google.fhir.r4.core.ContainedResource.risk_assessment:type_name -> google.fhir.r4.core.RiskAssessment
	137, // 131: google.fhir.r4.core.ContainedResource.risk_evidence_synthesis:type_name -> google.fhir.r4.core.RiskEvidenceSynthesis
	138, // 132: google.fhir.r4.core.ContainedResource.schedule:type_name -> google.fhir.r4.core.Schedule
	139, // 133: google.fhir.r4.core.ContainedResource.search_parameter:type_name -> google.fhir.r4.core.SearchParameter
	140, // 134: google.fhir.r4.core.ContainedResource.service_request:type_name -> google.fhir.r4.core.ServiceRequest
	141, // 135: google.fhir.r4.core.ContainedResource.slot:type_name -> google.fhir.r4.core.Slot
	142, // 136: google.fhir.r4.core.ContainedResource.specimen:type_name -> google.fhir.r4.core.Specimen
	143, // 137: google.fhir.r4.core.ContainedResource.specimen_definition:type_name -> google.fhir.r4.core.SpecimenDefinition
	144, // 138: google.fhir.r4.core.ContainedResource.structure_definition:type_name -> google.fhir.r4.core.StructureDefinition
	145, // 139: google.fhir.r4.core.ContainedResource.structure_map:type_name -> google.fhir.r4.core.StructureMap
	146, // 140: google.fhir.r4.core.ContainedResource.subscription:type_name -> google.fhir.r4.core.Subscription
	147, // 141: google.fhir.r4.core.ContainedResource.substance:type_name -> google.fhir.r4.core.Substance
	148, // 142: google.fhir.r4.core.ContainedResource.substance_nucleic_acid:type_name -> google.fhir.r4.core.SubstanceNucleicAcid
	149, // 143: google.fhir.r4.core.ContainedResource.substance_polymer:type_name -> google.fhir.r4.core.SubstancePolymer
	150, // 144: google.fhir.r4.core.ContainedResource.substance_protein:type_name -> google.fhir.r4.core.SubstanceProtein
	151, // 145: google.fhir.r4.core.ContainedResource.substance_reference_information:type_name -> google.fhir.r4.core.SubstanceReferenceInformation
	152, // 146: google.fhir.r4.core.ContainedResource.substance_source_material:type_name -> google.fhir.r4.core.SubstanceSourceMaterial
	153, // 147: google.fhir.r4.core.ContainedResource.substance_specification:type_name -> google.fhir.r4.core.SubstanceSpecification
	154, // 148: google.fhir.r4.core.ContainedResource.supply_delivery:type_name -> google.fhir.r4.core.SupplyDelivery
	155, // 149: google.fhir.r4.core.ContainedResource.supply_request:type_name -> google.fhir.r4.core.SupplyRequest
	156, // 150: google.fhir.r4.core.ContainedResource.task:type_name -> google.fhir.r4.core.Task
	157, // 151: google.fhir.r4.core.ContainedResource.terminology_capabilities:type_name -> google.fhir.r4.core.TerminologyCapabilities
	158, // 152: google.fhir.r4.core.ContainedResource.test_report:type_name -> google.fhir.r4.core.TestReport
	159, // 153: google.fhir.r4.core.ContainedResource.test_script:type_name -> google.fhir.r4.core.TestScript
	160, // 154: google.fhir.r4.core.ContainedResource.value_set:type_name -> google.fhir.r4.core.ValueSet
	161, // 155: google.fhir.r4.core.ContainedResource.verification_result:type_name -> google.fhir.r4.core.VerificationResult
	162, // 156: google.fhir.r4.core.ContainedResource.vision_prescription:type_name -> google.fhir.r4.core.VisionPrescription
	163, // 157: google.fhir.r4.core.Bundle.TypeCode.value:type_name -> google.fhir.r4.core.BundleTypeCode.Value
	164, // 158: google.fhir.r4.core.Bundle.TypeCode.id:type_name -> google.fhir.r4.core.String
	165, // 159: google.fhir.r4.core.Bundle.TypeCode.extension:type_name -> google.fhir.r4.core.Extension
	164, // 160: google.fhir.r4.core.Bundle.Link.id:type_name -> google.fhir.r4.core.String
	165, // 161: google.fhir.r4.core.Bundle.Link.extension:type_name -> google.fhir.r4.core.Extension
	165, // 162: google.fhir.r4.core.Bundle.Link.modifier_extension:type_name -> google.fhir.r4.core.Extension
	164, // 163: google.fhir.r4.core.Bundle.Link.relation:type_name -> google.fhir.r4.core.String
	12,  // 164: google.fhir.r4.core.Bundle.Link.url:type_name -> google.fhir.r4.core.Uri
	164, // 165: google.fhir.r4.core.Bundle.Entry.id:type_name -> google.fhir.r4.core.String
	165, // 166: google.fhir.r4.core.Bundle.Entry.extension:type_name -> google.fhir.r4.core.Extension
	165, // 167: google.fhir.r4.core.Bundle.Entry.modifier_extension:type_name -> google.fhir.r4.core.Extension
	3,   // 168: google.fhir.r4.core.Bundle.Entry.link:type_name -> google.fhir.r4.core.Bundle.Link
	12,  // 169: google.fhir.r4.core.Bundle.Entry.full_url:type_name -> google.fhir.r4.core.Uri
	1,   // 170: google.fhir.r4.core.Bundle.Entry.resource:type_name -> google.fhir.r4.core.ContainedResource
	5,   // 171: google.fhir.r4.core.Bundle.Entry.search:type_name -> google.fhir.r4.core.Bundle.Entry.Search
	6,   // 172: google.fhir.r4.core.Bundle.Entry.request:type_name -> google.fhir.r4.core.Bundle.Entry.Request
	7,   // 173: google.fhir.r4.core.Bundle.Entry.response:type_name -> google.fhir.r4.core.Bundle.Entry.Response
	164, // 174: google.fhir.r4.core.Bundle.Entry.Search.id:type_name -> google.fhir.r4.core.String
	165, // 175: google.fhir.r4.core.Bundle.Entry.Search.extension:type_name -> google.fhir.r4.core.Extension
	165, // 176: google.fhir.r4.core.Bundle.Entry.Search.modifier_extension:type_name -> google.fhir.r4.core.Extension
	8,   // 177: google.fhir.r4.core.Bundle.Entry.Search.mode:type_name -> google.fhir.r4.core.Bundle.Entry.Search.ModeCode
	166, // 178: google.fhir.r4.core.Bundle.Entry.Search.score:type_name -> google.fhir.r4.core.Decimal
	164, // 179: google.fhir.r4.core.Bundle.Entry.Request.id:type_name -> google.fhir.r4.core.String
	165, // 180: google.fhir.r4.core.Bundle.Entry.Request.extension:type_name -> google.fhir.r4.core.Extension
	165, // 181: google.fhir.r4.core.Bundle.Entry.Request.modifier_extension:type_name -> google.fhir.r4.core.Extension
	9,   // 182: google.fhir.r4.core.Bundle.Entry.Request.method:type_name -> google.fhir.r4.core.Bundle.Entry.Request.MethodCode
	12,  // 183: google.fhir.r4.core.Bundle.Entry.Request.url:type_name -> google.fhir.r4.core.Uri
	164, // 184: google.fhir.r4.core.Bundle.Entry.Request.if_none_match:type_name -> google.fhir.r4.core.String
	15,  // 185: google.fhir.r4.core.Bundle.Entry.Request.if_modified_since:type_name -> google.fhir.r4.core.Instant
	164, // 186: google.fhir.r4.core.Bundle.Entry.Request.if_match:type_name -> google.fhir.r4.core.String
	164, // 187: google.fhir.r4.core.Bundle.Entry.Request.if_none_exist:type_name -> google.fhir.r4.core.String
	164, // 188: google.fhir.r4.core.Bundle.Entry.Response.id:type_name -> google.fhir.r4.core.String
	165, // 189: google.fhir.r4.core.Bundle.Entry.Response.extension:type_name -> google.fhir.r4.core.Extension
	165, // 190: google.fhir.r4.core.Bundle.Entry.Response.modifier_extension:type_name -> google.fhir.r4.core.Extension
	164, // 191: google.fhir.r4.core.Bundle.Entry.Response.status:type_name -> google.fhir.r4.core.String
	12,  // 192: google.fhir.r4.core.Bundle.Entry.Response.location:type_name -> google.fhir.r4.core.Uri
	164, // 193: google.fhir.r4.core.Bundle.Entry.Response.etag:type_name -> google.fhir.r4.core.String
	15,  // 194: google.fhir.r4.core.Bundle.Entry.Response.last_modified:type_name -> google.fhir.r4.core.Instant
	1,   // 195: google.fhir.r4.core.Bundle.Entry.Response.outcome:type_name -> google.fhir.r4.core.ContainedResource
	167, // 196: google.fhir.r4.core.Bundle.Entry.Search.ModeCode.value:type_name -> google.fhir.r4.core.SearchEntryModeCode.Value
	164, // 197: google.fhir.r4.core.Bundle.Entry.Search.ModeCode.id:type_name -> google.fhir.r4.core.String
	165, // 198: google.fhir.r4.core.Bundle.Entry.Search.ModeCode.extension:type_name -> google.fhir.r4.core.Extension
	168, // 199: google.fhir.r4.core.Bundle.Entry.Request.MethodCode.value:type_name -> google.fhir.r4.core.HTTPVerbCode.Value
	164, // 200: google.fhir.r4.core.Bundle.Entry.Request.MethodCode.id:type_name -> google.fhir.r4.core.String
	165, // 201: google.fhir.r4.core.Bundle.Entry.Request.MethodCode.extension:type_name -> google.fhir.r4.core.Extension
	202, // [202:202] is the sub-list for method output_type
	202, // [202:202] is the sub-list for method input_type
	202, // [202:202] is the sub-list for extension type_name
	202, // [202:202] is the sub-list for extension extendee
	0,   // [0:202] is the sub-list for field type_name
}

func init() {
	file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_init()
}
func file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainedResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle_TypeCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle_Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle_Entry_Search); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle_Entry_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle_Entry_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle_Entry_Search_ModeCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bundle_Entry_Request_MethodCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ContainedResource_Account)(nil),
		(*ContainedResource_ActivityDefinition)(nil),
		(*ContainedResource_AdverseEvent)(nil),
		(*ContainedResource_AllergyIntolerance)(nil),
		(*ContainedResource_Appointment)(nil),
		(*ContainedResource_AppointmentResponse)(nil),
		(*ContainedResource_AuditEvent)(nil),
		(*ContainedResource_Basic)(nil),
		(*ContainedResource_Binary)(nil),
		(*ContainedResource_BiologicallyDerivedProduct)(nil),
		(*ContainedResource_BodyStructure)(nil),
		(*ContainedResource_Bundle)(nil),
		(*ContainedResource_CapabilityStatement)(nil),
		(*ContainedResource_CarePlan)(nil),
		(*ContainedResource_CareTeam)(nil),
		(*ContainedResource_CatalogEntry)(nil),
		(*ContainedResource_ChargeItem)(nil),
		(*ContainedResource_ChargeItemDefinition)(nil),
		(*ContainedResource_Claim)(nil),
		(*ContainedResource_ClaimResponse)(nil),
		(*ContainedResource_ClinicalImpression)(nil),
		(*ContainedResource_CodeSystem)(nil),
		(*ContainedResource_Communication)(nil),
		(*ContainedResource_CommunicationRequest)(nil),
		(*ContainedResource_CompartmentDefinition)(nil),
		(*ContainedResource_Composition)(nil),
		(*ContainedResource_ConceptMap)(nil),
		(*ContainedResource_Condition)(nil),
		(*ContainedResource_Consent)(nil),
		(*ContainedResource_Contract)(nil),
		(*ContainedResource_Coverage)(nil),
		(*ContainedResource_CoverageEligibilityRequest)(nil),
		(*ContainedResource_CoverageEligibilityResponse)(nil),
		(*ContainedResource_DetectedIssue)(nil),
		(*ContainedResource_Device)(nil),
		(*ContainedResource_DeviceDefinition)(nil),
		(*ContainedResource_DeviceMetric)(nil),
		(*ContainedResource_DeviceRequest)(nil),
		(*ContainedResource_DeviceUseStatement)(nil),
		(*ContainedResource_DiagnosticReport)(nil),
		(*ContainedResource_DocumentManifest)(nil),
		(*ContainedResource_DocumentReference)(nil),
		(*ContainedResource_EffectEvidenceSynthesis)(nil),
		(*ContainedResource_Encounter)(nil),
		(*ContainedResource_Endpoint)(nil),
		(*ContainedResource_EnrollmentRequest)(nil),
		(*ContainedResource_EnrollmentResponse)(nil),
		(*ContainedResource_EpisodeOfCare)(nil),
		(*ContainedResource_EventDefinition)(nil),
		(*ContainedResource_Evidence)(nil),
		(*ContainedResource_EvidenceVariable)(nil),
		(*ContainedResource_ExampleScenario)(nil),
		(*ContainedResource_ExplanationOfBenefit)(nil),
		(*ContainedResource_FamilyMemberHistory)(nil),
		(*ContainedResource_Flag)(nil),
		(*ContainedResource_Goal)(nil),
		(*ContainedResource_GraphDefinition)(nil),
		(*ContainedResource_Group)(nil),
		(*ContainedResource_GuidanceResponse)(nil),
		(*ContainedResource_HealthcareService)(nil),
		(*ContainedResource_ImagingStudy)(nil),
		(*ContainedResource_Immunization)(nil),
		(*ContainedResource_ImmunizationEvaluation)(nil),
		(*ContainedResource_ImmunizationRecommendation)(nil),
		(*ContainedResource_ImplementationGuide)(nil),
		(*ContainedResource_InsurancePlan)(nil),
		(*ContainedResource_Invoice)(nil),
		(*ContainedResource_Library)(nil),
		(*ContainedResource_Linkage)(nil),
		(*ContainedResource_List)(nil),
		(*ContainedResource_Location)(nil),
		(*ContainedResource_Measure)(nil),
		(*ContainedResource_MeasureReport)(nil),
		(*ContainedResource_Media)(nil),
		(*ContainedResource_Medication)(nil),
		(*ContainedResource_MedicationAdministration)(nil),
		(*ContainedResource_MedicationDispense)(nil),
		(*ContainedResource_MedicationKnowledge)(nil),
		(*ContainedResource_MedicationRequest)(nil),
		(*ContainedResource_MedicationStatement)(nil),
		(*ContainedResource_MedicinalProduct)(nil),
		(*ContainedResource_MedicinalProductAuthorization)(nil),
		(*ContainedResource_MedicinalProductContraindication)(nil),
		(*ContainedResource_MedicinalProductIndication)(nil),
		(*ContainedResource_MedicinalProductIngredient)(nil),
		(*ContainedResource_MedicinalProductInteraction)(nil),
		(*ContainedResource_MedicinalProductManufactured)(nil),
		(*ContainedResource_MedicinalProductPackaged)(nil),
		(*ContainedResource_MedicinalProductPharmaceutical)(nil),
		(*ContainedResource_MedicinalProductUndesirableEffect)(nil),
		(*ContainedResource_MessageDefinition)(nil),
		(*ContainedResource_MessageHeader)(nil),
		(*ContainedResource_MolecularSequence)(nil),
		(*ContainedResource_NamingSystem)(nil),
		(*ContainedResource_NutritionOrder)(nil),
		(*ContainedResource_Observation)(nil),
		(*ContainedResource_ObservationDefinition)(nil),
		(*ContainedResource_OperationDefinition)(nil),
		(*ContainedResource_OperationOutcome)(nil),
		(*ContainedResource_Organization)(nil),
		(*ContainedResource_OrganizationAffiliation)(nil),
		(*ContainedResource_Parameters)(nil),
		(*ContainedResource_Patient)(nil),
		(*ContainedResource_PaymentNotice)(nil),
		(*ContainedResource_PaymentReconciliation)(nil),
		(*ContainedResource_Person)(nil),
		(*ContainedResource_PlanDefinition)(nil),
		(*ContainedResource_Practitioner)(nil),
		(*ContainedResource_PractitionerRole)(nil),
		(*ContainedResource_Procedure)(nil),
		(*ContainedResource_Provenance)(nil),
		(*ContainedResource_Questionnaire)(nil),
		(*ContainedResource_QuestionnaireResponse)(nil),
		(*ContainedResource_RelatedPerson)(nil),
		(*ContainedResource_RequestGroup)(nil),
		(*ContainedResource_ResearchDefinition)(nil),
		(*ContainedResource_ResearchElementDefinition)(nil),
		(*ContainedResource_ResearchStudy)(nil),
		(*ContainedResource_ResearchSubject)(nil),
		(*ContainedResource_RiskAssessment)(nil),
		(*ContainedResource_RiskEvidenceSynthesis)(nil),
		(*ContainedResource_Schedule)(nil),
		(*ContainedResource_SearchParameter)(nil),
		(*ContainedResource_ServiceRequest)(nil),
		(*ContainedResource_Slot)(nil),
		(*ContainedResource_Specimen)(nil),
		(*ContainedResource_SpecimenDefinition)(nil),
		(*ContainedResource_StructureDefinition)(nil),
		(*ContainedResource_StructureMap)(nil),
		(*ContainedResource_Subscription)(nil),
		(*ContainedResource_Substance)(nil),
		(*ContainedResource_SubstanceNucleicAcid)(nil),
		(*ContainedResource_SubstancePolymer)(nil),
		(*ContainedResource_SubstanceProtein)(nil),
		(*ContainedResource_SubstanceReferenceInformation)(nil),
		(*ContainedResource_SubstanceSourceMaterial)(nil),
		(*ContainedResource_SubstanceSpecification)(nil),
		(*ContainedResource_SupplyDelivery)(nil),
		(*ContainedResource_SupplyRequest)(nil),
		(*ContainedResource_Task)(nil),
		(*ContainedResource_TerminologyCapabilities)(nil),
		(*ContainedResource_TestReport)(nil),
		(*ContainedResource_TestScript)(nil),
		(*ContainedResource_ValueSet)(nil),
		(*ContainedResource_VerificationResult)(nil),
		(*ContainedResource_VisionPrescription)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_bundle_and_contained_resource_proto_depIdxs = nil
}
