//    Copyright 2021 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.12
// source: proto/google/fhir/proto/validation.proto

package validation_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum representing the severity of a FHIRPath expression.
// This is a FHIR-version independent representation of
// http://hl7.org/fhir/constraint-severity
type ValidationSeverity int32

const (
	ValidationSeverity_SEVERITY_UNINITIALIZED ValidationSeverity = 0
	ValidationSeverity_SEVERITY_ERROR         ValidationSeverity = 1
	ValidationSeverity_SEVERITY_WARNING       ValidationSeverity = 2
)

// Enum value maps for ValidationSeverity.
var (
	ValidationSeverity_name = map[int32]string{
		0: "SEVERITY_UNINITIALIZED",
		1: "SEVERITY_ERROR",
		2: "SEVERITY_WARNING",
	}
	ValidationSeverity_value = map[string]int32{
		"SEVERITY_UNINITIALIZED": 0,
		"SEVERITY_ERROR":         1,
		"SEVERITY_WARNING":       2,
	}
)

func (x ValidationSeverity) Enum() *ValidationSeverity {
	p := new(ValidationSeverity)
	*p = x
	return p
}

func (x ValidationSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_validation_proto_enumTypes[0].Descriptor()
}

func (ValidationSeverity) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_validation_proto_enumTypes[0]
}

func (x ValidationSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationSeverity.Descriptor instead.
func (ValidationSeverity) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_validation_proto_rawDescGZIP(), []int{0}
}

// Enum representing the type of a validation
type ValidationType int32

const (
	ValidationType_VALIDATION_TYPE_UNINITIALIZED ValidationType = 0
	// A validation originating from a FHIRPath Constraint
	// See: hl7.org/fhir/conformance-rules.html#constraints
	ValidationType_VALIDATION_TYPE_FHIR_PATH_CONSTRAINT ValidationType = 1
	// A validation originating from a Cardinality requirement
	// See: hl7.org/fhir/conformance-rules.html#cardinality
	ValidationType_VALIDATION_TYPE_CARDINALITY ValidationType = 2
	// A validation originating from violating requirements of a Choice type,
	// i.e., multiple values within a choice type set.
	// See: hl7.org/fhir/formats.html#choice
	ValidationType_VALIDATION_TYPE_CHOICE_TYPE ValidationType = 5
	// A validation originating from violating the regex requirements on primitive
	// types.
	// See: hl7.org/fhir/datatypes.html#primitive
	ValidationType_VALIDATION_TYPE_PRIMITIVE_REGEX ValidationType = 4
	// A validation originating from a ValueSet binding.
	// See: hl7.org/fhir/terminologies.html#binding
	ValidationType_VALIDATION_TYPE_VALUE_SET_BINDING ValidationType = 6
	// A validation originating from violating requirements of a Reference type,
	// i.e., multiple values within a reference type set or a reference to a type
	// not allowed by the profile.
	// See: https://build.fhir.org/references.html#Reference
	ValidationType_VALIDATION_TYPE_REFERENCE_TYPE ValidationType = 7
)

// Enum value maps for ValidationType.
var (
	ValidationType_name = map[int32]string{
		0: "VALIDATION_TYPE_UNINITIALIZED",
		1: "VALIDATION_TYPE_FHIR_PATH_CONSTRAINT",
		2: "VALIDATION_TYPE_CARDINALITY",
		5: "VALIDATION_TYPE_CHOICE_TYPE",
		4: "VALIDATION_TYPE_PRIMITIVE_REGEX",
		6: "VALIDATION_TYPE_VALUE_SET_BINDING",
		7: "VALIDATION_TYPE_REFERENCE_TYPE",
	}
	ValidationType_value = map[string]int32{
		"VALIDATION_TYPE_UNINITIALIZED":        0,
		"VALIDATION_TYPE_FHIR_PATH_CONSTRAINT": 1,
		"VALIDATION_TYPE_CARDINALITY":          2,
		"VALIDATION_TYPE_CHOICE_TYPE":          5,
		"VALIDATION_TYPE_PRIMITIVE_REGEX":      4,
		"VALIDATION_TYPE_VALUE_SET_BINDING":    6,
		"VALIDATION_TYPE_REFERENCE_TYPE":       7,
	}
)

func (x ValidationType) Enum() *ValidationType {
	p := new(ValidationType)
	*p = x
	return p
}

func (x ValidationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_google_fhir_proto_validation_proto_enumTypes[1].Descriptor()
}

func (ValidationType) Type() protoreflect.EnumType {
	return &file_proto_google_fhir_proto_validation_proto_enumTypes[1]
}

func (x ValidationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationType.Descriptor instead.
func (ValidationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_validation_proto_rawDescGZIP(), []int{1}
}

// A representation of a Validation requirement defined by a FHIR Profile,
// expressed as a SQL expression over Analytic FHIR.
type SqlRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A name to use for the resulting column, that reflects the path name to the
	// constrained resource or datatype, suffixed with an underscore-separated
	// constraint key.
	ColumnName string `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// The constraint in Standard SQL.
	SqlExpression string `protobuf:"bytes,2,opt,name=sql_expression,json=sqlExpression,proto3" json:"sql_expression,omitempty"`
	// The severity of the constraint.
	Severity ValidationSeverity `protobuf:"varint,3,opt,name=severity,proto3,enum=google.fhir.proto.validation.ValidationSeverity" json:"severity,omitempty"`
	// The type of validation that this requirement represents (e.g.
	// `VALIDATION_TYPE_CARDINALITY` for missing required field, or
	// `VALIDATION_TYPE_FHIR_PATH_CONSTRAINT` for FHIRPath Constraint).
	Type ValidationType `protobuf:"varint,4,opt,name=type,proto3,enum=google.fhir.proto.validation.ValidationType" json:"type,omitempty"`
	// The FHIRPath to the context element (dot-delimited camelCase) for the
	// fhir_path_expression. The fhir_path_expression is evaluated relative to the
	// element_path.
	// For example, a proto like:
	// element_path: Person.name
	// fhir_path_expression: first.exists() or last.exists()
	// means that if Person.name is present, then the expression first.exists()
	// or last.exists() will be evaluated against Person.name.
	ElementPath string `protobuf:"bytes,5,opt,name=element_path,json=elementPath,proto3" json:"element_path,omitempty"`
	// A human-readable description of the requirement.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// If type is `VALIDATION_TYPE_FHIR_PATH_CONSTRAINT`:
	//
	//	Then this field is the FHIR key for the constraint.
	//	Not guaranteed to be unique beyond the current element.
	//	See:
	//	hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.constraint.key
	//
	// Otherwise:
	//
	//	These fields are synthetic and represent unique identifiers.
	FhirPathKey string `protobuf:"bytes,7,opt,name=fhir_path_key,json=fhirPathKey,proto3" json:"fhir_path_key,omitempty"`
	// This field is the expression that was used to generate this SqlRequirement.
	// If type is `VALIDATION_TYPE_FHIR_PATH_CONSTRAINT`:
	//
	//	The expression is the FhirPath expression from the FHIR Profile.
	//	See:
	//	hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.constraint.expression
	//
	// Otherwise:
	//
	//	 The expression is a synthetic FhirPath expression generated in order to
	//	evaluate the constraint. For example, a cardinality constraint for min
	//	size of 1 could be rendered as the synthetic expression
	//	`field.exists()`. These are included here for debugging purposes.
	FhirPathExpression string `protobuf:"bytes,8,opt,name=fhir_path_expression,json=fhirPathExpression,proto3" json:"fhir_path_expression,omitempty"`
	// The field names referenced by the above fhir_path_expression. For example,
	// an expression like 'a.b.where(c > d.e)' references fields
	// ['a.b', 'a.b.c', 'a.b.d.e']
	FieldsReferencedByExpression []string `protobuf:"bytes,9,rep,name=fields_referenced_by_expression,json=fieldsReferencedByExpression,proto3" json:"fields_referenced_by_expression,omitempty"`
	// The fhir_path_expression if it was translated directly to SQL and with no
	// contextual subqueries.
	FhirPathSqlExpression string `protobuf:"bytes,10,opt,name=fhir_path_sql_expression,json=fhirPathSqlExpression,proto3" json:"fhir_path_sql_expression,omitempty"`
}

func (x *SqlRequirement) Reset() {
	*x = SqlRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_validation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlRequirement) ProtoMessage() {}

func (x *SqlRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_validation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlRequirement.ProtoReflect.Descriptor instead.
func (*SqlRequirement) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_validation_proto_rawDescGZIP(), []int{0}
}

func (x *SqlRequirement) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *SqlRequirement) GetSqlExpression() string {
	if x != nil {
		return x.SqlExpression
	}
	return ""
}

func (x *SqlRequirement) GetSeverity() ValidationSeverity {
	if x != nil {
		return x.Severity
	}
	return ValidationSeverity_SEVERITY_UNINITIALIZED
}

func (x *SqlRequirement) GetType() ValidationType {
	if x != nil {
		return x.Type
	}
	return ValidationType_VALIDATION_TYPE_UNINITIALIZED
}

func (x *SqlRequirement) GetElementPath() string {
	if x != nil {
		return x.ElementPath
	}
	return ""
}

func (x *SqlRequirement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SqlRequirement) GetFhirPathKey() string {
	if x != nil {
		return x.FhirPathKey
	}
	return ""
}

func (x *SqlRequirement) GetFhirPathExpression() string {
	if x != nil {
		return x.FhirPathExpression
	}
	return ""
}

func (x *SqlRequirement) GetFieldsReferencedByExpression() []string {
	if x != nil {
		return x.FieldsReferencedByExpression
	}
	return nil
}

func (x *SqlRequirement) GetFhirPathSqlExpression() string {
	if x != nil {
		return x.FhirPathSqlExpression
	}
	return ""
}

var File_proto_google_fhir_proto_validation_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_validation_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x04, 0x0a, 0x0e, 0x53, 0x71, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x68, 0x69, 0x72,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x68, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x14,
	0x66, 0x68, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x68, 0x69, 0x72,
	0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45,
	0x0a, 0x1f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x42, 0x79, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x66, 0x68, 0x69, 0x72, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x68, 0x69, 0x72, 0x50, 0x61, 0x74,
	0x68, 0x53, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x5a,
	0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x8f, 0x02, 0x0a, 0x0e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x1d, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x28, 0x0a, 0x24, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x46, 0x48, 0x49, 0x52, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x43, 0x4f,
	0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x48, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x05, 0x12, 0x23, 0x0a, 0x1f,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x45, 0x58, 0x10,
	0x04, 0x12, 0x25, 0x0a, 0x21, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x42,
	0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x22, 0x0a, 0x1e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x45,
	0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x07, 0x42, 0x6b, 0x0a, 0x20,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_google_fhir_proto_validation_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_validation_proto_rawDescData = file_proto_google_fhir_proto_validation_proto_rawDesc
)

func file_proto_google_fhir_proto_validation_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_validation_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_validation_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_validation_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_validation_proto_rawDescData
}

var file_proto_google_fhir_proto_validation_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_google_fhir_proto_validation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_google_fhir_proto_validation_proto_goTypes = []interface{}{
	(ValidationSeverity)(0), // 0: google.fhir.proto.validation.ValidationSeverity
	(ValidationType)(0),     // 1: google.fhir.proto.validation.ValidationType
	(*SqlRequirement)(nil),  // 2: google.fhir.proto.validation.SqlRequirement
}
var file_proto_google_fhir_proto_validation_proto_depIdxs = []int32{
	0, // 0: google.fhir.proto.validation.SqlRequirement.severity:type_name -> google.fhir.proto.validation.ValidationSeverity
	1, // 1: google.fhir.proto.validation.SqlRequirement.type:type_name -> google.fhir.proto.validation.ValidationType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_validation_proto_init() }
func file_proto_google_fhir_proto_validation_proto_init() {
	if File_proto_google_fhir_proto_validation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_validation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_validation_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_validation_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_validation_proto_depIdxs,
		EnumInfos:         file_proto_google_fhir_proto_validation_proto_enumTypes,
		MessageInfos:      file_proto_google_fhir_proto_validation_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_validation_proto = out.File
	file_proto_google_fhir_proto_validation_proto_rawDesc = nil
	file_proto_google_fhir_proto_validation_proto_goTypes = nil
	file_proto_google_fhir_proto_validation_proto_depIdxs = nil
}
