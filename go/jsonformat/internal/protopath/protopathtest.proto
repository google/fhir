//    Copyright 2020 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
//
// Dummy proto to facilitate testing of the protopath library.
syntax = "proto3";

package google.fhir.go.jsonformat.internal.protopath;

import "google/protobuf/any.proto";

option go_package = "github.com/google/fhir/go/jsonformat/internal/protopath/protopathtest_go_proto"; // NOLINT

// Message type that will never be present in Message.
message Missing {}

enum MessageType {
  INVALID_UNINITIALIZED = 0;
  TYPE_1 = 1;
  TYPE_2 = 2;
}

message Message {
  int32 int32 = 1;

  message InnerMessage {
    int32 inner_field = 1;
    repeated int32 repeated_inner_field = 2;
    repeated InnerMessage2 repeated_inner_message_field = 3;

    oneof inner_oneof {
      InnerMessage2 inner_oneof_message_field = 4;
    }
    map<int32, MessageType> map_int32_enum_field = 5;
  }

  message InnerMessage2 {
    int32 inner_field2 = 1;
  }

  oneof oneof {
    bool oneof_primitive_field = 2;

    // Duplicate primitive fields to test type conflict.
    int32 oneof_conflicting_primitive_field_1 = 3;
    int32 oneof_conflicting_primitive_field_2 = 4;

    InnerMessage oneof_message_field = 5;

    // Duplicate message fields to test type conflict.
    InnerMessage2 oneof_conflicting_message_field_1 = 6;
    InnerMessage2 oneof_conflicting_message_field_2 = 7;
  }

  MessageType type = 8;

  InnerMessage message_field = 9;

  repeated InnerMessage repeated_message_field = 10;

  string string_field = 11;

  string json_annotated_string_field = 12 [json_name = "jsonAnnotated"];

  bytes bytes_field = 13;

  protobuf.Any any_field = 14;

  map<string, string> map_string_string_field = 15;
  map<int32, bytes> map_int32_bytes_field = 16;
  map<bool, int32> map_bool_int32_field = 17;

  map<string, InnerMessage> map_string_message_field = 18;
}
