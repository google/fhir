// Code generated from FhirPath.g4 by ANTLR 4.13.1. DO NOT EDIT.

package gen

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type FhirPathLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var FhirPathLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func fhirpathlexerLexerInit() {
	staticData := &FhirPathLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'.'", "'['", "']'", "'+'", "'-'", "'*'", "'/'", "'div'", "'mod'",
		"'&'", "'is'", "'as'", "'|'", "'<='", "'<'", "'>'", "'>='", "'='", "'~'",
		"'!='", "'!~'", "'in'", "'contains'", "'and'", "'or'", "'xor'", "'implies'",
		"'('", "')'", "'{'", "'}'", "'true'", "'false'", "'%'", "'$this'", "'$index'",
		"'$total'", "','", "'year'", "'month'", "'week'", "'day'", "'hour'",
		"'minute'", "'second'", "'millisecond'", "'years'", "'months'", "'weeks'",
		"'days'", "'hours'", "'minutes'", "'seconds'", "'milliseconds'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "DATE", "DATETIME", "TIME", "IDENTIFIER", "DELIMITEDIDENTIFIER",
		"STRING", "NUMBER", "WS", "COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48",
		"T__49", "T__50", "T__51", "T__52", "T__53", "DATE", "DATETIME", "TIME",
		"DATEFORMAT", "TIMEFORMAT", "TIMEZONEOFFSETFORMAT", "IDENTIFIER", "DELIMITEDIDENTIFIER",
		"STRING", "NUMBER", "WS", "COMMENT", "LINE_COMMENT", "ESC", "UNICODE",
		"HEX",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 64, 523, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1,
		3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1,
		12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16,
		1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1,
		20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22,
		1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1,
		31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1,
		35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37,
		1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1,
		39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41,
		1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1,
		43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45,
		1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1,
		46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47,
		1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1,
		49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51,
		1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 52, 1,
		52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53,
		1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55, 1,
		55, 1, 55, 1, 55, 1, 55, 3, 55, 386, 8, 55, 3, 55, 388, 8, 55, 1, 56, 1,
		56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57,
		1, 57, 1, 57, 3, 57, 404, 8, 57, 3, 57, 406, 8, 57, 1, 58, 1, 58, 1, 58,
		1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 4, 58, 418, 8, 58, 11,
		58, 12, 58, 419, 3, 58, 422, 8, 58, 3, 58, 424, 8, 58, 3, 58, 426, 8, 58,
		1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 3, 59, 435, 8, 59, 1,
		60, 3, 60, 438, 8, 60, 1, 60, 5, 60, 441, 8, 60, 10, 60, 12, 60, 444, 9,
		60, 1, 61, 1, 61, 1, 61, 5, 61, 449, 8, 61, 10, 61, 12, 61, 452, 9, 61,
		1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 5, 62, 459, 8, 62, 10, 62, 12, 62, 462,
		9, 62, 1, 62, 1, 62, 1, 63, 4, 63, 467, 8, 63, 11, 63, 12, 63, 468, 1,
		63, 1, 63, 4, 63, 473, 8, 63, 11, 63, 12, 63, 474, 3, 63, 477, 8, 63, 1,
		64, 4, 64, 480, 8, 64, 11, 64, 12, 64, 481, 1, 64, 1, 64, 1, 65, 1, 65,
		1, 65, 1, 65, 5, 65, 490, 8, 65, 10, 65, 12, 65, 493, 9, 65, 1, 65, 1,
		65, 1, 65, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66, 1, 66, 5, 66, 504, 8, 66,
		10, 66, 12, 66, 507, 9, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 3, 67, 514,
		8, 67, 1, 68, 1, 68, 1, 68, 1, 68, 1, 68, 1, 68, 1, 69, 1, 69, 3, 450,
		460, 491, 0, 70, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53,
		27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71,
		36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89,
		45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 53,
		107, 54, 109, 55, 111, 56, 113, 57, 115, 0, 117, 0, 119, 0, 121, 58, 123,
		59, 125, 60, 127, 61, 129, 62, 131, 63, 133, 64, 135, 0, 137, 0, 139, 0,
		1, 0, 8, 1, 0, 48, 57, 2, 0, 43, 43, 45, 45, 3, 0, 65, 90, 95, 95, 97,
		122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 3, 0, 9, 10, 13, 13, 32, 32,
		2, 0, 10, 10, 13, 13, 8, 0, 39, 39, 47, 47, 92, 92, 96, 96, 102, 102, 110,
		110, 114, 114, 116, 116, 3, 0, 48, 57, 65, 70, 97, 102, 537, 0, 1, 1, 0,
		0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0,
		0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1,
		0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25,
		1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0,
		33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0,
		0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0,
		0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0,
		0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1,
		0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71,
		1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0,
		79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0,
		0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0,
		0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1,
		0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0,
		109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 121, 1, 0,
		0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129,
		1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 1, 141, 1, 0, 0, 0,
		3, 143, 1, 0, 0, 0, 5, 145, 1, 0, 0, 0, 7, 147, 1, 0, 0, 0, 9, 149, 1,
		0, 0, 0, 11, 151, 1, 0, 0, 0, 13, 153, 1, 0, 0, 0, 15, 155, 1, 0, 0, 0,
		17, 159, 1, 0, 0, 0, 19, 163, 1, 0, 0, 0, 21, 165, 1, 0, 0, 0, 23, 168,
		1, 0, 0, 0, 25, 171, 1, 0, 0, 0, 27, 173, 1, 0, 0, 0, 29, 176, 1, 0, 0,
		0, 31, 178, 1, 0, 0, 0, 33, 180, 1, 0, 0, 0, 35, 183, 1, 0, 0, 0, 37, 185,
		1, 0, 0, 0, 39, 187, 1, 0, 0, 0, 41, 190, 1, 0, 0, 0, 43, 193, 1, 0, 0,
		0, 45, 196, 1, 0, 0, 0, 47, 205, 1, 0, 0, 0, 49, 209, 1, 0, 0, 0, 51, 212,
		1, 0, 0, 0, 53, 216, 1, 0, 0, 0, 55, 224, 1, 0, 0, 0, 57, 226, 1, 0, 0,
		0, 59, 228, 1, 0, 0, 0, 61, 230, 1, 0, 0, 0, 63, 232, 1, 0, 0, 0, 65, 237,
		1, 0, 0, 0, 67, 243, 1, 0, 0, 0, 69, 245, 1, 0, 0, 0, 71, 251, 1, 0, 0,
		0, 73, 258, 1, 0, 0, 0, 75, 265, 1, 0, 0, 0, 77, 267, 1, 0, 0, 0, 79, 272,
		1, 0, 0, 0, 81, 278, 1, 0, 0, 0, 83, 283, 1, 0, 0, 0, 85, 287, 1, 0, 0,
		0, 87, 292, 1, 0, 0, 0, 89, 299, 1, 0, 0, 0, 91, 306, 1, 0, 0, 0, 93, 318,
		1, 0, 0, 0, 95, 324, 1, 0, 0, 0, 97, 331, 1, 0, 0, 0, 99, 337, 1, 0, 0,
		0, 101, 342, 1, 0, 0, 0, 103, 348, 1, 0, 0, 0, 105, 356, 1, 0, 0, 0, 107,
		364, 1, 0, 0, 0, 109, 377, 1, 0, 0, 0, 111, 380, 1, 0, 0, 0, 113, 389,
		1, 0, 0, 0, 115, 393, 1, 0, 0, 0, 117, 407, 1, 0, 0, 0, 119, 434, 1, 0,
		0, 0, 121, 437, 1, 0, 0, 0, 123, 445, 1, 0, 0, 0, 125, 455, 1, 0, 0, 0,
		127, 466, 1, 0, 0, 0, 129, 479, 1, 0, 0, 0, 131, 485, 1, 0, 0, 0, 133,
		499, 1, 0, 0, 0, 135, 510, 1, 0, 0, 0, 137, 515, 1, 0, 0, 0, 139, 521,
		1, 0, 0, 0, 141, 142, 5, 46, 0, 0, 142, 2, 1, 0, 0, 0, 143, 144, 5, 91,
		0, 0, 144, 4, 1, 0, 0, 0, 145, 146, 5, 93, 0, 0, 146, 6, 1, 0, 0, 0, 147,
		148, 5, 43, 0, 0, 148, 8, 1, 0, 0, 0, 149, 150, 5, 45, 0, 0, 150, 10, 1,
		0, 0, 0, 151, 152, 5, 42, 0, 0, 152, 12, 1, 0, 0, 0, 153, 154, 5, 47, 0,
		0, 154, 14, 1, 0, 0, 0, 155, 156, 5, 100, 0, 0, 156, 157, 5, 105, 0, 0,
		157, 158, 5, 118, 0, 0, 158, 16, 1, 0, 0, 0, 159, 160, 5, 109, 0, 0, 160,
		161, 5, 111, 0, 0, 161, 162, 5, 100, 0, 0, 162, 18, 1, 0, 0, 0, 163, 164,
		5, 38, 0, 0, 164, 20, 1, 0, 0, 0, 165, 166, 5, 105, 0, 0, 166, 167, 5,
		115, 0, 0, 167, 22, 1, 0, 0, 0, 168, 169, 5, 97, 0, 0, 169, 170, 5, 115,
		0, 0, 170, 24, 1, 0, 0, 0, 171, 172, 5, 124, 0, 0, 172, 26, 1, 0, 0, 0,
		173, 174, 5, 60, 0, 0, 174, 175, 5, 61, 0, 0, 175, 28, 1, 0, 0, 0, 176,
		177, 5, 60, 0, 0, 177, 30, 1, 0, 0, 0, 178, 179, 5, 62, 0, 0, 179, 32,
		1, 0, 0, 0, 180, 181, 5, 62, 0, 0, 181, 182, 5, 61, 0, 0, 182, 34, 1, 0,
		0, 0, 183, 184, 5, 61, 0, 0, 184, 36, 1, 0, 0, 0, 185, 186, 5, 126, 0,
		0, 186, 38, 1, 0, 0, 0, 187, 188, 5, 33, 0, 0, 188, 189, 5, 61, 0, 0, 189,
		40, 1, 0, 0, 0, 190, 191, 5, 33, 0, 0, 191, 192, 5, 126, 0, 0, 192, 42,
		1, 0, 0, 0, 193, 194, 5, 105, 0, 0, 194, 195, 5, 110, 0, 0, 195, 44, 1,
		0, 0, 0, 196, 197, 5, 99, 0, 0, 197, 198, 5, 111, 0, 0, 198, 199, 5, 110,
		0, 0, 199, 200, 5, 116, 0, 0, 200, 201, 5, 97, 0, 0, 201, 202, 5, 105,
		0, 0, 202, 203, 5, 110, 0, 0, 203, 204, 5, 115, 0, 0, 204, 46, 1, 0, 0,
		0, 205, 206, 5, 97, 0, 0, 206, 207, 5, 110, 0, 0, 207, 208, 5, 100, 0,
		0, 208, 48, 1, 0, 0, 0, 209, 210, 5, 111, 0, 0, 210, 211, 5, 114, 0, 0,
		211, 50, 1, 0, 0, 0, 212, 213, 5, 120, 0, 0, 213, 214, 5, 111, 0, 0, 214,
		215, 5, 114, 0, 0, 215, 52, 1, 0, 0, 0, 216, 217, 5, 105, 0, 0, 217, 218,
		5, 109, 0, 0, 218, 219, 5, 112, 0, 0, 219, 220, 5, 108, 0, 0, 220, 221,
		5, 105, 0, 0, 221, 222, 5, 101, 0, 0, 222, 223, 5, 115, 0, 0, 223, 54,
		1, 0, 0, 0, 224, 225, 5, 40, 0, 0, 225, 56, 1, 0, 0, 0, 226, 227, 5, 41,
		0, 0, 227, 58, 1, 0, 0, 0, 228, 229, 5, 123, 0, 0, 229, 60, 1, 0, 0, 0,
		230, 231, 5, 125, 0, 0, 231, 62, 1, 0, 0, 0, 232, 233, 5, 116, 0, 0, 233,
		234, 5, 114, 0, 0, 234, 235, 5, 117, 0, 0, 235, 236, 5, 101, 0, 0, 236,
		64, 1, 0, 0, 0, 237, 238, 5, 102, 0, 0, 238, 239, 5, 97, 0, 0, 239, 240,
		5, 108, 0, 0, 240, 241, 5, 115, 0, 0, 241, 242, 5, 101, 0, 0, 242, 66,
		1, 0, 0, 0, 243, 244, 5, 37, 0, 0, 244, 68, 1, 0, 0, 0, 245, 246, 5, 36,
		0, 0, 246, 247, 5, 116, 0, 0, 247, 248, 5, 104, 0, 0, 248, 249, 5, 105,
		0, 0, 249, 250, 5, 115, 0, 0, 250, 70, 1, 0, 0, 0, 251, 252, 5, 36, 0,
		0, 252, 253, 5, 105, 0, 0, 253, 254, 5, 110, 0, 0, 254, 255, 5, 100, 0,
		0, 255, 256, 5, 101, 0, 0, 256, 257, 5, 120, 0, 0, 257, 72, 1, 0, 0, 0,
		258, 259, 5, 36, 0, 0, 259, 260, 5, 116, 0, 0, 260, 261, 5, 111, 0, 0,
		261, 262, 5, 116, 0, 0, 262, 263, 5, 97, 0, 0, 263, 264, 5, 108, 0, 0,
		264, 74, 1, 0, 0, 0, 265, 266, 5, 44, 0, 0, 266, 76, 1, 0, 0, 0, 267, 268,
		5, 121, 0, 0, 268, 269, 5, 101, 0, 0, 269, 270, 5, 97, 0, 0, 270, 271,
		5, 114, 0, 0, 271, 78, 1, 0, 0, 0, 272, 273, 5, 109, 0, 0, 273, 274, 5,
		111, 0, 0, 274, 275, 5, 110, 0, 0, 275, 276, 5, 116, 0, 0, 276, 277, 5,
		104, 0, 0, 277, 80, 1, 0, 0, 0, 278, 279, 5, 119, 0, 0, 279, 280, 5, 101,
		0, 0, 280, 281, 5, 101, 0, 0, 281, 282, 5, 107, 0, 0, 282, 82, 1, 0, 0,
		0, 283, 284, 5, 100, 0, 0, 284, 285, 5, 97, 0, 0, 285, 286, 5, 121, 0,
		0, 286, 84, 1, 0, 0, 0, 287, 288, 5, 104, 0, 0, 288, 289, 5, 111, 0, 0,
		289, 290, 5, 117, 0, 0, 290, 291, 5, 114, 0, 0, 291, 86, 1, 0, 0, 0, 292,
		293, 5, 109, 0, 0, 293, 294, 5, 105, 0, 0, 294, 295, 5, 110, 0, 0, 295,
		296, 5, 117, 0, 0, 296, 297, 5, 116, 0, 0, 297, 298, 5, 101, 0, 0, 298,
		88, 1, 0, 0, 0, 299, 300, 5, 115, 0, 0, 300, 301, 5, 101, 0, 0, 301, 302,
		5, 99, 0, 0, 302, 303, 5, 111, 0, 0, 303, 304, 5, 110, 0, 0, 304, 305,
		5, 100, 0, 0, 305, 90, 1, 0, 0, 0, 306, 307, 5, 109, 0, 0, 307, 308, 5,
		105, 0, 0, 308, 309, 5, 108, 0, 0, 309, 310, 5, 108, 0, 0, 310, 311, 5,
		105, 0, 0, 311, 312, 5, 115, 0, 0, 312, 313, 5, 101, 0, 0, 313, 314, 5,
		99, 0, 0, 314, 315, 5, 111, 0, 0, 315, 316, 5, 110, 0, 0, 316, 317, 5,
		100, 0, 0, 317, 92, 1, 0, 0, 0, 318, 319, 5, 121, 0, 0, 319, 320, 5, 101,
		0, 0, 320, 321, 5, 97, 0, 0, 321, 322, 5, 114, 0, 0, 322, 323, 5, 115,
		0, 0, 323, 94, 1, 0, 0, 0, 324, 325, 5, 109, 0, 0, 325, 326, 5, 111, 0,
		0, 326, 327, 5, 110, 0, 0, 327, 328, 5, 116, 0, 0, 328, 329, 5, 104, 0,
		0, 329, 330, 5, 115, 0, 0, 330, 96, 1, 0, 0, 0, 331, 332, 5, 119, 0, 0,
		332, 333, 5, 101, 0, 0, 333, 334, 5, 101, 0, 0, 334, 335, 5, 107, 0, 0,
		335, 336, 5, 115, 0, 0, 336, 98, 1, 0, 0, 0, 337, 338, 5, 100, 0, 0, 338,
		339, 5, 97, 0, 0, 339, 340, 5, 121, 0, 0, 340, 341, 5, 115, 0, 0, 341,
		100, 1, 0, 0, 0, 342, 343, 5, 104, 0, 0, 343, 344, 5, 111, 0, 0, 344, 345,
		5, 117, 0, 0, 345, 346, 5, 114, 0, 0, 346, 347, 5, 115, 0, 0, 347, 102,
		1, 0, 0, 0, 348, 349, 5, 109, 0, 0, 349, 350, 5, 105, 0, 0, 350, 351, 5,
		110, 0, 0, 351, 352, 5, 117, 0, 0, 352, 353, 5, 116, 0, 0, 353, 354, 5,
		101, 0, 0, 354, 355, 5, 115, 0, 0, 355, 104, 1, 0, 0, 0, 356, 357, 5, 115,
		0, 0, 357, 358, 5, 101, 0, 0, 358, 359, 5, 99, 0, 0, 359, 360, 5, 111,
		0, 0, 360, 361, 5, 110, 0, 0, 361, 362, 5, 100, 0, 0, 362, 363, 5, 115,
		0, 0, 363, 106, 1, 0, 0, 0, 364, 365, 5, 109, 0, 0, 365, 366, 5, 105, 0,
		0, 366, 367, 5, 108, 0, 0, 367, 368, 5, 108, 0, 0, 368, 369, 5, 105, 0,
		0, 369, 370, 5, 115, 0, 0, 370, 371, 5, 101, 0, 0, 371, 372, 5, 99, 0,
		0, 372, 373, 5, 111, 0, 0, 373, 374, 5, 110, 0, 0, 374, 375, 5, 100, 0,
		0, 375, 376, 5, 115, 0, 0, 376, 108, 1, 0, 0, 0, 377, 378, 5, 64, 0, 0,
		378, 379, 3, 115, 57, 0, 379, 110, 1, 0, 0, 0, 380, 381, 5, 64, 0, 0, 381,
		382, 3, 115, 57, 0, 382, 387, 5, 84, 0, 0, 383, 385, 3, 117, 58, 0, 384,
		386, 3, 119, 59, 0, 385, 384, 1, 0, 0, 0, 385, 386, 1, 0, 0, 0, 386, 388,
		1, 0, 0, 0, 387, 383, 1, 0, 0, 0, 387, 388, 1, 0, 0, 0, 388, 112, 1, 0,
		0, 0, 389, 390, 5, 64, 0, 0, 390, 391, 5, 84, 0, 0, 391, 392, 3, 117, 58,
		0, 392, 114, 1, 0, 0, 0, 393, 394, 7, 0, 0, 0, 394, 395, 7, 0, 0, 0, 395,
		396, 7, 0, 0, 0, 396, 405, 7, 0, 0, 0, 397, 398, 5, 45, 0, 0, 398, 399,
		7, 0, 0, 0, 399, 403, 7, 0, 0, 0, 400, 401, 5, 45, 0, 0, 401, 402, 7, 0,
		0, 0, 402, 404, 7, 0, 0, 0, 403, 400, 1, 0, 0, 0, 403, 404, 1, 0, 0, 0,
		404, 406, 1, 0, 0, 0, 405, 397, 1, 0, 0, 0, 405, 406, 1, 0, 0, 0, 406,
		116, 1, 0, 0, 0, 407, 408, 7, 0, 0, 0, 408, 425, 7, 0, 0, 0, 409, 410,
		5, 58, 0, 0, 410, 411, 7, 0, 0, 0, 411, 423, 7, 0, 0, 0, 412, 413, 5, 58,
		0, 0, 413, 414, 7, 0, 0, 0, 414, 421, 7, 0, 0, 0, 415, 417, 5, 46, 0, 0,
		416, 418, 7, 0, 0, 0, 417, 416, 1, 0, 0, 0, 418, 419, 1, 0, 0, 0, 419,
		417, 1, 0, 0, 0, 419, 420, 1, 0, 0, 0, 420, 422, 1, 0, 0, 0, 421, 415,
		1, 0, 0, 0, 421, 422, 1, 0, 0, 0, 422, 424, 1, 0, 0, 0, 423, 412, 1, 0,
		0, 0, 423, 424, 1, 0, 0, 0, 424, 426, 1, 0, 0, 0, 425, 409, 1, 0, 0, 0,
		425, 426, 1, 0, 0, 0, 426, 118, 1, 0, 0, 0, 427, 435, 5, 90, 0, 0, 428,
		429, 7, 1, 0, 0, 429, 430, 7, 0, 0, 0, 430, 431, 7, 0, 0, 0, 431, 432,
		5, 58, 0, 0, 432, 433, 7, 0, 0, 0, 433, 435, 7, 0, 0, 0, 434, 427, 1, 0,
		0, 0, 434, 428, 1, 0, 0, 0, 435, 120, 1, 0, 0, 0, 436, 438, 7, 2, 0, 0,
		437, 436, 1, 0, 0, 0, 438, 442, 1, 0, 0, 0, 439, 441, 7, 3, 0, 0, 440,
		439, 1, 0, 0, 0, 441, 444, 1, 0, 0, 0, 442, 440, 1, 0, 0, 0, 442, 443,
		1, 0, 0, 0, 443, 122, 1, 0, 0, 0, 444, 442, 1, 0, 0, 0, 445, 450, 5, 96,
		0, 0, 446, 449, 3, 135, 67, 0, 447, 449, 9, 0, 0, 0, 448, 446, 1, 0, 0,
		0, 448, 447, 1, 0, 0, 0, 449, 452, 1, 0, 0, 0, 450, 451, 1, 0, 0, 0, 450,
		448, 1, 0, 0, 0, 451, 453, 1, 0, 0, 0, 452, 450, 1, 0, 0, 0, 453, 454,
		5, 96, 0, 0, 454, 124, 1, 0, 0, 0, 455, 460, 5, 39, 0, 0, 456, 459, 3,
		135, 67, 0, 457, 459, 9, 0, 0, 0, 458, 456, 1, 0, 0, 0, 458, 457, 1, 0,
		0, 0, 459, 462, 1, 0, 0, 0, 460, 461, 1, 0, 0, 0, 460, 458, 1, 0, 0, 0,
		461, 463, 1, 0, 0, 0, 462, 460, 1, 0, 0, 0, 463, 464, 5, 39, 0, 0, 464,
		126, 1, 0, 0, 0, 465, 467, 7, 0, 0, 0, 466, 465, 1, 0, 0, 0, 467, 468,
		1, 0, 0, 0, 468, 466, 1, 0, 0, 0, 468, 469, 1, 0, 0, 0, 469, 476, 1, 0,
		0, 0, 470, 472, 5, 46, 0, 0, 471, 473, 7, 0, 0, 0, 472, 471, 1, 0, 0, 0,
		473, 474, 1, 0, 0, 0, 474, 472, 1, 0, 0, 0, 474, 475, 1, 0, 0, 0, 475,
		477, 1, 0, 0, 0, 476, 470, 1, 0, 0, 0, 476, 477, 1, 0, 0, 0, 477, 128,
		1, 0, 0, 0, 478, 480, 7, 4, 0, 0, 479, 478, 1, 0, 0, 0, 480, 481, 1, 0,
		0, 0, 481, 479, 1, 0, 0, 0, 481, 482, 1, 0, 0, 0, 482, 483, 1, 0, 0, 0,
		483, 484, 6, 64, 0, 0, 484, 130, 1, 0, 0, 0, 485, 486, 5, 47, 0, 0, 486,
		487, 5, 42, 0, 0, 487, 491, 1, 0, 0, 0, 488, 490, 9, 0, 0, 0, 489, 488,
		1, 0, 0, 0, 490, 493, 1, 0, 0, 0, 491, 492, 1, 0, 0, 0, 491, 489, 1, 0,
		0, 0, 492, 494, 1, 0, 0, 0, 493, 491, 1, 0, 0, 0, 494, 495, 5, 42, 0, 0,
		495, 496, 5, 47, 0, 0, 496, 497, 1, 0, 0, 0, 497, 498, 6, 65, 0, 0, 498,
		132, 1, 0, 0, 0, 499, 500, 5, 47, 0, 0, 500, 501, 5, 47, 0, 0, 501, 505,
		1, 0, 0, 0, 502, 504, 8, 5, 0, 0, 503, 502, 1, 0, 0, 0, 504, 507, 1, 0,
		0, 0, 505, 503, 1, 0, 0, 0, 505, 506, 1, 0, 0, 0, 506, 508, 1, 0, 0, 0,
		507, 505, 1, 0, 0, 0, 508, 509, 6, 66, 0, 0, 509, 134, 1, 0, 0, 0, 510,
		513, 5, 92, 0, 0, 511, 514, 7, 6, 0, 0, 512, 514, 3, 137, 68, 0, 513, 511,
		1, 0, 0, 0, 513, 512, 1, 0, 0, 0, 514, 136, 1, 0, 0, 0, 515, 516, 5, 117,
		0, 0, 516, 517, 3, 139, 69, 0, 517, 518, 3, 139, 69, 0, 518, 519, 3, 139,
		69, 0, 519, 520, 3, 139, 69, 0, 520, 138, 1, 0, 0, 0, 521, 522, 7, 7, 0,
		0, 522, 140, 1, 0, 0, 0, 24, 0, 385, 387, 403, 405, 419, 421, 423, 425,
		434, 437, 440, 442, 448, 450, 458, 460, 468, 474, 476, 481, 491, 505, 513,
		1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// FhirPathLexerInit initializes any static state used to implement FhirPathLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewFhirPathLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func FhirPathLexerInit() {
	staticData := &FhirPathLexerLexerStaticData
	staticData.once.Do(fhirpathlexerLexerInit)
}

// NewFhirPathLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewFhirPathLexer(input antlr.CharStream) *FhirPathLexer {
	FhirPathLexerInit()
	l := new(FhirPathLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &FhirPathLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "FhirPath.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FhirPathLexer tokens.
const (
	FhirPathLexerT__0                = 1
	FhirPathLexerT__1                = 2
	FhirPathLexerT__2                = 3
	FhirPathLexerT__3                = 4
	FhirPathLexerT__4                = 5
	FhirPathLexerT__5                = 6
	FhirPathLexerT__6                = 7
	FhirPathLexerT__7                = 8
	FhirPathLexerT__8                = 9
	FhirPathLexerT__9                = 10
	FhirPathLexerT__10               = 11
	FhirPathLexerT__11               = 12
	FhirPathLexerT__12               = 13
	FhirPathLexerT__13               = 14
	FhirPathLexerT__14               = 15
	FhirPathLexerT__15               = 16
	FhirPathLexerT__16               = 17
	FhirPathLexerT__17               = 18
	FhirPathLexerT__18               = 19
	FhirPathLexerT__19               = 20
	FhirPathLexerT__20               = 21
	FhirPathLexerT__21               = 22
	FhirPathLexerT__22               = 23
	FhirPathLexerT__23               = 24
	FhirPathLexerT__24               = 25
	FhirPathLexerT__25               = 26
	FhirPathLexerT__26               = 27
	FhirPathLexerT__27               = 28
	FhirPathLexerT__28               = 29
	FhirPathLexerT__29               = 30
	FhirPathLexerT__30               = 31
	FhirPathLexerT__31               = 32
	FhirPathLexerT__32               = 33
	FhirPathLexerT__33               = 34
	FhirPathLexerT__34               = 35
	FhirPathLexerT__35               = 36
	FhirPathLexerT__36               = 37
	FhirPathLexerT__37               = 38
	FhirPathLexerT__38               = 39
	FhirPathLexerT__39               = 40
	FhirPathLexerT__40               = 41
	FhirPathLexerT__41               = 42
	FhirPathLexerT__42               = 43
	FhirPathLexerT__43               = 44
	FhirPathLexerT__44               = 45
	FhirPathLexerT__45               = 46
	FhirPathLexerT__46               = 47
	FhirPathLexerT__47               = 48
	FhirPathLexerT__48               = 49
	FhirPathLexerT__49               = 50
	FhirPathLexerT__50               = 51
	FhirPathLexerT__51               = 52
	FhirPathLexerT__52               = 53
	FhirPathLexerT__53               = 54
	FhirPathLexerDATE                = 55
	FhirPathLexerDATETIME            = 56
	FhirPathLexerTIME                = 57
	FhirPathLexerIDENTIFIER          = 58
	FhirPathLexerDELIMITEDIDENTIFIER = 59
	FhirPathLexerSTRING              = 60
	FhirPathLexerNUMBER              = 61
	FhirPathLexerWS                  = 62
	FhirPathLexerCOMMENT             = 63
	FhirPathLexerLINE_COMMENT        = 64
)
