//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r5.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r5/core/codes.proto";
import "proto/google/fhir/proto/r5/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r5.core";
option (.google.fhir.proto.fhir_version) = R5;
option go_package = "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/resources/procedure_go_proto";

// Auto-generated from StructureDefinition for Procedure.
// An action that is being or was performed on an individual or entity.
// See http://hl7.org/fhir/StructureDefinition/Procedure
message Procedure {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/Procedure";

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Procedure.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // External Identifiers for this procedure
  repeated Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated Uri instantiates_uri = 12;

  // A request for this procedure
  repeated Reference based_on = 13 [
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest"
  ];

  // Part of referenced event
  repeated Reference part_of = 14 [
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "MedicationAdministration"
  ];

  // preparation | in-progress | not-done | on-hold | stopped | completed |
  // entered-in-error | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/event-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    EventStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason for current status
  CodeableConcept status_reason = 16;

  // Classification of the procedure
  repeated CodeableConcept category = 17;

  // Identification of the procedure
  CodeableConcept code = 18;

  // Individual or entity the procedure was performed on
  Reference subject = 19 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Group",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Location"
  ];

  // Who is the target of the procedure when it is not the subject of record
  // only
  Reference focus = 20 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Group",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Specimen"
  ];

  // The Encounter during which this Procedure was created
  Reference encounter = 21
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // When the procedure occurred or is occurring
  message OccurrenceX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      DateTime date_time = 1;
      Period period = 2;
      String string_value = 3 [json_name = "string"];
      Age age = 4;
      Range range = 5;
      Timing timing = 6;
    }
  }
  OccurrenceX occurrence = 22;

  // When the procedure was first captured in the subject's record
  DateTime recorded = 23;

  // Who recorded the procedure
  Reference recorder = 24 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // Reported rather than primary record
  message ReportedX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      Boolean boolean = 1;
      Reference reference = 2 [
        (.google.fhir.proto.valid_reference_type) = "Patient",
        (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
        (.google.fhir.proto.valid_reference_type) = "Practitioner",
        (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
        (.google.fhir.proto.valid_reference_type) = "Organization"
      ];
    }
  }
  ReportedX reported = 25;

  // Who performed the procedure and what they did
  message Performer {
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "onBehalfOf.exists() and actor.resolve().exists() implies actor.resolve().where($this is Practitioner or $this is PractitionerRole).empty()";

    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Type of performance
    CodeableConcept function = 4;

    // Who performed the procedure
    Reference actor = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "Organization",
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
      (.google.fhir.proto.valid_reference_type) = "Device",
      (.google.fhir.proto.valid_reference_type) = "CareTeam",
      (.google.fhir.proto.valid_reference_type) = "HealthcareService"
    ];

    // Organization the device or practitioner was acting for
    Reference on_behalf_of = 6
        [(.google.fhir.proto.valid_reference_type) = "Organization"];

    // When the performer performed the procedure
    Period period = 7;
  }
  repeated Performer performer = 26;

  // Where the procedure happened
  Reference location = 27
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // The justification that the procedure was performed
  repeated CodeableReference reason = 28;

  // Target body sites
  repeated CodeableConcept body_site = 29;

  // The result of procedure
  CodeableConcept outcome = 30;

  // Any report resulting from the procedure
  repeated Reference report = 31 [
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference",
    (.google.fhir.proto.valid_reference_type) = "Composition"
  ];

  // Complication following the procedure
  repeated CodeableReference complication = 32;

  // Instructions for follow up
  repeated CodeableConcept follow_up = 33;

  // Additional information about the procedure
  repeated Annotation note = 34;

  // Manipulated, implanted, or removed device
  message FocalDevice {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Kind of change to device
    CodeableConcept action = 4;

    // Device that was changed
    Reference manipulated = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Device"
    ];
  }
  repeated FocalDevice focal_device = 35;

  // Items used during procedure
  repeated CodeableReference used = 36;

  // Extra information relevant to the procedure
  repeated Reference supporting_info = 37
      [(.google.fhir.proto.valid_reference_type) = "Resource"];
}
