//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r5.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r5/core/codes.proto";
import "proto/google/fhir/proto/r5/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r5.core";
option (.google.fhir.proto.fhir_version) = R5;
option go_package = "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/resources/condition_definition_go_proto";

// Auto-generated from StructureDefinition for ConditionDefinition.
// A definition of a condition.
// See http://hl7.org/fhir/StructureDefinition/ConditionDefinition
message ConditionDefinition {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/ConditionDefinition";
  option (.google.fhir.proto.fhir_path_message_warning_constraint) =
      "name.exists() implies name.matches('^[A-Z]([A-Za-z0-9_]){1,254}$')";

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // ConditionDefinition.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // Canonical identifier for this condition definition, represented as a URI
  // (globally unique)
  Uri url = 10 [(.google.fhir.proto.fhir_path_warning_constraint) =
                    "exists() implies matches('^[^|# ]+$')"];

  // Additional identifier for the condition definition
  repeated Identifier identifier = 11;

  // Business version of the condition definition
  String version = 12;

  // How to compare versions
  message VersionAlgorithmX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      String string_value = 1 [json_name = "string"];
      Coding coding = 2;
    }
  }
  VersionAlgorithmX version_algorithm = 13;

  // Name for this condition definition (computer friendly)
  String name = 14;

  // Name for this condition definition (human friendly)
  String title = 15;

  // Subordinate title of the event definition
  String subtitle = 16;

  // draft | active | retired | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/publication-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    PublicationStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // For testing purposes, not real usage
  Boolean experimental = 18;

  // Date last changed
  DateTime date = 19;

  // Name of the publisher/steward (organization or individual)
  String publisher = 20;

  // Contact details for the publisher
  repeated ContactDetail contact = 21;

  // Natural language description of the condition definition
  Markdown description = 22;

  // The context that the content is intended to support
  repeated UsageContext use_context = 23;

  // Intended jurisdiction for condition definition (if applicable)
  repeated CodeableConcept jurisdiction = 24;

  // Identification of the condition, problem or diagnosis
  CodeableConcept code = 25
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Subjective severity of condition
  CodeableConcept severity = 26;

  // Anatomical location, if relevant
  CodeableConcept body_site = 27;

  // Stage/grade, usually assessed formally
  CodeableConcept stage = 28;

  // Whether Severity is appropriate
  Boolean has_severity_value = 29 [json_name = "hasSeverity"];

  // Whether bodySite is appropriate
  Boolean has_body_site_value = 30 [json_name = "hasBodySite"];

  // Whether stage is appropriate
  Boolean has_stage_value = 31 [json_name = "hasStage"];

  // Formal Definition for the condition
  repeated Uri definition = 32;

  // Observations particularly relevant to this condition
  message Observation {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Category that is relevant
    CodeableConcept category = 4;

    // Code for relevant Observation
    CodeableConcept code = 5;
  }
  repeated Observation observation = 33;

  // Medications particularly relevant for this condition
  message Medication {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Category that is relevant
    CodeableConcept category = 4;

    // Code for relevant Medication
    CodeableConcept code = 5;
  }
  repeated Medication medication = 34;

  // Observation that suggets this condition
  message Precondition {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // sensitive | specific
    message TypeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/condition-precondition-type";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      ConditionPreconditionTypeCode.Value value = 1;

      String id = 2;

      repeated Extension extension = 3;
    }
    TypeCode type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Code for relevant Observation
    CodeableConcept code = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Value of Observation
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        CodeableConcept codeable_concept = 1;
        Quantity quantity = 2;
      }
    }
    ValueX value = 6;
  }
  repeated Precondition precondition = 35;

  // Appropriate team for this condition
  repeated Reference team = 36
      [(.google.fhir.proto.valid_reference_type) = "CareTeam"];

  // Questionnaire for this condition
  message Questionnaire {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // preadmit | diff-diagnosis | outcome
    message PurposeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/condition-questionnaire-purpose";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      ConditionQuestionnairePurposeCode.Value value = 1;

      String id = 2;

      repeated Extension extension = 3;
    }
    PurposeCode purpose = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Specific Questionnaire
    Reference reference = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Questionnaire"
    ];
  }
  repeated Questionnaire questionnaire = 37;

  // Plan that is appropriate
  message Plan {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Use for the plan
    CodeableConcept role = 4;

    // The actual plan
    Reference reference = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "PlanDefinition"
    ];
  }
  repeated Plan plan = 38;
}
