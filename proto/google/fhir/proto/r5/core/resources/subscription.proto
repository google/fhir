//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r5.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r5/core/codes.proto";
import "proto/google/fhir/proto/r5/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r5.core";
option (.google.fhir.proto.fhir_version) = R5;
option go_package = "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/resources/subscription_go_proto";

// Auto-generated from StructureDefinition for Subscription.
// Notification about a SubscriptionTopic.
// See http://hl7.org/fhir/StructureDefinition/Subscription
message Subscription {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/Subscription";

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Subscription.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // Additional identifiers (business identifier)
  repeated Identifier identifier = 10;

  // Human readable name for this subscription
  String name = 11;

  // requested | active | error | off | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/subscription-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    SubscriptionStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reference to the subscription topic being subscribed to
  Canonical topic = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Contact details for source (e.g. troubleshooting)
  repeated ContactPoint contact = 14;

  // When to automatically delete the subscription
  Instant end = 15;

  // Entity responsible for Subscription changes
  Reference managing_entity = 16 [
    (.google.fhir.proto.valid_reference_type) = "CareTeam",
    (.google.fhir.proto.valid_reference_type) = "HealthcareService",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // Description of why this subscription was created
  String reason = 17;

  // Criteria for narrowing the subscription topic stream
  message FilterBy {
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "(comparator.exists() and modifier.exists()).not()";

    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Allowed Resource (reference to definition) for this Subscription filter
    Uri resource_type = 4;

    // Filter label defined in SubscriptionTopic
    String filter_parameter = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // eq | ne | gt | lt | ge | le | sa | eb | ap
    message ComparatorCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/search-comparator";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      SearchComparatorCode.Value value = 1;

      String id = 2;

      repeated Extension extension = 3;
    }
    ComparatorCode comparator = 6;

    // missing | exact | contains | not | text | in | not-in | below | above |
    // type | identifier | of-type | code-text | text-advanced | iterate
    message ModifierCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/search-modifier-code";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      SearchModifierCode.Value value = 1;

      String id = 2;

      repeated Extension extension = 3;
    }
    ModifierCode modifier = 7;

    // Literal value or resource path
    String value = 8
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated FilterBy filter_by = 18;

  // Channel type for notifications
  Coding channel_type = 19
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Where the channel points to
  Url endpoint = 20;

  // Channel type
  message Parameter {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Name (key) of the parameter
    String name = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Value of the parameter to use or pass through
    String value = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Parameter parameter = 21;

  // Interval in seconds to send 'heartbeat' notification
  UnsignedInt heartbeat_period = 22;

  // Timeout in seconds to attempt notification delivery
  UnsignedInt timeout = 23;

  // MIME type to send, or omit for no payload
  message ContentTypeCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/mimetypes";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    // Field 1 reserved to allow enumeration in the future.
    reserved 1;

    String id = 2;

    repeated Extension extension = 3;

    // This valueset is not enumerable, and so is represented as a string.
    string value = 4;
  }
  ContentTypeCode content_type = 24;

  // empty | id-only | full-resource
  message ContentCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/subscription-payload-content";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    SubscriptionPayloadContentCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  ContentCode content = 25;

  // Maximum number of events that can be combined in a single notification
  PositiveInt max_count = 26;
}
