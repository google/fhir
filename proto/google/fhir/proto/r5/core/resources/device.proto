//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r5.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r5/core/codes.proto";
import "proto/google/fhir/proto/r5/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r5.core";
option (.google.fhir.proto.fhir_version) = R5;
option go_package = "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/resources/device_go_proto";

// Auto-generated from StructureDefinition for Device.
// Item used in healthcare.
// See http://hl7.org/fhir/StructureDefinition/Device
message Device {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/Device";
  option (.google.fhir.proto.fhir_path_message_constraint) =
      "name.where(display=true).count() <= 1";

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Device.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // Instance identifier
  repeated Identifier identifier = 10;

  // The name used to display by default when the device is referenced
  String display_name = 11;

  // The reference to the definition for the device
  CodeableReference definition = 12;

  // Unique Device Identifier (UDI) Barcode string
  message UdiCarrier {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Mandatory fixed portion of UDI
    String device_identifier = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // UDI Issuing Organization
    Uri issuer = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Regional UDI authority
    Uri jurisdiction = 6;

    // UDI Machine Readable Barcode String
    Base64Binary carrier_aidc = 7 [json_name = "carrierAIDC"];

    // UDI Human Readable Barcode String
    String carrier_hrf = 8 [json_name = "carrierHRF"];

    // barcode | rfid | manual | card | self-reported | electronic-transmission
    // | unknown
    message EntryTypeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/udi-entry-type";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      UDIEntryTypeCode.Value value = 1;

      String id = 2;

      repeated Extension extension = 3;
    }
    EntryTypeCode entry_type = 9;
  }
  repeated UdiCarrier udi_carrier = 13;

  // active | inactive | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/device-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    FHIRDeviceStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 14;

  // lost | damaged | destroyed | available
  CodeableConcept availability_status = 15;

  // An identifier that supports traceability to the event during which material
  // in this product from one or more biological entities was obtained or pooled
  Identifier biological_source_event = 16;

  // Name of device manufacturer
  String manufacturer = 17;

  // Date when the device was made
  DateTime manufacture_date = 18;

  // Date and time of expiry of this device (if applicable)
  DateTime expiration_date = 19;

  // Lot number of manufacture
  String lot_number = 20;

  // Serial number assigned by the manufacturer
  String serial_number = 21;

  // The name or names of the device as known to the manufacturer and/or patient
  message Name {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // The term that names the device
    String value = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // registered-name | user-friendly-name | patient-reported-name
    message TypeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/device-nametype";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      DeviceNameTypeCode.Value value = 1;

      String id = 2;

      repeated Extension extension = 3;
    }
    TypeCode type = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // The preferred device name
    Boolean display = 6;
  }
  repeated Name name = 22;

  // The manufacturer's model number for the device
  String model_number = 23;

  // The part number or catalog number of the device
  String part_number = 24;

  // Indicates a high-level grouping of the device
  repeated CodeableConcept category = 25;

  // The kind or type of device
  repeated CodeableConcept type = 26;

  // The actual design of the device or software version running on the device
  message Version {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // The type of the device version, e.g. manufacturer, approved, internal
    CodeableConcept type = 4;

    // The hardware or software module of the device to which the version
    // applies
    Identifier component = 5;

    // The date the version was installed on the device
    DateTime install_date = 6;

    // The version text
    String value = 7
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Version version = 27;

  // Identifies the standards, specifications, or formal guidances for the
  // capabilities supported by the device
  message ConformsTo {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Describes the common type of the standard, specification, or formal
    // guidance.  communication | performance | measurement
    CodeableConcept category = 4;

    // Identifies the standard, specification, or formal guidance that the
    // device adheres to
    CodeableConcept specification = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Specific form or variant of the standard
    String version = 6;
  }
  repeated ConformsTo conforms_to = 28;

  // Inherent, essentially fixed, characteristics of the device.  e.g., time
  // properties, size, material, etc.
  message Property {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Code that specifies the property being represented
    CodeableConcept type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Value of the property
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        Quantity quantity = 1;
        CodeableConcept codeable_concept = 2;
        String string_value = 3 [json_name = "string"];
        Boolean boolean = 4;
        Integer integer = 5;
        Range range = 6;
        Attachment attachment = 7;
      }
    }
    ValueX value = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Property property = 29;

  // The designated condition for performing a task
  CodeableConcept mode = 30;

  // The series of occurrences that repeats during the operation of the device
  Count cycle = 31;

  // A measurement of time during the device's operation (e.g., days, hours,
  // mins, etc.)
  Duration duration = 32;

  // Organization responsible for device
  Reference owner = 33
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Details for human/organization for support
  repeated ContactPoint contact = 34;

  // Where the device is found
  Reference location = 35
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Network address to contact device
  Uri url = 36;

  // Technical endpoints providing access to electronic services provided by the
  // device
  repeated Reference endpoint = 37
      [(.google.fhir.proto.valid_reference_type) = "Endpoint"];

  // Linked device acting as a communication/data collector, translator or
  // controller
  repeated CodeableReference gateway = 38;

  // Device notes and comments
  repeated Annotation note = 39;

  // Safety Characteristics of Device
  repeated CodeableConcept safety = 40;

  // The higher level or encompassing device that this device is a logical part
  // of
  Reference parent = 41 [(.google.fhir.proto.valid_reference_type) = "Device"];
}
