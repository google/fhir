//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r5.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r5/core/codes.proto";
import "proto/google/fhir/proto/r5/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r5.core";
option (.google.fhir.proto.fhir_version) = R5;
option go_package = "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/resources/device_usage_go_proto";

// Auto-generated from StructureDefinition for DeviceUsage.
// Record of use of a device.
// See http://hl7.org/fhir/StructureDefinition/DeviceUsage
message DeviceUsage {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/DeviceUsage";

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // DeviceUsage.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // External identifier for this record
  repeated Identifier identifier = 10;

  // Fulfills plan, proposal or order
  repeated Reference based_on = 11
      [(.google.fhir.proto.valid_reference_type) = "ServiceRequest"];

  // active | completed | not-done | entered-in-error +
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/deviceusage-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    DeviceUsageStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The category of the statement - classifying how the statement is made
  repeated CodeableConcept category = 13;

  // Patient using device
  Reference patient = 14 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Supporting information
  repeated Reference derived_from = 15 [
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest",
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Claim",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "QuestionnaireResponse",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // The encounter or episode of care that establishes the context for this
  // device use statement
  Reference context = 16 [
    (.google.fhir.proto.valid_reference_type) = "Encounter",
    (.google.fhir.proto.valid_reference_type) = "EpisodeOfCare"
  ];

  // How often  the device was used
  message TimingX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      Timing timing = 1;
      Period period = 2;
      DateTime date_time = 3;
    }
  }
  TimingX timing = 17;

  // When the statement was made (and recorded)
  DateTime date_asserted = 18;

  // The status of the device usage, for example always, sometimes, never. This
  // is not the same as the status of the statement
  CodeableConcept usage_status = 19;

  // The reason for asserting the usage status - for example forgot, lost,
  // stolen, broken
  repeated CodeableConcept usage_reason = 20;

  // How device is being used
  message Adherence {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // always | never | sometimes
    CodeableConcept code = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // lost | stolen | prescribed | broken | burned | forgot
    repeated CodeableConcept reason = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  Adherence adherence = 21;

  // Who made the statement
  Reference information_source = 22 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Organization"
  ];

  // Code or Reference to device used
  CodeableReference device = 23
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Why device was used
  repeated CodeableReference reason = 24;

  // Target body site
  CodeableReference body_site = 25;

  // Addition details (comments, instructions)
  repeated Annotation note = 26;
}
