//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r5.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r5/core/codes.proto";
import "proto/google/fhir/proto/r5/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r5.core";
option (.google.fhir.proto.fhir_version) = R5;
option go_package = "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/resources/device_request_go_proto";

// Auto-generated from StructureDefinition for DeviceRequest.
// Medical device request.
// See http://hl7.org/fhir/StructureDefinition/DeviceRequest
message DeviceRequest {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/DeviceRequest";

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // DeviceRequest.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // External Request identifier
  repeated Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated Uri instantiates_uri = 12;

  // What request fulfills
  repeated Reference based_on = 13
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // What request replaces
  repeated Reference replaces = 14
      [(.google.fhir.proto.valid_reference_type) = "DeviceRequest"];

  // Identifier of composite request
  Identifier group_identifier = 15;

  // draft | active | on-hold | revoked | completed | entered-in-error | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    RequestStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 16;

  // proposal | plan | directive | order | original-order | reflex-order |
  // filler-order | instance-order | option
  message IntentCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-intent";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    RequestIntentCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  IntentCode intent = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // routine | urgent | asap | stat
  message PriorityCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-priority";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    RequestPriorityCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  PriorityCode priority = 18;

  // True if the request is to stop or not to start using the device
  Boolean do_not_perform = 19;

  // Device requested
  CodeableReference code = 20
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Quantity of devices to supply
  Integer quantity = 21;

  // Device details
  message Parameter {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Device detail
    CodeableConcept code = 4;

    // Value of detail
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        CodeableConcept codeable_concept = 1;
        Quantity quantity = 2;
        Range range = 3;
        Boolean boolean = 4;
      }
    }
    ValueX value = 5;
  }
  repeated Parameter parameter = 22;

  // Focus of request
  Reference subject = 23 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Group",
    (.google.fhir.proto.valid_reference_type) = "Location",
    (.google.fhir.proto.valid_reference_type) = "Device"
  ];

  // Encounter motivating request
  Reference encounter = 24
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Desired time or schedule for use
  message OccurrenceX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      DateTime date_time = 1;
      Period period = 2;
      Timing timing = 3;
    }
  }
  OccurrenceX occurrence = 25;

  // When recorded
  DateTime authored_on = 26;

  // Who/what submitted the device request
  Reference requester = 27 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization"
  ];

  // Requested Filler
  CodeableReference performer = 28;

  // Coded/Linked Reason for request
  repeated CodeableReference reason = 29;

  // PRN status of request
  Boolean as_needed = 30;

  // Device usage reason
  CodeableConcept as_needed_for = 31;

  // Associated insurance coverage
  repeated Reference insurance = 32 [
    (.google.fhir.proto.valid_reference_type) = "Coverage",
    (.google.fhir.proto.valid_reference_type) = "ClaimResponse"
  ];

  // Additional clinical information
  repeated Reference supporting_info = 33
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Notes or comments
  repeated Annotation note = 34;

  // Request provenance
  repeated Reference relevant_history = 35
      [(.google.fhir.proto.valid_reference_type) = "Provenance"];
}
