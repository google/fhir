//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r5.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r5/core/codes.proto";
import "proto/google/fhir/proto/r5/core/datatypes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r5.core";
option (.google.fhir.proto.fhir_version) = R5;
option go_package = "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/resources/composition_go_proto";

// Auto-generated from StructureDefinition for Composition.
// A set of resources composed into a single coherent clinical statement with
// clinical attestation. See http://hl7.org/fhir/StructureDefinition/Composition
message Composition {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/Composition";

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Composition.contained
  reserved 7;

  // Additional content defined by implementations
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // Canonical identifier for this Composition, represented as a URI (globally
  // unique)
  Uri url = 10;

  // Version-independent identifier for the Composition
  repeated Identifier identifier = 11;

  // An explicitly assigned identifer of a variation of the content in the
  // Composition
  String version = 12;

  // registered | partial | preliminary | final | amended | corrected | appended
  // | cancelled | entered-in-error | deprecated | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/composition-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    CompositionStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Kind of composition (LOINC if possible)
  CodeableConcept type = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Categorization of Composition
  repeated CodeableConcept category = 15;

  // Who and/or what the composition is about
  repeated Reference subject = 16
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Context of the Composition
  Reference encounter = 17
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Composition editing time
  DateTime date = 18
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The context that the content is intended to support
  repeated UsageContext use_context = 19;

  // Who and/or what authored the composition
  repeated Reference author = 20 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Organization"
  ];

  // Name for this Composition (computer friendly)
  String name = 21;

  // Human Readable name/title
  String title = 22
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // For any additional notes
  repeated Annotation note = 23;

  // Attests to accuracy of composition
  message Attester {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // personal | professional | legal | official
    CodeableConcept mode = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // When the composition was attested
    DateTime time = 5;

    // Who attested the composition
    Reference party = 6 [
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "Organization"
    ];
  }
  repeated Attester attester = 24;

  // Organization which maintains the composition
  Reference custodian = 25
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Relationships to other compositions/documents
  repeated RelatedArtifact relates_to = 26;

  // The clinical service(s) being documented
  message Event {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // The period covered by the documentation
    Period period = 4;

    // The event(s) being documented, as code(s), reference(s), or both
    repeated CodeableReference detail = 5;
  }
  repeated Event event = 27;

  // Composition is broken into sections
  message Section {
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "text.exists() or entry.exists() or section.exists()";
    option (.google.fhir.proto.fhir_path_message_constraint) =
        "emptyReason.empty() or entry.empty()";

    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Label for section (e.g. for ToC)
    String title = 4;

    // Classification of section (recommended)
    CodeableConcept code = 5;

    // Who and/or what authored the section
    repeated Reference author = 6 [
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "Device",
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
      (.google.fhir.proto.valid_reference_type) = "Organization"
    ];

    // Who/what the section is about, when it is not about the subject of
    // composition
    Reference focus = 7
        [(.google.fhir.proto.valid_reference_type) = "Resource"];

    // Text summary of the section, for human interpretation
    Narrative text = 8;

    // Order of section entries
    CodeableConcept ordered_by = 9;

    // A reference to data that supports this section
    repeated Reference entry = 10
        [(.google.fhir.proto.valid_reference_type) = "Resource"];

    // Why the section is empty
    CodeableConcept empty_reason = 11;

    // Nested Section
    repeated Section section = 12;
  }
  repeated Section section = 28;
}
