//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r4.qicore;

import "google/protobuf/any.proto";
import "proto/annotations.proto";
import "proto/r4/core/codes.proto";
import "proto/r4/core/datatypes.proto";
import "proto/r4/core/extensions.proto";
import "proto/r4/core/valuesets.proto";
import "proto/r4/qicore/codes.proto";
import "proto/r4/uscore.proto";
import "proto/r4/uscore_codes.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r4.qicore";
option go_package = "github.com/google/fhir/go/proto/r4/qicore";
option (.google.fhir.proto.fhir_version) = R4;

// Auto-generated from StructureDefinition for QICoreAdverseEvent.
// Medical care, research study or other healthcare event causing physical
// injury. See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-adverseevent
message QICoreAdverseEvent {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/AdverseEvent";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-adverseevent";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // AdverseEvent.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business identifier for the event
  core.Identifier identifier = 10;

  // actual | potential
  message ActualityCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/adverse-event-actuality";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.AdverseEventActualityCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  ActualityCode actuality = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // product-problem | product-quality | product-use-error | wrong-dose |
  // incorrect-prescribing-information | wrong-technique |
  // wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time |
  // expired-drug | medical-device-use-error | problem-different-manufacturer |
  // unsafe-physical-environment
  repeated core.CodeableConcept category = 12;

  // Type of the event itself in relation to the subject
  core.CodeableConcept event = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Subject impacted by event
  core.Reference subject = 14 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Group",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Encounter created as part of
  core.Reference encounter = 15
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // When the event occurred
  core.DateTime date = 16;

  // When the event was detected
  core.DateTime detected = 17;

  // When the event was recorded
  core.DateTime recorded_date = 18;

  // Effect on the subject due to this event
  repeated core.Reference resulting_condition = 19
      [(.google.fhir.proto.valid_reference_type) = "Condition"];

  // Location where adverse event occurred
  core.Reference location = 20
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Seriousness of the event
  core.CodeableConcept seriousness = 21;

  // mild | moderate | severe
  core.CodeableConcept severity = 22;

  // resolved | recovering | ongoing | resolvedWithSequelae | fatal | unknown
  core.CodeableConcept outcome = 23;

  // Who recorded the adverse event
  core.Reference recorder = 24 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // Who  was involved in the adverse event or the potential adverse event
  repeated core.Reference contributor = 25 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Device"
  ];

  // The suspected agent causing the adverse event
  message SuspectEntity {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Refers to the specific entity that caused the adverse event
    core.Reference instance = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Immunization",
      (.google.fhir.proto.valid_reference_type) = "Procedure",
      (.google.fhir.proto.valid_reference_type) = "Substance",
      (.google.fhir.proto.valid_reference_type) = "Medication",
      (.google.fhir.proto.valid_reference_type) = "MedicationAdministration",
      (.google.fhir.proto.valid_reference_type) = "MedicationStatement",
      (.google.fhir.proto.valid_reference_type) = "Device"
    ];

    // Information on the possible cause of the event
    message Causality {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Assessment of if the entity caused the event
      core.CodeableConcept assessment = 4;

      // AdverseEvent.suspectEntity.causalityProductRelatedness
      core.String product_relatedness = 5;

      // AdverseEvent.suspectEntity.causalityAuthor
      core.Reference author = 6 [
        (.google.fhir.proto.valid_reference_type) = "Practitioner",
        (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
      ];

      // ProbabilityScale | Bayesian | Checklist
      core.CodeableConcept method = 7;
    }
    Causality causality = 5
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];
  }
  repeated SuspectEntity suspect_entity = 26
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // AdverseEvent.subjectMedicalHistory
  repeated core.Reference subject_medical_history = 27 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "AllergyIntolerance",
    (.google.fhir.proto.valid_reference_type) = "FamilyMemberHistory",
    (.google.fhir.proto.valid_reference_type) = "Immunization",
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Media",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // AdverseEvent.referenceDocument
  repeated core.Reference reference_document = 28
      [(.google.fhir.proto.valid_reference_type) = "DocumentReference"];

  // AdverseEvent.study
  repeated core.Reference study = 29
      [(.google.fhir.proto.valid_reference_type) = "ResearchStudy"];
}

// Auto-generated from StructureDefinition for QICoreAllergyIntolerance.
// Allergy or Intolerance (generally: Risk of adverse reaction to a substance).
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-allergyintolerance
message QICoreAllergyIntolerance {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-allergyintolerance";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/AllergyIntolerance";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-allergyintolerance";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // AllergyIntolerance.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External ids for this item
  repeated core.Identifier identifier = 10;

  // active | inactive | resolved
  core.CodeableConcept clinical_status = 11;

  // unconfirmed | confirmed | refuted | entered-in-error
  core.CodeableConcept verification_status = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // allergy | intolerance - Underlying mechanism (if known)
  message TypeCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/allergy-intolerance-type";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.AllergyIntoleranceTypeCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  TypeCode type = 13;

  // food | medication | environment | biologic
  message CategoryCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/allergy-intolerance-category";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.AllergyIntoleranceCategoryCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  repeated CategoryCode category = 14;

  // low | high | unable-to-assess
  message CriticalityCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/allergy-intolerance-criticality";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.AllergyIntoleranceCriticalityCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  CriticalityCode criticality = 15;

  // Code that identifies the allergy or intolerance
  core.CodeableConcept code = 16
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who the sensitivity is for
  core.Reference patient = 17 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter when the allergy or intolerance was asserted
  core.Reference encounter = 18
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // When allergy or intolerance was identified
  message OnsetX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Age age = 2;
      core.Period period = 3;
      core.Range range = 4;
    }
  }
  OnsetX onset = 19;

  // Date first version of the resource instance was recorded
  core.DateTime recorded_date = 20;

  // Who recorded the sensitivity
  core.Reference recorder = 21 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Source of the information about the allergy
  core.Reference asserter = 22 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Date(/time) of last known occurrence of a reaction
  core.DateTime last_occurrence = 23;

  // Additional text not captured in other fields
  repeated core.Annotation note = 24;

  // Adverse Reaction Events linked to exposure to substance
  message Reaction {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Extension
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Specific substance or pharmaceutical product considered to be responsible
    // for event
    core.CodeableConcept substance = 4;

    // Clinical symptoms/signs associated with the Event
    repeated core.CodeableConcept manifestation = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Description of the event as a whole
    core.String description = 6;

    // Date(/time) when manifestations showed
    core.DateTime onset = 7;

    // mild | moderate | severe (of event as a whole)
    message SeverityCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/reaction-event-severity";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.AllergyIntoleranceSeverityCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    SeverityCode severity = 8;

    // How the subject was exposed to the substance
    core.CodeableConcept exposure_route = 9;

    // Text about event not captured in other fields
    repeated core.Annotation note = 10;

    // How long Manifestations persisted
    core.Duration reaction_duration = 11 [
      (.google.fhir.proto.fhir_inlined_extension_url) =
          "http://hl7.org/fhir/StructureDefinition/allergyintolerance-duration",
      (.google.fhir.proto.fhir_path_constraint) =
          "hasValue() or (children().count() > id.count())",
      (.google.fhir.proto.fhir_path_constraint) =
          "extension.exists() != value.exists()"
    ];
  }
  repeated Reaction reaction = 25
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Age that the allergy or intolerance resolved
  core.Age resolution_age = 26 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/allergyintolerance-resolutionAge",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];

  // Explanation associated with refuted status
  core.CodeableConcept reason_refuted = 27 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICoreBodyStructure.
// Specific and identified anatomical structure.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-bodystructure
message QICoreBodyStructure {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/BodyStructure";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-bodystructure";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // BodyStructure.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Bodystructure identifier
  repeated core.Identifier identifier = 10;

  // Whether this record is in active use
  core.Boolean active = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Kind of Structure
  core.CodeableConcept morphology = 12;

  // Body site
  core.CodeableConcept location = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Body site modifier
  repeated core.CodeableConcept location_qualifier = 14;

  // Text description
  core.String description = 15;

  // Attached images
  repeated core.Attachment image = 16;

  // Who this is about
  core.Reference patient = 17 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];
}

// Auto-generated from StructureDefinition for QICoreCarePlan.
// Healthcare plan for patient or group.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-careplan
message QICoreCarePlan {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-careplan";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/CarePlan";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-careplan";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // CarePlan.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External Ids for this plan
  repeated core.Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated core.Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated core.Uri instantiates_uri = 12;

  // Fulfills CarePlan
  repeated core.Reference based_on = 13
      [(.google.fhir.proto.valid_reference_type) = "CarePlan"];

  // CarePlan replaced by this CarePlan
  repeated core.Reference replaces = 14
      [(.google.fhir.proto.valid_reference_type) = "CarePlan"];

  // Part of referenced CarePlan
  repeated core.Reference part_of = 15
      [(.google.fhir.proto.valid_reference_type) = "CarePlan"];

  // draft | active | suspended | completed | entered-in-error | cancelled |
  // unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 16
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // proposal | plan | order | option
  message IntentCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/care-plan-intent";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.CarePlanIntentValueSet.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  IntentCode intent = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Type of plan
  repeated core.CodeableConcept category = 18
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Human-friendly name for the care plan
  core.String title = 19;

  // Summary of nature of plan
  core.String description = 20;

  // Who the care plan is for
  core.Reference subject = 21 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter created as part of
  core.Reference encounter = 22
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Time period plan covers
  core.Period period = 23;

  // Date record was first recorded
  core.DateTime created = 24;

  // Who is the designated responsible party
  core.Reference author = 25 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam"
  ];

  // Who provided the content of the care plan
  repeated core.Reference contributor = 26 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam"
  ];

  // Who's involved in plan?
  repeated core.Reference care_team = 27
      [(.google.fhir.proto.valid_reference_type) = "CareTeam"];

  // Health issues this plan addresses
  repeated core.Reference addresses = 28
      [(.google.fhir.proto.valid_reference_type) = "Condition"];

  // Information considered as part of plan
  repeated core.Reference supporting_info = 29
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Desired outcome of plan
  repeated core.Reference goal = 30
      [(.google.fhir.proto.valid_reference_type) = "Goal"];

  // Action to occur as part of plan
  message Activity {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Results of the activity
    repeated core.CodeableConcept outcome_codeable_concept = 4;

    // Appointment, Encounter, Procedure, etc.
    repeated core.Reference outcome_reference = 5
        [(.google.fhir.proto.valid_reference_type) = "Resource"];

    // Comments about the activity status/progress
    repeated core.Annotation progress = 6;

    // Activity details defined in specific resource
    core.Reference reference = 7 [
      (.google.fhir.proto.valid_reference_type) = "Appointment",
      (.google.fhir.proto.valid_reference_type) = "CommunicationRequest",
      (.google.fhir.proto.valid_reference_type) = "DeviceRequest",
      (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
      (.google.fhir.proto.valid_reference_type) = "NutritionOrder",
      (.google.fhir.proto.valid_reference_type) = "Task",
      (.google.fhir.proto.valid_reference_type) = "ServiceRequest",
      (.google.fhir.proto.valid_reference_type) = "VisionPrescription",
      (.google.fhir.proto.valid_reference_type) = "RequestGroup"
    ];

    // In-line definition of activity
    message Detail {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Kind of resource
      message KindCode {
        option (.google.fhir.proto.structure_definition_kind) =
            KIND_PRIMITIVE_TYPE;
        option (.google.fhir.proto.fhir_valueset_url) =
            "http://hl7.org/fhir/ValueSet/care-plan-activity-kind";
        option (.google.fhir.proto.fhir_profile_base) =
            "http://hl7.org/fhir/StructureDefinition/code";

        core.CarePlanActivityKindValueSet.Value value = 1;

        core.String id = 2;

        repeated core.Extension extension = 3;
      }
      KindCode kind = 4;

      // Instantiates FHIR protocol or definition
      repeated core.Canonical instantiates_canonical = 5;

      // Instantiates external protocol or definition
      repeated core.Uri instantiates_uri = 6;

      // Detail type of activity
      core.CodeableConcept code = 7;

      // Why activity should be done or why activity was prohibited
      repeated core.CodeableConcept reason_code = 8;

      // Why activity is needed
      repeated core.Reference reason_reference = 9 [
        (.google.fhir.proto.valid_reference_type) = "Condition",
        (.google.fhir.proto.valid_reference_type) = "Observation",
        (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
        (.google.fhir.proto.valid_reference_type) = "DocumentReference"
      ];

      // Goals this activity relates to
      repeated core.Reference goal = 10
          [(.google.fhir.proto.valid_reference_type) = "Goal"];

      // not-started | scheduled | in-progress | on-hold | completed | cancelled
      // | stopped | unknown | entered-in-error
      message StatusCode {
        option (.google.fhir.proto.structure_definition_kind) =
            KIND_PRIMITIVE_TYPE;
        option (.google.fhir.proto.fhir_valueset_url) =
            "http://hl7.org/fhir/ValueSet/care-plan-activity-status";
        option (.google.fhir.proto.fhir_profile_base) =
            "http://hl7.org/fhir/StructureDefinition/code";

        core.CarePlanActivityStatusCode.Value value = 1;

        core.String id = 2;

        repeated core.Extension extension = 3;
      }
      StatusCode status = 11
          [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

      // Reason for current status
      core.CodeableConcept status_reason = 12;

      // If true, activity is prohibiting action
      core.Boolean do_not_perform = 13;

      // When activity is to occur
      message ScheduledX {
        option (.google.fhir.proto.is_choice_type) = true;

        oneof choice {
          core.Timing timing = 1;
          core.Period period = 2;
          core.String string_value = 3 [json_name = "string"];
        }
      }
      ScheduledX scheduled = 14;

      // Where it should happen
      core.Reference location = 15
          [(.google.fhir.proto.valid_reference_type) = "Location"];

      // Who will be responsible?
      repeated core.Reference performer = 16 [
        (.google.fhir.proto.valid_reference_type) = "Practitioner",
        (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
        (.google.fhir.proto.valid_reference_type) = "Organization",
        (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
        (.google.fhir.proto.valid_reference_type) = "Patient",
        (.google.fhir.proto.valid_reference_type) = "CareTeam",
        (.google.fhir.proto.valid_reference_type) = "HealthcareService",
        (.google.fhir.proto.valid_reference_type) = "Device"
      ];

      // What is to be administered/supplied
      message ProductX {
        option (.google.fhir.proto.is_choice_type) = true;

        oneof choice {
          core.CodeableConcept codeable_concept = 1;
          core.Reference reference = 2 [
            (.google.fhir.proto.valid_reference_type) = "Medication",
            (.google.fhir.proto.valid_reference_type) = "Substance"
          ];
        }
      }
      ProductX product = 17;

      // How to consume/day?
      core.SimpleQuantity daily_amount = 18;

      // How much to administer/supply/consume
      core.SimpleQuantity quantity = 19;

      // Extra info describing activity to perform
      core.String description = 20;
    }
    Detail detail = 8 [(.google.fhir.proto.fhir_path_constraint) =
                           "hasValue() or (children().count() > id.count())"];
  }
  repeated Activity activity = 31 [
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "detail.empty() or reference.empty()"
  ];

  // Comments about the plan
  repeated core.Annotation note = 32;

  // field 33 reserved for CarePlan.category:assessplan which uses an
  // unsupported slicing on CodeableConcept
  reserved 33;
}

// Auto-generated from StructureDefinition for QICoreCareTeam.
// Planned participants in the coordination and delivery of care for a patient
// or group. See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-careteam
message QICoreCareTeam {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-careteam";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/CareTeam";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-careteam";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // CareTeam.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External Ids for this team
  repeated core.Identifier identifier = 10;

  // proposed | active | suspended | inactive | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/care-team-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.CareTeamStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11;

  // Type of team
  repeated core.CodeableConcept category = 12;

  // Name of the team, such as crisis assessment team
  core.String name = 13;

  // Who care team is for
  core.Reference subject = 14 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter created as part of
  core.Reference encounter = 15
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Time period team covers
  core.Period period = 16;

  // Members of the team
  message Participant {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Type of involvement
    core.CodeableConcept role = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Who is involved
    core.Reference member = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "Organization",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
    ];

    // Organization of the practitioner
    core.Reference on_behalf_of = 6
        [(.google.fhir.proto.valid_reference_type) = "Organization"];

    // Time period of participant
    core.Period period = 7;
  }
  repeated Participant participant = 17 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "onBehalfOf.exists() implies (member.resolve() is Practitioner)"
  ];

  // Why the care team exists
  repeated core.CodeableConcept reason_code = 18;

  // Why the care team exists
  repeated core.Reference reason_reference = 19
      [(.google.fhir.proto.valid_reference_type) = "Condition"];

  // Organization responsible for the care team
  repeated core.Reference managing_organization = 20
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // A contact detail for the care team (that applies to all members)
  repeated core.ContactPoint telecom = 21;

  // Comments made about the CareTeam
  repeated core.Annotation note = 22;
}

// Auto-generated from StructureDefinition for QICoreClaim.
// Claim, Pre-determination or Pre-authorization.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-claim
message QICoreClaim {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Claim";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-claim";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Claim.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business Identifier for claim
  repeated core.Identifier identifier = 10;

  // active | cancelled | draft | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/fm-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.FinancialResourceStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Category or discipline
  core.CodeableConcept type = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // More granular claim type
  core.CodeableConcept sub_type = 13;

  // claim | preauthorization | predetermination
  message UseCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/claim-use";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.UseCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  UseCode use = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The recipient of the products and services
  core.Reference patient = 15 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Relevant time frame for the claim
  core.Period billable_period = 16;

  // Resource creation date
  core.DateTime created = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Author of the claim
  core.Reference enterer = 18 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // Target
  core.Reference insurer = 19
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Party responsible for the claim
  core.Reference provider = 20 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization"
  ];

  // Desired processing ugency
  core.CodeableConcept priority = 21
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // For whom to reserve funds
  core.CodeableConcept funds_reserve = 22;

  // Prior or corollary claims
  message RelatedClaim {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Reference to the related claim
    core.Reference claim = 4
        [(.google.fhir.proto.valid_reference_type) = "Claim"];

    // How the reference claim is related
    core.CodeableConcept relationship = 5;

    // File or case reference
    core.Identifier reference = 6;
  }
  repeated RelatedClaim related = 23
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Prescription authorizing services and products
  core.Reference prescription = 24 [
    (.google.fhir.proto.valid_reference_type) = "DeviceRequest",
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
    (.google.fhir.proto.valid_reference_type) = "VisionPrescription"
  ];

  // Original prescription if superseded by fulfiller
  core.Reference original_prescription = 25 [
    (.google.fhir.proto.valid_reference_type) = "DeviceRequest",
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
    (.google.fhir.proto.valid_reference_type) = "VisionPrescription"
  ];

  // Recipient of benefits payable
  message Payee {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Category of recipient
    core.CodeableConcept type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Recipient reference
    core.Reference party = 5 [
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "Organization",
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
    ];
  }
  Payee payee = 26 [(.google.fhir.proto.fhir_path_constraint) =
                        "hasValue() or (children().count() > id.count())"];

  // Treatment referral
  core.Reference referral = 27
      [(.google.fhir.proto.valid_reference_type) = "ServiceRequest"];

  // Servicing facility
  core.Reference facility = 28
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Members of the care team
  message CareTeam {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Order of care team
    core.PositiveInt sequence = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Practitioner or organization
    core.Reference provider = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "Organization"
    ];

    // Indicator of the lead practitioner
    core.Boolean responsible = 6;

    // Function within the team
    core.CodeableConcept role = 7;

    // Practitioner credential or specialization
    core.CodeableConcept qualification = 8;
  }
  repeated CareTeam care_team = 29
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Supporting information
  message SupportingInformation {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Information instance identifier
    core.PositiveInt sequence = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Classification of the supplied information
    core.CodeableConcept category = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Type of information
    core.CodeableConcept code = 6;

    // When it occurred
    message TimingX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Date date = 1;
        core.Period period = 2;
      }
    }
    TimingX timing = 7;

    // Data to be provided
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Boolean boolean = 1;
        core.String string_value = 2 [json_name = "string"];
        core.Quantity quantity = 3;
        core.Attachment attachment = 4;
        core.Reference reference = 5
            [(.google.fhir.proto.valid_reference_type) = "Resource"];
      }
    }
    ValueX value = 8;

    // Explanation for the information
    core.CodeableConcept reason = 9;
  }
  repeated SupportingInformation supporting_info = 30
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Pertinent diagnosis information
  message Diagnosis {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Diagnosis instance identifier
    core.PositiveInt sequence = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Nature of illness or problem
    message DiagnosisX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.CodeableConcept codeable_concept = 1;
        core.Reference reference = 2
            [(.google.fhir.proto.valid_reference_type) = "Condition"];
      }
    }
    DiagnosisX diagnosis = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Timing or nature of the diagnosis
    repeated core.CodeableConcept type = 6;

    // Present on admission
    core.CodeableConcept on_admission = 7;

    // Package billing code
    core.CodeableConcept package_code = 8;
  }
  repeated Diagnosis diagnosis = 31
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Clinical procedures performed
  message Procedure {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Procedure instance identifier
    core.PositiveInt sequence = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Category of Procedure
    repeated core.CodeableConcept type = 5;

    // When the procedure was performed
    core.DateTime date = 6;

    // Specific clinical procedure
    message ProcedureX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.CodeableConcept codeable_concept = 1;
        core.Reference reference = 2
            [(.google.fhir.proto.valid_reference_type) = "Procedure"];
      }
    }
    ProcedureX procedure = 7
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Unique device identifier
    repeated core.Reference udi = 8
        [(.google.fhir.proto.valid_reference_type) = "Device"];
  }
  repeated Procedure procedure = 32
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Patient insurance information
  message Insurance {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Insurance instance identifier
    core.PositiveInt sequence = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Coverage to be used for adjudication
    core.Boolean focal = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Pre-assigned Claim number
    core.Identifier identifier = 6;

    // Insurance information
    core.Reference coverage = 7 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Coverage"
    ];

    // Additional provider contract number
    core.String business_arrangement = 8;

    // Prior authorization reference number
    repeated core.String pre_auth_ref = 9;

    // Adjudication results
    core.Reference claim_response = 10
        [(.google.fhir.proto.valid_reference_type) = "ClaimResponse"];
  }
  repeated Insurance insurance = 33 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())"
  ];

  // Details of the event
  message Accident {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // When the incident occurred
    core.Date date = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // The nature of the accident
    core.CodeableConcept type = 5;

    // Where the event occurred
    message LocationX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Address address = 1;
        core.Reference reference = 2
            [(.google.fhir.proto.valid_reference_type) = "Location"];
      }
    }
    LocationX location = 6;
  }
  Accident accident = 34
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Product or service provided
  message Item {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Item instance identifier
    core.PositiveInt sequence = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Applicable careTeam members
    repeated core.PositiveInt care_team_sequence = 5;

    // Applicable diagnoses
    repeated core.PositiveInt diagnosis_sequence = 6;

    // Applicable procedures
    repeated core.PositiveInt procedure_sequence = 7;

    // Applicable exception and supporting information
    repeated core.PositiveInt information_sequence = 8;

    // Revenue or cost center code
    core.CodeableConcept revenue = 9;

    // Benefit classification
    core.CodeableConcept category = 10;

    // Billing, service, product, or drug code
    core.CodeableConcept product_or_service = 11
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Product or service billing modifiers
    repeated core.CodeableConcept modifier = 12;

    // Program the product or service is provided under
    repeated core.CodeableConcept program_code = 13;

    // Date or dates of service or product delivery
    message ServicedX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Date date = 1;
        core.Period period = 2;
      }
    }
    ServicedX serviced = 14;

    // Place of service or where product was supplied
    message LocationX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.CodeableConcept codeable_concept = 1;
        core.Address address = 2;
        core.Reference reference = 3
            [(.google.fhir.proto.valid_reference_type) = "Location"];
      }
    }
    LocationX location = 15;

    // Count of products or services
    core.SimpleQuantity quantity = 16;

    // Fee, charge or cost per item
    core.Money unit_price = 17;

    // Price scaling factor
    core.Decimal factor = 18;

    // Total item cost
    core.Money net = 19;

    // Unique device identifier
    repeated core.Reference udi = 20
        [(.google.fhir.proto.valid_reference_type) = "Device"];

    // Anatomical location
    core.CodeableConcept body_site = 21;

    // Anatomical sub-location
    repeated core.CodeableConcept sub_site = 22;

    // Encounters related to this billed item
    repeated core.Reference encounter = 23
        [(.google.fhir.proto.valid_reference_type) = "Encounter"];

    // Product or service provided
    message Detail {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Item instance identifier
      core.PositiveInt sequence = 4
          [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

      // Revenue or cost center code
      core.CodeableConcept revenue = 5;

      // Benefit classification
      core.CodeableConcept category = 6;

      // Billing, service, product, or drug code
      core.CodeableConcept product_or_service = 7
          [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

      // Service/Product billing modifiers
      repeated core.CodeableConcept modifier = 8;

      // Program the product or service is provided under
      repeated core.CodeableConcept program_code = 9;

      // Count of products or services
      core.SimpleQuantity quantity = 10;

      // Fee, charge or cost per item
      core.Money unit_price = 11;

      // Price scaling factor
      core.Decimal factor = 12;

      // Total item cost
      core.Money net = 13;

      // Unique device identifier
      repeated core.Reference udi = 14
          [(.google.fhir.proto.valid_reference_type) = "Device"];

      // Product or service provided
      message SubDetail {
        // Unique id for inter-element referencing
        core.String id = 1;

        // Additional content defined by implementations
        repeated core.Extension extension = 2;

        // Extensions that cannot be ignored even if unrecognized
        repeated core.Extension modifier_extension = 3;

        // Item instance identifier
        core.PositiveInt sequence = 4
            [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

        // Revenue or cost center code
        core.CodeableConcept revenue = 5;

        // Benefit classification
        core.CodeableConcept category = 6;

        // Billing, service, product, or drug code
        core.CodeableConcept product_or_service = 7
            [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

        // Service/Product billing modifiers
        repeated core.CodeableConcept modifier = 8;

        // Program the product or service is provided under
        repeated core.CodeableConcept program_code = 9;

        // Count of products or services
        core.SimpleQuantity quantity = 10;

        // Fee, charge or cost per item
        core.Money unit_price = 11;

        // Price scaling factor
        core.Decimal factor = 12;

        // Total item cost
        core.Money net = 13;

        // Unique device identifier
        repeated core.Reference udi = 14
            [(.google.fhir.proto.valid_reference_type) = "Device"];
      }
      repeated SubDetail sub_detail = 15
          [(.google.fhir.proto.fhir_path_constraint) =
               "hasValue() or (children().count() > id.count())"];
    }
    repeated Detail detail = 24
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];
  }
  repeated Item item = 35
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Total claim cost
  core.Money total = 36;
}

// Auto-generated from StructureDefinition for QICoreCommunication.
// A record of information transmitted from a sender to a receiver.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-communication
message QICoreCommunication {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Communication";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-communication";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Communication.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Unique identifier
  repeated core.Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated core.Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated core.Uri instantiates_uri = 12;

  // Request fulfilled by this communication
  repeated core.Reference based_on = 13
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Part of this action
  repeated core.Reference part_of = 14
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Reply to
  repeated core.Reference in_response_to = 15
      [(.google.fhir.proto.valid_reference_type) = "Communication"];

  // preparation | in-progress | not-done | suspended | aborted | completed |
  // entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/event-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.EventStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 16
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason for current status
  core.CodeableConcept status_reason = 17;

  // Message category
  repeated core.CodeableConcept category = 18;

  // Message urgency
  message PriorityCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-priority";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestPriorityCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  PriorityCode priority = 19;

  // A channel of communication
  repeated core.CodeableConcept medium = 20;

  // Focus of message
  core.Reference subject = 21 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Group"
  ];

  // Description of the purpose/content
  core.CodeableConcept topic = 22;

  // Resources that pertain to this communication
  repeated core.Reference about = 23
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Encounter created as part of
  core.Reference encounter = 24
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // When sent
  core.DateTime sent = 25;

  // When received
  core.DateTime received = 26;

  // Message recipient
  repeated core.Reference recipient = 27 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Group"
  ];

  // Message sender
  core.Reference sender = 28 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Indication for message
  repeated core.CodeableConcept reason_code = 29;

  // Why was communication done?
  repeated core.Reference reason_reference = 30 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // Message payload
  message Payload {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Message part content
    message ContentX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.String string_value = 1 [json_name = "string"];
        core.Attachment attachment = 2;
        core.Reference reference = 3
            [(.google.fhir.proto.valid_reference_type) = "Resource"];
      }
    }
    ContentX content = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Payload payload = 31
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Comments made about the communication
  repeated core.Annotation note = 32;
}

// Auto-generated from StructureDefinition for QICoreCommunicationRequest.
// A request for information to be sent to a receiver.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-communicationrequest
message QICoreCommunicationRequest {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/CommunicationRequest";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-communicationrequest";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // CommunicationRequest.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Unique identifier
  repeated core.Identifier identifier = 10;

  // Fulfills plan or proposal
  repeated core.Reference based_on = 11
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Request(s) replaced by this request
  repeated core.Reference replaces = 12
      [(.google.fhir.proto.valid_reference_type) = "CommunicationRequest"];

  // Composite request this is part of
  core.Identifier group_identifier = 13;

  // draft | active | suspended | cancelled | completed | entered-in-error |
  // unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason for current status
  core.CodeableConcept status_reason = 15;

  // Message category
  repeated core.CodeableConcept category = 16;

  // Message urgency
  message PriorityCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-priority";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestPriorityCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  PriorityCode priority = 17;

  // True if request is prohibiting action
  core.Boolean do_not_perform = 18;

  // A channel of communication
  repeated core.CodeableConcept medium = 19;

  // Focus of message
  core.Reference subject = 20
      [(.google.fhir.proto.valid_reference_type) = "Patient"];

  // Resources that pertain to this communication request
  repeated core.Reference about = 21
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Encounter created as part of
  core.Reference encounter = 22
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Message payload
  message Payload {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Message part content
    message ContentX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.String string_value = 1 [json_name = "string"];
        core.Attachment attachment = 2;
        core.Reference reference = 3
            [(.google.fhir.proto.valid_reference_type) = "Resource"];
      }
    }
    ContentX content = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Payload payload = 23
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // When scheduled
  message OccurrenceX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
    }
  }
  OccurrenceX occurrence = 24;

  // When request transitioned to being actionable
  core.DateTime authored_on = 25;

  // Who/what is requesting service
  core.Reference requester = 26 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Device"
  ];

  // Message recipient
  repeated core.Reference recipient = 27 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Group",
    (.google.fhir.proto.valid_reference_type) = "CareTeam"
  ];

  // Message sender
  core.Reference sender = 28 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Why is communication needed?
  repeated core.CodeableConcept reason_code = 29;

  // Why is communication needed?
  repeated core.Reference reason_reference = 30 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // Comments made about communication request
  repeated core.Annotation note = 31;
}

// Auto-generated from StructureDefinition for QICoreCondition.
// Detailed information about conditions, problems or diagnoses.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition
message QICoreCondition {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-condition";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Condition";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Condition.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External Ids for this condition
  repeated core.Identifier identifier = 10;

  // active | recurrence | relapse | inactive | remission | resolved
  core.CodeableConcept clinical_status = 11;

  // unconfirmed | provisional | differential | confirmed | refuted |
  // entered-in-error
  core.CodeableConcept verification_status = 12;

  // problem-list-item | encounter-diagnosis
  repeated core.CodeableConcept category = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Subjective severity of condition
  core.CodeableConcept severity = 14;

  // Identification of the condition, problem or diagnosis
  core.CodeableConcept code = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Anatomical location, if relevant
  repeated core.CodeableConcept body_site = 16;

  // Who has the condition?
  core.Reference subject = 17 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter created as part of
  core.Reference encounter = 18
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Estimated or actual date,  date-time, or age
  message OnsetX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Age age = 2;
      core.Period period = 3;
      core.Range range = 4;
    }
  }
  OnsetX onset = 19;

  // When in resolution/remission
  message AbatementX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Age age = 2;
      core.Period period = 3;
      core.Range range = 4;
    }
  }
  AbatementX abatement = 20;

  // Date record was first recorded
  core.DateTime recorded_date = 21;

  // Who recorded the condition
  core.Reference recorder = 22 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Person who asserts this condition
  core.Reference asserter = 23 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Stage/grade, usually assessed formally
  message Stage {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Simple summary (disease specific)
    core.CodeableConcept summary = 4;

    // Formal record of assessment
    repeated core.Reference assessment = 5 [
      (.google.fhir.proto.valid_reference_type) = "ClinicalImpression",
      (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
      (.google.fhir.proto.valid_reference_type) = "Observation"
    ];

    // Kind of staging
    core.CodeableConcept type = 6;
  }
  repeated Stage stage = 24 [
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "summary.exists() or assessment.exists()"
  ];

  // Supporting evidence
  message Evidence {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Manifestation/symptom
    repeated core.CodeableConcept code = 4;

    // Supporting information found elsewhere
    repeated core.Reference detail = 5
        [(.google.fhir.proto.valid_reference_type) = "Resource"];
  }
  repeated Evidence evidence = 25 [
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "code.exists() or detail.exists()"
  ];

  // Additional information about the Condition
  repeated core.Annotation note = 26;

  // What caused the Condition?
  repeated core.ConditionDueTo.ValueX due_to = 27 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/condition-dueTo",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];

  // Precedent for this Condition
  repeated core.ConditionOccurredFollowing.ValueX occurred_following = 28 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/condition-occurredFollowing",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICoreCoverage.
// Insurance or medical plan or a payment agreement.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-coverage
message QICoreCoverage {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Coverage";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-coverage";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Coverage.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business Identifier for the coverage
  repeated core.Identifier identifier = 10;

  // active | cancelled | draft | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/fm-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.FinancialResourceStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Coverage category such as medical or accident
  core.CodeableConcept type = 12;

  // Owner of the policy
  core.Reference policy_holder = 13 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Subscriber to the policy
  core.Reference subscriber = 14 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // ID assigned to the subscriber
  core.String subscriber_id = 15;

  // Plan beneficiary
  core.Reference beneficiary = 16 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Dependent number
  core.String dependent = 17;

  // Beneficiary relationship to the subscriber
  core.CodeableConcept relationship = 18;

  // Coverage start and end dates
  core.Period period = 19;

  // Issuer of the policy
  repeated core.Reference payor = 20 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Additional coverage classifications
  message Class {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Type of class such as 'group' or 'plan'
    core.CodeableConcept type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Value associated with the type
    core.String value = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Human readable description of the type and value
    core.String name = 6;
  }
  repeated Class class_value = 21 [
    json_name = "class",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())"
  ];

  // Relative order of the coverage
  core.PositiveInt order = 22;

  // Insurer network
  core.String network = 23;

  // Patient payments for services/products
  message CostToBeneficiary {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Cost category
    core.CodeableConcept type = 4;

    // The amount or percentage due from the beneficiary
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.SimpleQuantity quantity = 1;
        core.Money money = 2;
      }
    }
    ValueX value = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Exceptions for patient payments
    message Exemption {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Exception category
      core.CodeableConcept type = 4
          [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

      // The effective period of the exception
      core.Period period = 5;
    }
    repeated Exemption exception = 6
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];
  }
  repeated CostToBeneficiary cost_to_beneficiary = 24
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Reimbursement to insurer
  core.Boolean subrogation = 25;

  // Contract details
  repeated core.Reference contract = 26
      [(.google.fhir.proto.valid_reference_type) = "Contract"];
}

// Auto-generated from StructureDefinition for QICoreDevice.
// Item used in healthcare.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-device
message QICoreDevice {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-device";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Device";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-device";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Device.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Instance identifier
  repeated core.Identifier identifier = 10
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The reference to the definition for the device
  core.Reference definition = 11
      [(.google.fhir.proto.valid_reference_type) = "DeviceDefinition"];

  // Unique Device Identifier (UDI) Barcode string
  message UdiCarrier {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Mandatory fixed portion of UDI
    core.String device_identifier = 4;

    // UDI Issuing Organization
    core.Uri issuer = 5;

    // Regional UDI authority
    core.Uri jurisdiction = 6;

    // UDI Machine Readable Barcode String
    core.Base64Binary carrier_aidc = 7 [json_name = "carrierAIDC"];

    // UDI Human Readable Barcode String
    core.String carrier_hrf = 8 [json_name = "carrierHRF"];

    // barcode | rfid | manual +
    message EntryTypeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/udi-entry-type";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.UDIEntryTypeCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    EntryTypeCode entry_type = 9;
  }
  UdiCarrier udi_carrier = 12
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // active | inactive | entered-in-error | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/device-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.FHIRDeviceStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 13;

  // online | paused | standby | offline | not-ready | transduc-discon |
  // hw-discon | off
  repeated core.CodeableConcept status_reason = 14;

  // The distinct identification string
  core.String distinct_identifier = 15;

  // Name of device manufacturer
  core.String manufacturer = 16;

  // Date when the device was made
  core.DateTime manufacture_date = 17;

  // Date and time of expiry of this device (if applicable)
  core.DateTime expiration_date = 18;

  // Lot number of manufacture
  core.String lot_number = 19;

  // Serial number assigned by the manufacturer
  core.String serial_number = 20;

  // The name of the device as given by the manufacturer
  message DeviceName {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The name of the device
    core.String name = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // udi-label-name | user-friendly-name | patient-reported-name |
    // manufacturer-name | model-name | other
    message TypeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/device-nametype";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.DeviceNameTypeCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    TypeCode type = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated DeviceName device_name = 21
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // The model number for the device
  core.String model_number = 22;

  // The part number of the device
  core.String part_number = 23;

  // The kind or type of device
  core.CodeableConcept type = 24
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The capabilities supported on a  device, the standards to which the device
  // conforms for a particular purpose, and used for the communication
  message Specialization {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The standard that is used to operate and communicate
    core.CodeableConcept system_type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // The version of the standard that is used to operate and communicate
    core.String version = 5;
  }
  repeated Specialization specialization = 25
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // The actual design of the device or software version running on the device
  message Version {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The type of the device version
    core.CodeableConcept type = 4;

    // A single component of the device version
    core.Identifier component = 5;

    // The version text
    core.String value = 6
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Version version = 26
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // The actual configuration settings of a device as it actually operates,
  // e.g., regulation status, time properties
  message Property {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Code that specifies the property DeviceDefinitionPropetyCode (Extensible)
    core.CodeableConcept type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Property value as a quantity
    repeated core.Quantity value_quantity = 5;

    // Property value as a code, e.g., NTP4 (synced to NTP)
    repeated core.CodeableConcept value_code = 6;
  }
  repeated Property property = 27
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Patient to whom Device is affixed
  core.Reference patient = 28 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Organization responsible for device
  core.Reference owner = 29
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Details for human/organization for support
  repeated core.ContactPoint contact = 30;

  // Where the device is found
  core.Reference location = 31
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Network address to contact device
  core.Uri url = 32;

  // Device notes and comments
  repeated core.Annotation note = 33;

  // Safety Characteristics of Device
  repeated core.CodeableConcept safety = 34;

  // The parent device
  core.Reference parent = 35
      [(.google.fhir.proto.valid_reference_type) = "Device"];
}

// Auto-generated from StructureDefinition for QICoreDeviceRequest.
// Medical device request.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-devicerequest
message QICoreDeviceRequest {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/DeviceRequest";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-devicerequest";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // DeviceRequest.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External Request identifier
  repeated core.Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated core.Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated core.Uri instantiates_uri = 12;

  // What request fulfills
  repeated core.Reference based_on = 13
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // What request replaces
  repeated core.Reference prior_request = 14
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Identifier of composite request
  core.Identifier group_identifier = 15;

  // draft | active | suspended | completed | entered-in-error | cancelled
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 16;

  // proposal | plan | original-order | encoded | reflex-order
  message IntentCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-intent";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestIntentCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  IntentCode intent = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Indicates how quickly the {{title}} should be addressed with respect to
  // other requests
  message PriorityCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-priority";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestPriorityCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  PriorityCode priority = 18;

  // Device requested
  message CodeX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Reference reference = 1
          [(.google.fhir.proto.valid_reference_type) = "Device"];
      core.CodeableConcept codeable_concept = 2;
    }
  }
  CodeX code = 19
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Device details
  message Parameter {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Device detail
    core.CodeableConcept code = 4;

    // Value of detail
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.CodeableConcept codeable_concept = 1;
        core.Quantity quantity = 2;
        core.Range range = 3;
        core.Boolean boolean = 4;
      }
    }
    ValueX value = 5;
  }
  repeated Parameter parameter = 20
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Focus of request
  core.Reference subject = 21 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter motivating request
  core.Reference encounter = 22
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Desired time or schedule for use
  message OccurrenceX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
      core.Timing timing = 3;
    }
  }
  OccurrenceX occurrence = 23;

  // When recorded
  core.DateTime authored_on = 24;

  // Who/what is requesting diagnostics
  core.Reference requester = 25 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization"
  ];

  // Filler role
  core.CodeableConcept performer_type = 26;

  // Requested Filler
  core.Reference performer = 27 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Coded Reason for request
  repeated core.CodeableConcept reason_code = 28;

  // Linked Reason for request
  repeated core.Reference reason_reference = 29 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation"
  ];

  // Associated insurance coverage
  repeated core.Reference insurance = 30 [
    (.google.fhir.proto.valid_reference_type) = "Coverage",
    (.google.fhir.proto.valid_reference_type) = "ClaimResponse"
  ];

  // Additional clinical information
  repeated core.Reference supporting_info = 31
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Notes or comments
  repeated core.Annotation note = 32;

  // Request provenance
  repeated core.Reference relevant_history = 33
      [(.google.fhir.proto.valid_reference_type) = "Provenance"];

  // true if request is prohibiting action
  core.Boolean do_not_perform = 34 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/request-doNotPerform",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICore_Not_Done_Extension.
// Device Not Used Extension.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-deviceusestatement-notDone
message DeviceUseStatementQICoreNotDoneExtension {
  option (.google.fhir.proto.structure_definition_kind) = KIND_COMPLEX_TYPE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Extension";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-deviceusestatement-notDone";

  // Unique id for inter-element referencing
  core.String id = 1;

  // Additional content defined by implementations
  repeated core.Extension extension = 2;

  // Value of extension
  message ValueX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Boolean boolean = 1;
    }
  }
  ValueX value = 3;

  // field 4 reserved for Extension.value[x]:valueBoolean which uses an
  // unsupported slicing on boolean
  reserved 4;
}

// Auto-generated from StructureDefinition for QICoreDeviceUseStatement.
// Record of use of a device.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-deviceusestatement
message QICoreDeviceUseStatement {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/DeviceUseStatement";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-deviceusestatement";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // DeviceUseStatement.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External identifier for this record
  repeated core.Identifier identifier = 10;

  // Fulfills plan, proposal or order
  repeated core.Reference based_on = 11
      [(.google.fhir.proto.valid_reference_type) = "ServiceRequest"];

  // active | completed | entered-in-error +
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/device-statement-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.DeviceUseStatementStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Patient using device
  core.Reference subject = 13 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Supporting information
  repeated core.Reference derived_from = 14 [
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest",
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Claim",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "QuestionnaireResponse",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // How often  the device was used
  message TimingX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Timing timing = 1;
      core.Period period = 2;
      core.DateTime date_time = 3;
    }
  }
  TimingX timing = 15;

  // When statement was recorded
  core.DateTime recorded_on = 16;

  // Who made the statement
  core.Reference source = 17 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Reference to device used
  core.Reference device = 18 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Device"
  ];

  // Why device was used
  repeated core.CodeableConcept reason_code = 19;

  // Why was DeviceUseStatement performed?
  repeated core.Reference reason_reference = 20 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference",
    (.google.fhir.proto.valid_reference_type) = "Media"
  ];

  // Target body site
  core.CodeableConcept body_site = 21;

  // Addition details (comments, instructions)
  repeated core.Annotation note = 22;

  // Device Not Used Extension
  core.Boolean not_done = 23 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-deviceusestatement-notDone",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICoreDiagnosticReportLab.
// A Diagnostic report - a combination of request information, atomic results,
// images, interpretation, as well as formatted reports. See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-diagnosticreport-lab
message QICoreDiagnosticReportLab {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-diagnosticreport-lab";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/DiagnosticReport";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-diagnosticreport-lab";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // DiagnosticReport.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business identifier for report
  repeated core.Identifier identifier = 10;

  // What was requested
  repeated core.Reference based_on = 11 [
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "ImmunizationRecommendation",
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
    (.google.fhir.proto.valid_reference_type) = "NutritionOrder",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest"
  ];

  // registered | partial | preliminary | final +
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/diagnostic-report-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.DiagnosticReportStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Service category
  repeated core.CodeableConcept category = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // US Core Laboratory Report Order Code
  core.CodeableConcept code = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The subject of the report - usually, but not always, the patient
  core.Reference subject = 15 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Health care event when test ordered
  core.Reference encounter = 16
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Specimen Collection Datetime or Period
  message EffectiveX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
    }
  }
  EffectiveX effective = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // DateTime this version was made
  core.Instant issued = 18
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Responsible Diagnostic Service
  repeated core.Reference performer = 19 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization"
  ];

  // Primary result interpreter
  repeated core.Reference results_interpreter = 20 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam"
  ];

  // Specimens this report is based on
  repeated core.Reference specimen = 21
      [(.google.fhir.proto.valid_reference_type) = "Specimen"];

  // Observations
  repeated core.Reference result = 22 [
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.fhir_path_constraint) =
        "result.exists() or presentedForm.exists()"
  ];

  // Reference to full details of imaging associated with the diagnostic report
  repeated core.Reference imaging_study = 23
      [(.google.fhir.proto.valid_reference_type) = "ImagingStudy"];

  // Key images associated with this report
  message Media {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Comment about the image (e.g. explanation)
    core.String comment = 4;

    // Reference to the image source
    core.Reference link = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Media"
    ];
  }
  repeated Media media = 24
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Clinical conclusion (interpretation) of test results
  core.String conclusion = 25;

  // Codes for the clinical conclusion of test results
  repeated core.CodeableConcept conclusion_code = 26;

  // Entire report as issued
  repeated core.Attachment presented_form = 27
      [(.google.fhir.proto.fhir_path_constraint) =
           "result.exists() or presentedForm.exists()"];

  // Location Performed
  core.Reference location_performed = 28 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/diagnosticReport-locationPerformed",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];

  // field 29 reserved for DiagnosticReport.category:lab which uses an
  // unsupported slicing on CodeableConcept
  reserved 29;
}

// Auto-generated from StructureDefinition for QICoreDiagnosticReportNote.
// US Core Diagnostic Report Profile for Report and Note exchange.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-diagnosticreport-note
message QICoreDiagnosticReportNote {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-diagnosticreport-note";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/DiagnosticReport";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-diagnosticreport-note";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // DiagnosticReport.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business identifier for report
  repeated core.Identifier identifier = 10;

  // What was requested
  repeated core.Reference based_on = 11 [
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "ImmunizationRecommendation",
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
    (.google.fhir.proto.valid_reference_type) = "NutritionOrder",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest"
  ];

  // registered | partial | preliminary | final +
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/diagnostic-report-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.DiagnosticReportStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Service category
  repeated core.CodeableConcept category = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // US Core Report Code
  core.CodeableConcept code = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The subject of the report - usually, but not always, the patient
  core.Reference subject = 15 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Health care event when test ordered
  core.Reference encounter = 16
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Time of the report or note
  message EffectiveX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
    }
  }
  EffectiveX effective = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // DateTime this version was made
  core.Instant issued = 18;

  // Responsible Diagnostic Service
  repeated core.Reference performer = 19 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization"
  ];

  // Primary result interpreter
  repeated core.Reference results_interpreter = 20 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam"
  ];

  // Specimens this report is based on
  repeated core.Reference specimen = 21
      [(.google.fhir.proto.valid_reference_type) = "Specimen"];

  // Observations
  repeated core.Reference result = 22
      [(.google.fhir.proto.valid_reference_type) = "Observation"];

  // Reference to full details of imaging associated with the diagnostic report
  repeated core.Reference imaging_study = 23
      [(.google.fhir.proto.valid_reference_type) = "ImagingStudy"];

  // Key images associated with this report
  message Media {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Comment about the image (e.g. explanation)
    core.String comment = 4;

    // Reference to the image source
    core.Reference link = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Media"
    ];
  }
  repeated Media media = 24
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Clinical conclusion (interpretation) of test results
  core.String conclusion = 25;

  // Codes for the clinical conclusion of test results
  repeated core.CodeableConcept conclusion_code = 26;

  // Entire report as issued
  repeated core.Attachment presented_form = 27;

  // Location Performed
  core.Reference location_performed = 28 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/diagnosticReport-locationPerformed",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for EncounterProcedureExtension.
// Encounter Procedure Extension.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter-procedure
message EncounterEncounterProcedureExtension {
  option (.google.fhir.proto.structure_definition_kind) = KIND_COMPLEX_TYPE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Extension";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter-procedure";

  // Unique id for inter-element referencing
  core.String id = 1;

  // Additional content defined by implementations
  repeated core.Extension extension = 2;

  // type
  core.CodeableConcept type = 4
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // rank
  core.PositiveInt rank = 5
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // procedure
  core.Reference procedure = 6
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
}

// Auto-generated from StructureDefinition for QICoreEncounter.
// An interaction during which services are provided to the patient.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter
message QICoreEncounter {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-encounter";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Encounter";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Encounter.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Identifier(s) by which this encounter is known
  repeated core.Identifier identifier = 10;

  // planned | arrived | triaged | in-progress | onleave | finished | cancelled
  // +
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/encounter-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.EncounterStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // List of past encounter statuses
  message StatusHistory {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // planned | arrived | triaged | in-progress | onleave | finished |
    // cancelled +
    message StatusCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/encounter-status";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.EncounterStatusCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    StatusCode status = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // The time that the episode was in the specified status
    core.Period period = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated StatusHistory status_history = 12
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Classification of patient encounter
  core.Coding class_value = 13 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    json_name = "class"
  ];

  // List of past encounter classes
  message ClassHistory {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // inpatient | outpatient | ambulatory | emergency +
    core.Coding class_value = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      json_name = "class"
    ];

    // The time that the episode was in the specified class
    core.Period period = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated ClassHistory class_history = 14
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Specific type of encounter
  repeated core.CodeableConcept type = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Specific type of service
  core.CodeableConcept service_type = 16;

  // Indicates the urgency of the encounter
  core.CodeableConcept priority = 17;

  // The patient or group present at the encounter
  core.Reference subject = 18 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Episode(s) of care that this encounter should be recorded against
  repeated core.Reference episode_of_care = 19
      [(.google.fhir.proto.valid_reference_type) = "EpisodeOfCare"];

  // The ServiceRequest that initiated this encounter
  repeated core.Reference based_on = 20
      [(.google.fhir.proto.valid_reference_type) = "ServiceRequest"];

  // List of participants involved in the encounter
  message Participant {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Role of participant in encounter
    repeated core.CodeableConcept type = 4;

    // Period of time during the encounter that the participant participated
    core.Period period = 5;

    // Persons involved in the encounter other than the patient
    core.Reference individual = 6 [
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
    ];
  }
  repeated Participant participant = 21
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // The appointment that scheduled this encounter
  repeated core.Reference appointment = 22
      [(.google.fhir.proto.valid_reference_type) = "Appointment"];

  // The start and end time of the encounter
  core.Period period = 23;

  // Quantity of time the encounter lasted (less time absent)
  core.Duration length = 24;

  // Coded reason the encounter takes place
  repeated core.CodeableConcept reason_code = 25;

  // Reason the encounter takes place (reference)
  repeated core.Reference reason_reference = 26 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "ImmunizationRecommendation"
  ];

  // The list of diagnosis relevant to this encounter
  message Diagnosis {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The diagnosis or procedure relevant to the encounter
    core.Reference condition = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Condition",
      (.google.fhir.proto.valid_reference_type) = "Procedure"
    ];

    // Role that this diagnosis has within the encounter (e.g. admission,
    // billing, discharge …)
    core.CodeableConcept use = 5;

    // Ranking of the diagnosis (for each role type)
    core.PositiveInt rank = 6;
  }
  repeated Diagnosis diagnosis = 27
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // The set of accounts that may be used for billing for this Encounter
  repeated core.Reference account = 28
      [(.google.fhir.proto.valid_reference_type) = "Account"];

  // Details about the admission to a healthcare service
  message Hospitalization {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Pre-admission identifier
    core.Identifier pre_admission_identifier = 4;

    // The location/organization from which the patient came before admission
    core.Reference origin = 5
        [(.google.fhir.proto.valid_reference_type) = "Location"];

    // From where patient was admitted (physician referral, transfer)
    core.CodeableConcept admit_source = 6;

    // The type of hospital re-admission that has occurred (if any). If the
    // value is absent, then this is not identified as a readmission
    core.CodeableConcept re_admission = 7;

    // Diet preferences reported by the patient
    repeated core.CodeableConcept diet_preference = 8;

    // Special courtesies (VIP, board member)
    repeated core.CodeableConcept special_courtesy = 9;

    // Wheelchair, translator, stretcher, etc.
    repeated core.CodeableConcept special_arrangement = 10;

    // Location/organization to which the patient is discharged
    core.Reference destination = 11
        [(.google.fhir.proto.valid_reference_type) = "Location"];

    // Category or kind of location after discharge
    core.CodeableConcept discharge_disposition = 12;
  }
  Hospitalization hospitalization = 29
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // List of locations where the patient has been
  message Location {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Location the encounter takes place
    core.Reference location = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Location"
    ];

    // planned | active | reserved | completed
    message StatusCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/encounter-location-status";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.EncounterLocationStatusCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    StatusCode status = 5;

    // The physical type of the location (usually the level in the location
    // hierachy - bed room ward etc.)
    core.CodeableConcept physical_type = 6;

    // Time period during which the patient was present at the location
    core.Period period = 7;
  }
  repeated Location location = 30
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // The organization (facility) responsible for this encounter
  core.Reference service_provider = 31
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Another Encounter this encounter is part of
  core.Reference part_of = 32
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Explanation for cancellation
  core.CodeableConcept reason_cancelled = 33 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/encounter-reasonCancelled",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];

  // Encounter Procedure Extension
  repeated EncounterEncounterProcedureExtension procedure = 34 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter-procedure",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICoreFamilyMemberHistory.
// Information about patient's relatives, relevant for patient.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-familymemberhistory
message QICoreFamilyMemberHistory {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/FamilyMemberHistory";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-familymemberhistory";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // FamilyMemberHistory.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External Id(s) for this record
  repeated core.Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated core.Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated core.Uri instantiates_uri = 12;

  // partial | completed | entered-in-error | health-unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/history-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.FamilyHistoryStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // subject-unknown | withheld | unable-to-obtain | deferred
  core.CodeableConcept data_absent_reason = 14;

  // Patient history is about
  core.Reference patient = 15 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // When history was recorded or last updated
  core.DateTime date = 16;

  // The family member described
  core.String name = 17;

  // Relationship to the subject
  core.CodeableConcept relationship = 18
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // male | female | other | unknown
  core.CodeableConcept sex = 19;

  // (approximate) date of birth
  message BornX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Period period = 1;
      core.Date date = 2;
      core.String string_value = 3 [json_name = "string"];
    }
  }
  BornX born = 20;

  // (approximate) age
  message AgeX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Age age = 1;
      core.Range range = 2;
      core.String string_value = 3 [json_name = "string"];
    }
  }
  AgeX age = 21;

  // Age is estimated?
  core.Boolean estimated_age = 22;

  // Dead? How old/when?
  message DeceasedX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Boolean boolean = 1;
      core.Age age = 2;
      core.Range range = 3;
      core.Date date = 4;
      core.String string_value = 5 [json_name = "string"];
    }
  }
  DeceasedX deceased = 23;

  // Why was family member history performed?
  repeated core.CodeableConcept reason_code = 24;

  // Why was family member history performed?
  repeated core.Reference reason_reference = 25 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "AllergyIntolerance",
    (.google.fhir.proto.valid_reference_type) = "QuestionnaireResponse",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // General note about related person
  repeated core.Annotation note = 26;

  // Condition that the related person had
  message Condition {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Extension
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Condition suffered by relation
    core.CodeableConcept code = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // deceased | permanent disability | etc.
    core.CodeableConcept outcome = 5;

    // Whether the condition contributed to the cause of death
    core.Boolean contributed_to_death = 6;

    // When condition first manifested
    message OnsetX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Age age = 1;
        core.Range range = 2;
        core.Period period = 3;
        core.String string_value = 4 [json_name = "string"];
      }
    }
    OnsetX onset = 7;

    // Extra information about condition
    repeated core.Annotation note = 8;

    // When (or if) the family member's condition resolved
    core.FamilyMemberHistoryAbatement.ValueX condition_abatement = 9 [
      (.google.fhir.proto.fhir_inlined_extension_url) =
          "http://hl7.org/fhir/StructureDefinition/familymemberhistory-abatement",
      (.google.fhir.proto.fhir_path_constraint) =
          "hasValue() or (children().count() > id.count())",
      (.google.fhir.proto.fhir_path_constraint) =
          "extension.exists() != value.exists()"
    ];

    // The seriousness of the family member condition
    core.CodeableConcept condition_severity = 10 [
      (.google.fhir.proto.fhir_inlined_extension_url) =
          "http://hl7.org/fhir/StructureDefinition/familymemberhistory-severity",
      (.google.fhir.proto.fhir_path_constraint) =
          "hasValue() or (children().count() > id.count())",
      (.google.fhir.proto.fhir_path_constraint) =
          "extension.exists() != value.exists()"
    ];
  }
  repeated Condition condition = 27
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];
}

// Auto-generated from StructureDefinition for QICoreFlag.
// Key information to flag to healthcare providers.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-flag
message QICoreFlag {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Flag";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-flag";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Flag.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business identifier
  repeated core.Identifier identifier = 10;

  // active | inactive | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/flag-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.FlagStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Clinical, administrative, etc.
  repeated core.CodeableConcept category = 12;

  // Coded or textual message to display to user
  core.CodeableConcept code = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who/What is flag about?
  core.Reference subject = 14 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Location",
    (.google.fhir.proto.valid_reference_type) = "Group",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Practitioner"
  ];

  // Time period when flag is active
  core.Period period = 15;

  // Alert relevant during encounter
  core.Reference encounter = 16
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Flag creator
  core.Reference author = 17 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];
}

// Auto-generated from StructureDefinition for QICoreGoal.
// Describes the intended objective(s) for a patient, group or organization.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-goal
message QICoreGoal {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-goal";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Goal";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-goal";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Goal.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External Ids for this goal
  repeated core.Identifier identifier = 10;

  // proposed | planned | accepted | active | on-hold | completed | cancelled |
  // entered-in-error | rejected
  message LifecycleStatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/goal-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.GoalLifecycleStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  LifecycleStatusCode lifecycle_status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // in-progress | improving | worsening | no-change | achieved | sustaining |
  // not-achieved | no-progress | not-attainable
  core.CodeableConcept achievement_status = 12;

  // E.g. Treatment, dietary, behavioral, etc.
  repeated core.CodeableConcept category = 13;

  // high-priority | medium-priority | low-priority
  core.CodeableConcept priority = 14;

  // Code or text describing goal
  core.CodeableConcept description = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who this goal is intended for
  core.Reference subject = 16 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Organization"
  ];

  // When goal pursuit begins
  message StartX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Date date = 1;
    }
  }
  StartX start = 17;

  // Target outcome for the goal
  message Target {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The parameter whose value is being tracked
    core.CodeableConcept measure = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // The target value to be achieved
    message DetailX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Quantity quantity = 1;
        core.Range range = 2;
        core.CodeableConcept codeable_concept = 3;
        core.String string_value = 4 [json_name = "string"];
        core.Boolean boolean = 5;
        core.Integer integer = 6;
        core.Ratio ratio = 7;
      }
    }
    DetailX detail = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Reach goal on or before
    message DueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Date date = 1;
        core.Duration duration = 2;
      }
    }
    DueX due = 6;
  }
  repeated Target target = 18 [
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "(detail.exists() and measure.exists()) or detail.exists().not()"
  ];

  // When goal status took effect
  core.Date status_date = 19;

  // Reason for current status
  core.String status_reason = 20;

  // Who's responsible for creating Goal?
  core.Reference expressed_by = 21 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Issues addressed by this goal
  repeated core.Reference addresses = 22 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "MedicationStatement",
    (.google.fhir.proto.valid_reference_type) = "NutritionOrder",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest",
    (.google.fhir.proto.valid_reference_type) = "RiskAssessment"
  ];

  // Comments about the goal
  repeated core.Annotation note = 23;

  // What result was achieved regarding the goal?
  repeated core.CodeableConcept outcome_code = 24;

  // Observation that resulted from goal
  repeated core.Reference outcome_reference = 25
      [(.google.fhir.proto.valid_reference_type) = "Observation"];

  // The reason the goal was not accepted
  core.CodeableConcept reason_rejected = 26 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/goal-reasonRejected",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICoreImagingStudy.
// A set of images produced in single study (one or more series of references
// images). See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-imagingstudy
message QICoreImagingStudy {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/ImagingStudy";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-imagingstudy";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // ImagingStudy.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Identifiers for the whole study
  repeated core.Identifier identifier = 10;

  // registered | available | cancelled | entered-in-error | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/imagingstudy-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.ImagingStudyStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // All series modality if actual acquisition modalities
  repeated core.Coding modality = 12;

  // Who or what is the subject of the study
  core.Reference subject = 13 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter with which this imaging study is associated
  core.Reference encounter = 14
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // When the study was started
  core.DateTime started = 15;

  // Request fulfilled
  repeated core.Reference based_on = 16 [
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest",
    (.google.fhir.proto.valid_reference_type) = "CarePlan"
  ];

  // Referring physician
  core.Reference referrer = 17
      [(.google.fhir.proto.valid_reference_type) = "Practitioner"];

  // Who interpreted images
  repeated core.Reference interpreter = 18
      [(.google.fhir.proto.valid_reference_type) = "Practitioner"];

  // Study access endpoint
  repeated core.Reference endpoint = 19
      [(.google.fhir.proto.valid_reference_type) = "Endpoint"];

  // Number of Study Related Series
  core.UnsignedInt number_of_series = 20;

  // Number of Study Related Instances
  core.UnsignedInt number_of_instances = 21;

  // The performed Procedure reference
  core.Reference procedure_reference = 22
      [(.google.fhir.proto.valid_reference_type) = "Procedure"];

  // The performed procedure code
  repeated core.CodeableConcept procedure_code = 23;

  // Where ImagingStudy occurred
  core.Reference location = 24
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Why the study was requested
  repeated core.CodeableConcept reason_code = 25;

  // Why was study performed
  repeated core.Reference reason_reference = 26 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "Media",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // User-defined comments
  repeated core.Annotation note = 27;

  // Institution-generated description
  core.String description = 28;

  // Each study has one or more series of instances
  message Series {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // DICOM Series Instance UID for the series
    core.Id uid = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Numeric identifier of this series
    core.UnsignedInt number = 5;

    // The modality of the instances in the series
    core.Coding modality = 6
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // A short human readable summary of the series
    core.String description = 7;

    // Number of Series Related Instances
    core.UnsignedInt number_of_instances = 8;

    // Series access endpoint
    repeated core.Reference endpoint = 9
        [(.google.fhir.proto.valid_reference_type) = "Endpoint"];

    // Body part examined
    core.Coding body_site = 10;

    // Body part laterality
    core.Coding laterality = 11;

    // Specimen imaged
    repeated core.Reference specimen = 12
        [(.google.fhir.proto.valid_reference_type) = "Specimen"];

    // When the series started
    core.DateTime started = 13;

    // Who performed the series
    message Performer {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Type of performance
      core.CodeableConcept function = 4;

      // Who performed the series
      core.Reference actor = 5 [
        (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
        (.google.fhir.proto.valid_reference_type) = "Practitioner",
        (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
        (.google.fhir.proto.valid_reference_type) = "Organization",
        (.google.fhir.proto.valid_reference_type) = "CareTeam",
        (.google.fhir.proto.valid_reference_type) = "Patient",
        (.google.fhir.proto.valid_reference_type) = "Device",
        (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
      ];
    }
    repeated Performer performer = 14
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];

    // A single SOP instance from the series
    message Instance {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // DICOM SOP Instance UID
      core.Id uid = 4
          [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

      // DICOM class type
      core.Coding sop_class = 5
          [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

      // The number of this instance in the series
      core.UnsignedInt number = 6;

      // Description of instance
      core.String title = 7;
    }
    repeated Instance instance = 15
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];
  }
  repeated Series series = 29
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];
}

// Auto-generated from StructureDefinition for QICoreImmunization.
// Immunization event information.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunization
message QICoreImmunization {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-immunization";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Immunization";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunization";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Immunization.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business identifier
  repeated core.Identifier identifier = 10;

  // completed | entered-in-error | not-done
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/immunization-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.ImmunizationStatusCodesValueSet.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason not done
  core.CodeableConcept status_reason = 12;

  // Vaccine Product Type (bind to CVX)
  core.CodeableConcept vaccine_code = 13 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.fhir_path_constraint) =
        "coding.where(system='http://hl7.org/fhir/sid/ndc').empty()"
  ];

  // Who was immunized
  core.Reference patient = 14 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter immunization was part of
  core.Reference encounter = 15
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Vaccine administration date
  message OccurrenceX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.String string_value = 2 [json_name = "string"];
    }
  }
  OccurrenceX occurrence = 16
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // When the immunization was first captured in the subject's record
  core.DateTime recorded = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Indicates context the data was recorded in
  core.Boolean primary_source = 18
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Indicates the source of a secondarily reported record
  core.CodeableConcept report_origin = 19;

  // Where immunization occurred
  core.Reference location = 20
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Vaccine manufacturer
  core.Reference manufacturer = 21
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Vaccine lot number
  core.String lot_number = 22;

  // Vaccine expiration date
  core.Date expiration_date = 23;

  // Body site vaccine  was administered
  core.CodeableConcept site = 24;

  // How vaccine entered body
  core.CodeableConcept route = 25;

  // Amount of vaccine administered
  core.SimpleQuantity dose_quantity = 26;

  // Who performed event
  message Performer {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // What type of performance was done
    core.CodeableConcept function = 4;

    // Individual or organization who was performing
    core.Reference actor = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "Organization"
    ];
  }
  repeated Performer performer = 27
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Additional immunization notes
  repeated core.Annotation note = 28;

  // Why immunization occurred
  repeated core.CodeableConcept reason_code = 29;

  // Why immunization occurred
  repeated core.Reference reason_reference = 30 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport"
  ];

  // Dose potency
  core.Boolean is_subpotent = 31;

  // Reason for being subpotent
  repeated core.CodeableConcept subpotent_reason = 32;

  // Educational material presented to patient
  message Education {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Educational material document identifier
    core.String document_type = 4;

    // Educational material reference pointer
    core.Uri reference = 5;

    // Educational material publication date
    core.DateTime publication_date = 6;

    // Educational material presentation date
    core.DateTime presentation_date = 7;
  }
  repeated Education education = 33 [
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "documentType.exists() or reference.exists()"
  ];

  // Patient eligibility for a vaccination program
  repeated core.CodeableConcept program_eligibility = 34;

  // Funding source for the vaccine
  core.CodeableConcept funding_source = 35;

  // Details of a reaction that follows immunization
  message Reaction {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // When reaction started
    core.DateTime date = 4;

    // Additional information on reaction
    core.Reference detail = 5
        [(.google.fhir.proto.valid_reference_type) = "Observation"];

    // Indicates self-reported reaction
    core.Boolean reported = 6;
  }
  repeated Reaction reaction = 36
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Protocol followed by the provider
  message ProtocolApplied {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Name of vaccine series
    core.String series = 4;

    // Who is responsible for publishing the recommendations
    core.Reference authority = 5
        [(.google.fhir.proto.valid_reference_type) = "Organization"];

    // Vaccine preventatable disease being targetted
    repeated core.CodeableConcept target_disease = 6;

    // Dose number within series
    message DoseNumberX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.PositiveInt positive_int = 1;
        core.String string_value = 2 [json_name = "string"];
      }
    }
    DoseNumberX dose_number = 7
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Recommended number of doses for immunity
    message SeriesDosesX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.PositiveInt positive_int = 1;
        core.String string_value = 2 [json_name = "string"];
      }
    }
    SeriesDosesX series_doses = 8;
  }
  repeated ProtocolApplied protocol_applied = 37
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];
}

// Auto-generated from StructureDefinition for QICoreImmunizationEvaluation.
// Immunization evaluation information.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunizationevaluation
message QICoreImmunizationEvaluation {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/ImmunizationEvaluation";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunizationevaluation";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // ImmunizationEvaluation.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business identifier
  repeated core.Identifier identifier = 10;

  // completed | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/immunization-evaluation-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.ImmunizationEvaluationStatusCodesValueSet.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who this evaluation is for
  core.Reference patient = 12 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Date evaluation was performed
  core.DateTime date = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who is responsible for publishing the recommendations
  core.Reference authority = 14
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Evaluation target disease
  core.CodeableConcept target_disease = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Immunization being evaluated
  core.Reference immunization_event = 16 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Immunization"
  ];

  // Status of the dose relative to published recommendations
  core.CodeableConcept dose_status = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason for the dose status
  repeated core.CodeableConcept dose_status_reason = 18;

  // Evaluation notes
  core.String description = 19;

  // Name of vaccine series
  core.String series = 20;

  // Dose number within series
  message DoseNumberX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.PositiveInt positive_int = 1;
      core.String string_value = 2 [json_name = "string"];
    }
  }
  DoseNumberX dose_number = 21;

  // Recommended number of doses for immunity
  message SeriesDosesX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.PositiveInt positive_int = 1;
      core.String string_value = 2 [json_name = "string"];
    }
  }
  SeriesDosesX series_doses = 22;
}

// Auto-generated from StructureDefinition for QICoreImmunizationRecommendation.
// Guidance or advice relating to an immunization.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunizationrec
message QICoreImmunizationRecommendation {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunizationrec";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // ImmunizationRecommendation.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business identifier
  repeated core.Identifier identifier = 10;

  // Who this profile is for
  core.Reference patient = 11 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Date recommendation(s) created
  core.DateTime date = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who is responsible for protocol
  core.Reference authority = 13
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Vaccine administration recommendations
  message Recommendation {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Vaccine  or vaccine group recommendation applies to
    repeated core.CodeableConcept vaccine_code = 4;

    // Disease to be immunized against
    core.CodeableConcept target_disease = 5;

    // Vaccine which is contraindicated to fulfill the recommendation
    repeated core.CodeableConcept contraindicated_vaccine_code = 6;

    // Vaccine recommendation status
    core.CodeableConcept forecast_status = 7
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Vaccine administration status reason
    repeated core.CodeableConcept forecast_reason = 8;

    // Dates governing proposed immunization
    message DateCriterion {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Type of date
      core.CodeableConcept code = 4
          [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

      // Recommended date
      core.DateTime value = 5
          [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
    }
    repeated DateCriterion date_criterion = 9
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];

    // Protocol details
    core.String description = 10;

    // Name of vaccination series
    core.String series = 11;

    // Recommended dose number within series
    message DoseNumberX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.PositiveInt positive_int = 1;
        core.String string_value = 2 [json_name = "string"];
      }
    }
    DoseNumberX dose_number = 12;

    // Recommended number of doses for immunity
    message SeriesDosesX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.PositiveInt positive_int = 1;
        core.String string_value = 2 [json_name = "string"];
      }
    }
    SeriesDosesX series_doses = 13;

    // Past immunizations supporting recommendation
    repeated core.Reference supporting_immunization = 14
        [(.google.fhir.proto.valid_reference_type) = "Immunization"];

    // Patient observations supporting recommendation
    repeated core.Reference supporting_patient_information = 15 [
      (.google.fhir.proto.valid_reference_type) = "Observation",
      (.google.fhir.proto.valid_reference_type) = "AllergyIntolerance"
    ];
  }
  repeated Recommendation recommendation = 14 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "vaccineCode.exists() or targetDisease.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICoreLocation.
// Details and position information for a physical place.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-location
message QICoreLocation {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-location";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Location";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-location";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Location.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Unique code or number identifying the location to its users
  repeated core.Identifier identifier = 10;

  // active | suspended | inactive
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/location-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.LocationStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11;

  // The operational status of the location (typically only for a bed/room)
  core.Coding operational_status = 12;

  // Name of the location as used by humans
  core.String name = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // A list of alternate names that the location is known as, or was known as,
  // in the past
  repeated core.String alias = 14;

  // Additional details about the location that could be displayed as further
  // information to identify the location beyond its name
  core.String description = 15;

  // instance | kind
  message ModeCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/location-mode";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.LocationModeCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  ModeCode mode = 16;

  // Type of function performed
  repeated core.CodeableConcept type = 17;

  // Contact details of the location
  repeated core.ContactPoint telecom = 18;

  // Physical location
  core.Address address = 19;

  // Physical form of the location
  core.CodeableConcept physical_type = 20;

  // The absolute geographic location
  message Position {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Longitude with WGS84 datum
    core.Decimal longitude = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Latitude with WGS84 datum
    core.Decimal latitude = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Altitude with WGS84 datum
    core.Decimal altitude = 6;
  }
  Position position = 21
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Organization responsible for provisioning and upkeep
  core.Reference managing_organization = 22
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Another Location this one is physically a part of
  core.Reference part_of = 23
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // What days/times during a week is this location usually open
  message HoursOfOperation {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // mon | tue | wed | thu | fri | sat | sun
    message DaysOfWeekCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/days-of-week";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.DaysOfWeekCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    repeated DaysOfWeekCode days_of_week = 4;

    // The Location is open all day
    core.Boolean all_day = 5;

    // Time that the Location opens
    core.Time opening_time = 6;

    // Time that the Location closes
    core.Time closing_time = 7;
  }
  repeated HoursOfOperation hours_of_operation = 24
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Description of availability exceptions
  core.String availability_exceptions = 25;

  // Technical endpoints providing access to services operated for the location
  repeated core.Reference endpoint = 26
      [(.google.fhir.proto.valid_reference_type) = "Endpoint"];
}

// Auto-generated from StructureDefinition for QICoreMedication.
// Definition of a Medication.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medication
message QICoreMedication {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-medication";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Medication";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medication";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Medication.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business identifier for this medication
  repeated core.Identifier identifier = 10;

  // Codes that identify this medication
  core.CodeableConcept code = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // active | inactive | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/medication-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.MedicationStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 12;

  // Manufacturer of the item
  core.Reference manufacturer = 13
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // powder | tablets | capsule +
  core.CodeableConcept form = 14;

  // Amount of drug in package
  core.Ratio amount = 15;

  // Active or inactive ingredient
  message Ingredient {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The actual ingredient or content
    message ItemX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.CodeableConcept codeable_concept = 1;
        core.Reference reference = 2 [
          (.google.fhir.proto.valid_reference_type) = "Substance",
          (.google.fhir.proto.valid_reference_type) = "Medication"
        ];
      }
    }
    ItemX item = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Active ingredient indicator
    core.Boolean is_active = 5;

    // Quantity of ingredient present
    core.Ratio strength = 6;
  }
  repeated Ingredient ingredient = 16
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Details about packaged medications
  message Batch {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Identifier assigned to batch
    core.String lot_number = 4;

    // When batch will expire
    core.DateTime expiration_date = 5;
  }
  Batch batch = 17 [(.google.fhir.proto.fhir_path_constraint) =
                        "hasValue() or (children().count() > id.count())"];
}

// Auto-generated from StructureDefinition for QICoreMedicationAdministration.
// Administration of medication to a patient.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationadministration
message QICoreMedicationAdministration {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/MedicationAdministration";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationadministration";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // MedicationAdministration.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External identifier
  repeated core.Identifier identifier = 10;

  // Instantiates protocol or definition
  repeated core.Uri instantiates = 11;

  // Part of referenced event
  repeated core.Reference part_of = 12 [
    (.google.fhir.proto.valid_reference_type) = "MedicationAdministration",
    (.google.fhir.proto.valid_reference_type) = "Procedure"
  ];

  // in-progress | not-done | on-hold | completed | entered-in-error | stopped |
  // unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/medication-admin-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.MedicationAdministrationStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason administration not performed
  repeated core.CodeableConcept status_reason = 14;

  // Type of medication usage
  core.CodeableConcept category = 15;

  // What was administered
  message MedicationX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.CodeableConcept codeable_concept = 1;
      core.Reference reference = 2
          [(.google.fhir.proto.valid_reference_type) = "Medication"];
    }
  }
  MedicationX medication = 16
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who received medication
  core.Reference subject = 17 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter or Episode of Care administered as part of
  core.Reference context = 18 [
    (.google.fhir.proto.valid_reference_type) = "Encounter",
    (.google.fhir.proto.valid_reference_type) = "EpisodeOfCare"
  ];

  // Additional information to support administration
  repeated core.Reference supporting_information = 19
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Start and end time of administration
  message EffectiveX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
    }
  }
  EffectiveX effective = 20
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who performed the medication administration and what they did
  message Performer {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Type of performance
    core.CodeableConcept function = 4;

    // Who performed the medication administration
    core.Reference actor = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
      (.google.fhir.proto.valid_reference_type) = "Device"
    ];
  }
  repeated Performer performer = 21
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Reason administration performed
  repeated core.CodeableConcept reason_code = 22;

  // Condition or observation that supports why the medication was administered
  repeated core.Reference reason_reference = 23 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport"
  ];

  // Request administration performed against
  core.Reference request = 24
      [(.google.fhir.proto.valid_reference_type) = "MedicationRequest"];

  // Device used to administer
  repeated core.Reference device = 25
      [(.google.fhir.proto.valid_reference_type) = "Device"];

  // Information about the administration
  repeated core.Annotation note = 26;

  // Details of how medication was taken
  message Dosage {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Free text dosage instructions e.g. SIG
    core.String text = 4;

    // Body site administered to
    core.CodeableConcept site = 5;

    // Path of substance into body
    core.CodeableConcept route = 6;

    // How drug was administered
    core.CodeableConcept method = 7;

    // Amount of medication per dose
    core.SimpleQuantity dose = 8;

    // Dose quantity per unit of time
    message RateX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Ratio ratio = 1;
        core.SimpleQuantity quantity = 2;
      }
    }
    RateX rate = 9;
  }
  Dosage dosage = 27 [
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) = "dose.exists() or rate.exists()"
  ];

  // A list of events of interest in the lifecycle
  repeated core.Reference event_history = 28
      [(.google.fhir.proto.valid_reference_type) = "Provenance"];
}

// Auto-generated from StructureDefinition for QICoreMedicationDispense.
// Dispensing a medication to a named patient.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationdispense
message QICoreMedicationDispense {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/MedicationDispense";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationdispense";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // MedicationDispense.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External identifier
  repeated core.Identifier identifier = 10;

  // Event that dispense is part of
  repeated core.Reference part_of = 11
      [(.google.fhir.proto.valid_reference_type) = "Procedure"];

  // preparation | in-progress | cancelled | on-hold | completed |
  // entered-in-error | stopped | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/medicationdispense-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.MedicationDispenseStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Why a dispense was not performed
  message StatusReasonX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.CodeableConcept codeable_concept = 1;
      core.Reference reference = 2
          [(.google.fhir.proto.valid_reference_type) = "DetectedIssue"];
    }
  }
  StatusReasonX status_reason = 13;

  // Type of medication dispense
  core.CodeableConcept category = 14;

  // What medication was supplied
  message MedicationX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.CodeableConcept codeable_concept = 1;
      core.Reference reference = 2
          [(.google.fhir.proto.valid_reference_type) = "Medication"];
    }
  }
  MedicationX medication = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who the dispense is for
  core.Reference subject = 16
      [(.google.fhir.proto.valid_reference_type) = "Patient"];

  // Encounter / Episode associated with event
  core.Reference context = 17 [
    (.google.fhir.proto.valid_reference_type) = "Encounter",
    (.google.fhir.proto.valid_reference_type) = "EpisodeOfCare"
  ];

  // Information that supports the dispensing of the medication
  repeated core.Reference supporting_information = 18
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Who performed event
  message Performer {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Who performed the dispense and what they did
    core.CodeableConcept function = 4;

    // Individual who was performing
    core.Reference actor = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "Organization",
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "Device",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
    ];
  }
  repeated Performer performer = 19
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Where the dispense occurred
  core.Reference location = 20
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Medication order that authorizes the dispense
  repeated core.Reference authorizing_prescription = 21
      [(.google.fhir.proto.valid_reference_type) = "MedicationRequest"];

  // Trial fill, partial fill, emergency fill, etc.
  core.CodeableConcept type = 22;

  // Amount dispensed
  core.SimpleQuantity quantity = 23;

  // Amount of medication expressed as a timing amount
  core.SimpleQuantity days_supply = 24;

  // When product was packaged and reviewed
  core.DateTime when_prepared = 25;

  // When product was given out
  core.DateTime when_handed_over = 26;

  // Where the medication was sent
  core.Reference destination = 27
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Who collected the medication
  repeated core.Reference receiver = 28 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner"
  ];

  // Information about the dispense
  repeated core.Annotation note = 29;

  // How the medication is to be used by the patient or administered by the
  // caregiver
  repeated core.Dosage dosage_instruction = 30;

  // Whether a substitution was performed on the dispense
  message Substitution {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Whether a substitution was or was not performed on the dispense
    core.Boolean was_substituted = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Code signifying whether a different drug was dispensed from what was
    // prescribed
    core.CodeableConcept type = 5;

    // Why was substitution made
    repeated core.CodeableConcept reason = 6;

    // Who is responsible for the substitution
    repeated core.Reference responsible_party = 7
        [(.google.fhir.proto.valid_reference_type) = "Practitioner"];
  }
  Substitution substitution = 31
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Clinical issue with action
  repeated core.Reference detected_issue = 32
      [(.google.fhir.proto.valid_reference_type) = "DetectedIssue"];

  // A list of relevant lifecycle events
  repeated core.Reference event_history = 33
      [(.google.fhir.proto.valid_reference_type) = "Provenance"];
}

// Auto-generated from StructureDefinition for QICoreMedicationRequest.
// Ordering of medication for patient or group.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationrequest
message QICoreMedicationRequest {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationrequest";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/MedicationRequest";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationrequest";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // MedicationRequest.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External ids for this request
  repeated core.Identifier identifier = 10;

  // active | on-hold | cancelled | completed | entered-in-error | stopped |
  // draft | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/medicationrequest-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.MedicationrequestStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason for current status
  core.CodeableConcept status_reason = 12;

  // proposal | plan | order | original-order | instance-order | option
  message IntentCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/medicationrequest-intent";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.MedicationRequestIntentCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  IntentCode intent = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Type of medication usage
  repeated core.CodeableConcept category = 14;

  // routine | urgent | asap | stat
  message PriorityCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-priority";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestPriorityCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  PriorityCode priority = 15;

  // True if request is prohibiting action
  core.Boolean do_not_perform = 16;

  // Reported rather than primary record
  message ReportedX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Boolean boolean = 1;
      core.Reference reference = 2 [
        (.google.fhir.proto.valid_reference_type) = "Patient",
        (.google.fhir.proto.valid_reference_type) = "Practitioner",
        (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
        (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
        (.google.fhir.proto.valid_reference_type) = "Organization"
      ];
    }
  }
  ReportedX reported = 17;

  // Medication to be taken
  message MedicationX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.CodeableConcept codeable_concept = 1;
      core.Reference reference = 2
          [(.google.fhir.proto.valid_reference_type) = "Medication"];
    }
  }
  MedicationX medication = 18
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who or group medication request is for
  core.Reference subject = 19 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter created as part of encounter/admission/stay
  core.Reference encounter = 20
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Information to support ordering of the medication
  repeated core.Reference supporting_information = 21
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // When request was initially authored
  core.DateTime authored_on = 22
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who/What requested the Request
  core.Reference requester = 23 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Device"
  ];

  // Intended performer of administration
  core.Reference performer = 24 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "CareTeam"
  ];

  // Desired kind of performer of the medication administration
  core.CodeableConcept performer_type = 25;

  // Person who entered the request
  core.Reference recorder = 26 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // Reason or indication for ordering or not ordering the medication
  repeated core.CodeableConcept reason_code = 27;

  // Condition or observation that supports why the prescription is being
  // written
  repeated core.Reference reason_reference = 28 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation"
  ];

  // Instantiates FHIR protocol or definition
  repeated core.Canonical instantiates_canonical = 29;

  // Instantiates external protocol or definition
  repeated core.Uri instantiates_uri = 30;

  // What request fulfills
  repeated core.Reference based_on = 31 [
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest",
    (.google.fhir.proto.valid_reference_type) = "ImmunizationRecommendation"
  ];

  // Composite request this is part of
  core.Identifier group_identifier = 32;

  // Overall pattern of medication administration
  core.CodeableConcept course_of_therapy_type = 33;

  // Associated insurance coverage
  repeated core.Reference insurance = 34 [
    (.google.fhir.proto.valid_reference_type) = "Coverage",
    (.google.fhir.proto.valid_reference_type) = "ClaimResponse"
  ];

  // Information about the prescription
  repeated core.Annotation note = 35;

  // How the medication should be taken
  repeated core.Dosage dosage_instruction = 36;

  // Medication supply authorization
  message DispenseRequest {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // First fill details
    message InitialFill {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // First fill quantity
      core.SimpleQuantity quantity = 4;

      // First fill duration
      core.Duration duration = 5;
    }
    InitialFill initial_fill = 4
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];

    // Minimum period of time between dispenses
    core.Duration dispense_interval = 5;

    // Time period supply is authorized for
    core.Period validity_period = 6;

    // Number of refills authorized
    core.UnsignedInt number_of_repeats_allowed = 7;

    // Amount of medication to supply per dispense
    core.SimpleQuantity quantity = 8;

    // Number of days supply per dispense
    core.Duration expected_supply_duration = 9;

    // Intended dispenser
    core.Reference performer = 10
        [(.google.fhir.proto.valid_reference_type) = "Organization"];
  }
  DispenseRequest dispense_request = 37
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Any restrictions on medication substitution
  message Substitution {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Whether substitution is allowed or not
    message AllowedX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Boolean boolean = 1;
        core.CodeableConcept codeable_concept = 2;
      }
    }
    AllowedX allowed = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Why should (not) substitution be made
    core.CodeableConcept reason = 5;
  }
  Substitution substitution = 38
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // An order/prescription that is being replaced
  core.Reference prior_prescription = 39
      [(.google.fhir.proto.valid_reference_type) = "MedicationRequest"];

  // Clinical Issue with action
  repeated core.Reference detected_issue = 40
      [(.google.fhir.proto.valid_reference_type) = "DetectedIssue"];

  // A list of events of interest in the lifecycle
  repeated core.Reference event_history = 41
      [(.google.fhir.proto.valid_reference_type) = "Provenance"];
}

// Auto-generated from StructureDefinition for QICoreMedicationStatement.
// Record of medication being taken by a patient.
// See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationstatement
message QICoreMedicationStatement {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationstatement";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/MedicationStatement";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationstatement";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // MedicationStatement.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External identifier
  repeated core.Identifier identifier = 10;

  // Fulfils plan, proposal or order
  repeated core.Reference based_on = 11 [
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest"
  ];

  // Part of referenced event
  repeated core.Reference part_of = 12 [
    (.google.fhir.proto.valid_reference_type) = "MedicationAdministration",
    (.google.fhir.proto.valid_reference_type) = "MedicationDispense",
    (.google.fhir.proto.valid_reference_type) = "MedicationStatement",
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Observation"
  ];

  // active | completed | entered-in-error | intended | stopped | on-hold |
  // unknown | not-taken
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/medication-statement-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.MedicationStatementStatusCodes.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason for current status
  repeated core.CodeableConcept status_reason = 14;

  // Type of medication usage
  core.CodeableConcept category = 15;

  // What medication was taken
  message MedicationX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.CodeableConcept codeable_concept = 1;
      core.Reference reference = 2
          [(.google.fhir.proto.valid_reference_type) = "Medication"];
    }
  }
  MedicationX medication = 16
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who is/was taking  the medication
  core.Reference subject = 17 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter / Episode associated with MedicationStatement
  core.Reference context = 18 [
    (.google.fhir.proto.valid_reference_type) = "Encounter",
    (.google.fhir.proto.valid_reference_type) = "EpisodeOfCare"
  ];

  // The date/time or interval when the medication is/was/will be taken
  message EffectiveX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
    }
  }
  EffectiveX effective = 19;

  // When the statement was asserted?
  core.DateTime date_asserted = 20
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Person or organization that provided the information about the taking of
  // this medication
  core.Reference information_source = 21 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Additional supporting information
  repeated core.Reference derived_from = 22
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Reason for why the medication is being/was taken
  repeated core.CodeableConcept reason_code = 23;

  // Condition or observation that supports why the medication is being/was
  // taken
  repeated core.Reference reason_reference = 24 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport"
  ];

  // Further information about the statement
  repeated core.Annotation note = 25;

  // Details of how medication is/was taken or should be taken
  repeated core.Dosage dosage = 26;
}

// Auto-generated from StructureDefinition for MilitaryService.
// Explanation associated with refuted status.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-military-service
message PatientMilitaryService {
  option (.google.fhir.proto.structure_definition_kind) = KIND_COMPLEX_TYPE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Extension";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-military-service";

  // Unique id for inter-element referencing
  core.String id = 1;

  // Value of extension
  core.CodeableConcept value_codeable_concept = 3;
}

// Auto-generated from StructureDefinition for QICoreNutritionOrder.
// Diet, formula or nutritional supplement request.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-nutritionorder
message QICoreNutritionOrder {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/NutritionOrder";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-nutritionorder";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // NutritionOrder.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Identifiers assigned to this order
  repeated core.Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated core.Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated core.Uri instantiates_uri = 12;

  // Instantiates protocol or definition
  repeated core.Uri instantiates = 13;

  // proposed | draft | planned | requested | active | on-hold | completed |
  // cancelled | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // proposal | plan | order
  message IntentCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-intent";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestIntentCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  IntentCode intent = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The person who requires the diet, formula or nutritional supplement
  core.Reference patient = 16 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // The encounter associated with this nutrition order
  core.Reference encounter = 17
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Date and time the nutrition order was requested
  core.DateTime date_time = 18
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who ordered the diet, formula or nutritional supplement
  core.Reference orderer = 19 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // List of the patient's food and nutrition-related allergies and intolerances
  repeated core.Reference allergy_intolerance = 20
      [(.google.fhir.proto.valid_reference_type) = "AllergyIntolerance"];

  // Order-specific modifier about the type of food that should be given
  repeated core.CodeableConcept food_preference_modifier = 21;

  // Order-specific modifier about the type of food that should not be given
  repeated core.CodeableConcept exclude_food_modifier = 22;

  // Oral diet components
  message OralDiet {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Type of oral diet or diet restrictions that describe what can be consumed
    // orally
    repeated core.CodeableConcept type = 4;

    // Scheduled frequency of diet
    repeated core.Timing schedule = 5;

    // Required  nutrient modifications
    message Nutrient {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Type of nutrient that is being modified
      core.CodeableConcept modifier = 4;

      // Quantity of the specified nutrient
      core.SimpleQuantity amount = 5;
    }
    repeated Nutrient nutrient = 6
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];

    // Required  texture modifications
    message Texture {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Code to indicate how to alter the texture of the foods, e.g. pureed
      core.CodeableConcept modifier = 4;

      // Concepts that are used to identify an entity that is ingested for
      // nutritional purposes
      core.CodeableConcept food_type = 5;
    }
    repeated Texture texture = 7
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];

    // The required consistency of fluids and liquids provided to the patient
    repeated core.CodeableConcept fluid_consistency_type = 8;

    // Instructions or additional information about the oral diet
    core.String instruction = 9;
  }
  OralDiet oral_diet = 23
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Supplement components
  message Supplement {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Type of supplement product requested
    core.CodeableConcept type = 4;

    // Product or brand name of the nutritional supplement
    core.String product_name = 5;

    // Scheduled frequency of supplement
    repeated core.Timing schedule = 6;

    // Amount of the nutritional supplement
    core.SimpleQuantity quantity = 7;

    // Instructions or additional information about the oral supplement
    core.String instruction = 8;
  }
  repeated Supplement supplement = 24
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Enteral formula components
  message EnteralFormula {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Type of enteral or infant formula
    core.CodeableConcept base_formula_type = 4;

    // Product or brand name of the enteral or infant formula
    core.String base_formula_product_name = 5;

    // Type of modular component to add to the feeding
    core.CodeableConcept additive_type = 6;

    // Product or brand name of the modular additive
    core.String additive_product_name = 7;

    // Amount of energy per specified volume that is required
    core.SimpleQuantity caloric_density = 8;

    // How the formula should enter the patient's gastrointestinal tract
    core.CodeableConcept routeof_administration = 9;

    // Formula feeding instruction as structured data
    message Administration {
      // Unique id for inter-element referencing
      core.String id = 1;

      // Additional content defined by implementations
      repeated core.Extension extension = 2;

      // Extensions that cannot be ignored even if unrecognized
      repeated core.Extension modifier_extension = 3;

      // Scheduled frequency of enteral feeding
      core.Timing schedule = 4;

      // The volume of formula to provide
      core.SimpleQuantity quantity = 5;

      // Speed with which the formula is provided per period of time
      message RateX {
        option (.google.fhir.proto.is_choice_type) = true;

        oneof choice {
          core.SimpleQuantity quantity = 1;
          core.Ratio ratio = 2;
        }
      }
      RateX rate = 6;
    }
    repeated Administration administration = 10
        [(.google.fhir.proto.fhir_path_constraint) =
             "hasValue() or (children().count() > id.count())"];

    // Upper limit on formula volume per unit of time
    core.SimpleQuantity max_volume_to_deliver = 11;

    // Formula feeding instructions expressed as text
    core.String administration_instruction = 12;
  }
  EnteralFormula enteral_formula = 25
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Comments
  repeated core.Annotation note = 26;
}

// Auto-generated from StructureDefinition for QICoreObservation.
// Measurements and simple assertions.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-observation
message QICoreObservation {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Observation";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-observation";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Observation.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Business Identifier for observation
  repeated core.Identifier identifier = 10;

  // Fulfills plan, proposal or order
  repeated core.Reference based_on = 11 [
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "DeviceRequest",
    (.google.fhir.proto.valid_reference_type) = "ImmunizationRecommendation",
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
    (.google.fhir.proto.valid_reference_type) = "NutritionOrder",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest"
  ];

  // Part of referenced event
  repeated core.Reference part_of = 12 [
    (.google.fhir.proto.valid_reference_type) = "MedicationAdministration",
    (.google.fhir.proto.valid_reference_type) = "MedicationDispense",
    (.google.fhir.proto.valid_reference_type) = "MedicationStatement",
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Immunization",
    (.google.fhir.proto.valid_reference_type) = "ImagingStudy"
  ];

  // registered | preliminary | final | amended +
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/observation-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.ObservationStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Classification of  type of observation
  repeated core.CodeableConcept category = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Type of observation (code / type)
  core.CodeableConcept code = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who and/or what the observation is about
  core.Reference subject = 16 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Location"
  ];

  // What the observation is about, when it is not about the subject of record
  repeated core.Reference focus = 17
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Healthcare event during which this observation is made
  core.Reference encounter = 18
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Clinically relevant time/time-period for observation
  message EffectiveX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
      core.Timing timing = 3;
      core.Instant instant = 4;
    }
  }
  EffectiveX effective = 19;

  // Date/Time this version was made available
  core.Instant issued = 20;

  // Who is responsible for the observation
  repeated core.Reference performer = 21 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Actual result
  message ValueX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Quantity quantity = 1;
      core.CodeableConcept codeable_concept = 2;
      core.String string_value = 3 [json_name = "string"];
      core.Boolean boolean = 4;
      core.Integer integer = 5;
      core.Range range = 6;
      core.Ratio ratio = 7;
      core.SampledData sampled_data = 8;
      core.Time time = 9;
      core.DateTime date_time = 10;
      core.Period period = 11;
    }
  }
  ValueX value = 22;

  // Why the result is missing
  core.CodeableConcept data_absent_reason = 23;

  // High, low, normal, etc.
  repeated core.CodeableConcept interpretation = 24;

  // Comments about the observation
  repeated core.Annotation note = 25;

  // Observed body part
  core.CodeableConcept body_site = 26;

  // How it was done
  core.CodeableConcept method = 27;

  // Specimen used for this observation
  core.Reference specimen = 28
      [(.google.fhir.proto.valid_reference_type) = "Specimen"];

  // (Measurement) Device
  core.Reference device = 29 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "DeviceMetric"
  ];

  // Provides guide for interpretation
  message ReferenceRange {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Low Range, if relevant
    core.SimpleQuantity low = 4;

    // High Range, if relevant
    core.SimpleQuantity high = 5;

    // Reference range qualifier
    core.CodeableConcept type = 6;

    // Reference range population
    repeated core.CodeableConcept applies_to = 7;

    // Applicable age range, if relevant
    core.Range age = 8;

    // Text based reference range in an observation
    core.String text = 9;
  }
  repeated ReferenceRange reference_range = 30 [
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "low.exists() or high.exists() or text.exists()"
  ];

  // Related resource that belongs to the Observation group
  repeated core.Reference has_member = 31 [
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "QuestionnaireResponse",
    (.google.fhir.proto.valid_reference_type) = "MolecularSequence"
  ];

  // Related measurements the observation is made from
  repeated core.Reference derived_from = 32 [
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "QuestionnaireResponse"
  ];

  // Component results
  message Component {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Type of component observation (code / type)
    core.CodeableConcept code = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Actual component result
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Quantity quantity = 1;
        core.CodeableConcept codeable_concept = 2;
        core.String string_value = 3 [json_name = "string"];
        core.Boolean boolean = 4;
        core.Integer integer = 5;
        core.Range range = 6;
        core.Ratio ratio = 7;
        core.SampledData sampled_data = 8;
        core.Time time = 9;
        core.DateTime date_time = 10;
        core.Period period = 11;
      }
    }
    ValueX value = 5;

    // Why the component result is missing
    core.CodeableConcept data_absent_reason = 6;

    // High, low, normal, etc.
    repeated core.CodeableConcept interpretation = 7;

    // Provides guide for interpretation of component result
    repeated ReferenceRange reference_range = 8;
  }
  repeated Component component = 33
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // The body position during the observation
  core.CodeableConcept body_position = 34 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/observation-bodyPosition",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];

  // Qualitative change or trend in the measurement
  core.CodeableConcept delta = 35 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/observation-delta",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICoreOrganization.
// A grouping of people or organizations with a common purpose.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-organization
message QICoreOrganization {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Organization";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-organization";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Organization.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Identifies this organization  across multiple systems
  repeated core.Identifier identifier = 10
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Whether the organization's record is still in active use
  core.Boolean active = 11
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Kind of organization
  repeated core.CodeableConcept type = 12;

  // Name used for the organization
  core.String name = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // A list of alternate names that the organization is known as, or was known
  // as in the past
  repeated core.String alias = 14;

  // A contact detail for the organization
  repeated core.ContactPoint telecom = 15 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.fhir_path_constraint) = "where(use = 'home').empty()"
  ];

  // An address for the organization
  repeated core.Address address = 16 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.fhir_path_constraint) = "where(use = 'home').empty()"
  ];

  // The organization of which this organization forms a part
  core.Reference part_of = 17
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Contact for the organization for a certain purpose
  message Contact {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The type of contact
    core.CodeableConcept purpose = 4;

    // A name associated with the contact
    core.HumanName name = 5;

    // Contact details (telephone, email, etc.)  for a contact
    repeated core.ContactPoint telecom = 6;

    // Visiting or postal addresses for the contact
    core.Address address = 7;
  }
  repeated Contact contact = 18
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Technical endpoints providing access to services operated for the
  // organization
  repeated core.Reference endpoint = 19
      [(.google.fhir.proto.valid_reference_type) = "Endpoint"];
}

// Auto-generated from StructureDefinition for QICorePatient.
// Information about an individual or animal receiving health care services.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient
message QICorePatient {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Patient";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Patient.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // An identifier for this patient
  repeated core.Identifier identifier = 10
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Whether this patient's record is in active use
  core.Boolean active = 11;

  // A name associated with the patient
  repeated core.HumanName name = 12 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.fhir_path_constraint) =
        "family.exists() or given.exists()"
  ];

  // A contact detail for the individual
  repeated core.ContactPoint telecom = 13;

  // male | female | other | unknown
  message GenderCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/administrative-gender";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.AdministrativeGenderCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  GenderCode gender = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The date of birth for the individual
  core.Date birth_date = 15;

  // Indicates if the individual is deceased or not
  message DeceasedX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Boolean boolean = 1;
      core.DateTime date_time = 2;
    }
  }
  DeceasedX deceased = 16;

  // An address for the individual
  repeated core.Address address = 17;

  // Marital (civil) status of a patient
  core.CodeableConcept marital_status = 18;

  // Whether patient is part of a multiple birth
  message MultipleBirthX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Boolean boolean = 1;
      core.Integer integer = 2;
    }
  }
  MultipleBirthX multiple_birth = 19;

  // Image of the patient
  repeated core.Attachment photo = 20;

  // A contact party (e.g. guardian, partner, friend) for the patient
  message Contact {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The kind of relationship
    repeated core.CodeableConcept relationship = 4;

    // A name associated with the contact person
    core.HumanName name = 5;

    // A contact detail for the person
    repeated core.ContactPoint telecom = 6;

    // Address for the contact person
    core.Address address = 7;

    // male | female | other | unknown
    message GenderCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/administrative-gender";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.AdministrativeGenderCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    GenderCode gender = 8;

    // Organization that is associated with the contact
    core.Reference organization = 9
        [(.google.fhir.proto.valid_reference_type) = "Organization"];

    // The period during which this contact person or organization is valid to
    // be contacted relating to this patient
    core.Period period = 10;
  }
  repeated Contact contact = 21 [
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "name.exists() or telecom.exists() or address.exists() or organization.exists()"
  ];

  // A language which may be used to communicate with the patient about his or
  // her health
  message Communication {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The language which can be used to communicate with the patient about his
    // or her health
    core.CodeableConcept language = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Language preference indicator
    core.Boolean preferred = 5;
  }
  repeated Communication communication = 22
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Patient's nominated primary care provider
  repeated core.Reference general_practitioner = 23 [
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Practitioner"
  ];

  // Organization that is the custodian of the patient record
  core.Reference managing_organization = 24
      [(.google.fhir.proto.valid_reference_type) = "Organization"];

  // Link to another patient resource that concerns the same actual person
  message Link {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The other patient or related person resource that the link refers to
    core.Reference other = 4 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Patient"
    ];

    // replaced-by | replaces | refer | seealso
    message TypeCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/link-type";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.LinkTypeCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    TypeCode type = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Link link = 25
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Extension
  uscore.PatientUSCoreRaceExtension race = 26
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"];

  // Extension
  uscore.PatientUSCoreEthnicityExtension ethnicity = 27
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"];

  // Extension
  uscore.PatientUSCoreBirthSexExtension.ValueCode birthsex = 28
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex"];

  // The patient's professed religious affiliations
  core.CodeableConcept religion = 29
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/StructureDefinition/patient-religion"];

  // Place of Birth for patient
  core.Address birth_place = 30
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/StructureDefinition/patient-birthPlace"];

  // Condition(s) limiting movement, senses, or activities
  repeated core.CodeableConcept disability = 31
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/StructureDefinition/patient-disability"];

  // Nationality
  repeated core.PatientNationality nationality = 32
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/StructureDefinition/patient-nationality"];

  // Post-mortem donor status
  core.Boolean cadaveric_donor = 33
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/StructureDefinition/patient-cadavericDonor"];

  // Explanation associated with refuted status
  core.CodeableConcept military_service = 34 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-military-service"
  ];

  // Time of day of birth
  core.DateTime birth_time = 35
      [(.google.fhir.proto.fhir_inlined_extension_url) =
           "http://hl7.org/fhir/StructureDefinition/patient-birthTime"];
}

// Auto-generated from StructureDefinition for QICorePractitioner.
// A person with a  formal responsibility in the provisioning of healthcare or
// related services. See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-practitioner
message QICorePractitioner {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Practitioner";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-practitioner";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Practitioner.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // An identifier for the person as this agent
  repeated core.Identifier identifier = 10
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Whether this practitioner's record is in active use
  core.Boolean active = 11;

  // The name(s) associated with the practitioner
  core.HumanName name = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // A contact detail for the practitioner (that apply to all roles)
  repeated core.ContactPoint telecom = 13;

  // Address(es) of the practitioner that are not role specific (typically home
  // address)
  repeated core.Address address = 14;

  // male | female | other | unknown
  message GenderCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/administrative-gender";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.AdministrativeGenderCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  GenderCode gender = 15;

  // The date  on which the practitioner was born
  core.Date birth_date = 16;

  // Image of the person
  repeated core.Attachment photo = 17;

  // Certification, licenses, or training pertaining to the provision of care
  message Qualification {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // An identifier for this qualification for the practitioner
    repeated core.Identifier identifier = 4;

    // Coded representation of the qualification
    core.CodeableConcept code = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Period during which the qualification is valid
    core.Period period = 6;

    // Organization that regulates and issues the qualification
    core.Reference issuer = 7
        [(.google.fhir.proto.valid_reference_type) = "Organization"];
  }
  repeated Qualification qualification = 18
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // A language the practitioner can use in patient communication
  repeated core.CodeableConcept communication = 19;

  // field 20 reserved for Practitioner.identifier:npislice which uses an
  // unsupported slicing on Identifier
  reserved 20;
}

// Auto-generated from StructureDefinition for QICorePractitionerRole.
// Roles/organizations the practitioner is associated with.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-practitionerrole
message QICorePractitionerRole {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitionerrole";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/PractitionerRole";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-practitionerrole";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // PractitionerRole.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // The list of healthcare services that this worker provides for this role's
  // Organization/Location(s)
  repeated core.Reference healthcare_service = 10
      [(.google.fhir.proto.valid_reference_type) = "HealthcareService"];

  // Contact details that are specific to the role/location/service
  repeated core.ContactPoint telecom = 11;

  // Times the Service Site is available
  message AvailableTime {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // mon | tue | wed | thu | fri | sat | sun
    message DaysOfWeekCode {
      option (.google.fhir.proto.structure_definition_kind) =
          KIND_PRIMITIVE_TYPE;
      option (.google.fhir.proto.fhir_valueset_url) =
          "http://hl7.org/fhir/ValueSet/days-of-week";
      option (.google.fhir.proto.fhir_profile_base) =
          "http://hl7.org/fhir/StructureDefinition/code";

      core.DaysOfWeekCode.Value value = 1;

      core.String id = 2;

      repeated core.Extension extension = 3;
    }
    repeated DaysOfWeekCode days_of_week = 4;

    // Always available? e.g. 24 hour service
    core.Boolean all_day = 5;

    // Opening time of day (ignored if allDay = true)
    core.Time available_start_time = 6;

    // Closing time of day (ignored if allDay = true)
    core.Time available_end_time = 7;
  }
  repeated AvailableTime available_time = 12
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Not available during this time due to provided reason
  message NotAvailable {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Reason presented to the user explaining why time not available
    core.String description = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Service not available from this date
    core.Period during = 5;
  }
  repeated NotAvailable not_available = 13
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Description of availability exceptions
  core.String availability_exceptions = 14;

  // Technical endpoints providing access to services operated for the
  // practitioner with this role
  repeated core.Reference endpoint = 15
      [(.google.fhir.proto.valid_reference_type) = "Endpoint"];

  // field 16 reserved for PractitionerRole.identifier:identifier which uses an
  // unsupported slicing on Identifier
  reserved 16;

  // field 17 reserved for PractitionerRole.active:active which uses an
  // unsupported slicing on boolean
  reserved 17;

  // field 18 reserved for PractitionerRole.period:period which uses an
  // unsupported slicing on Period
  reserved 18;

  // field 19 reserved for PractitionerRole.practitioner:practitioner which uses
  // an unsupported slicing on Reference
  reserved 19;

  // field 20 reserved for PractitionerRole.organization:organization which uses
  // an unsupported slicing on Reference
  reserved 20;

  // field 21 reserved for PractitionerRole.code:code which uses an unsupported
  // slicing on CodeableConcept
  reserved 21;

  // field 22 reserved for PractitionerRole.specialty:specialty which uses an
  // unsupported slicing on CodeableConcept
  reserved 22;

  // field 23 reserved for PractitionerRole.location:location which uses an
  // unsupported slicing on Reference
  reserved 23;
}

// Auto-generated from StructureDefinition for QICoreProcedure.
// An action that is being or was performed on a patient.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure
message QICoreProcedure {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-procedure";
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Procedure";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Procedure.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External Identifiers for this procedure
  repeated core.Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated core.Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated core.Uri instantiates_uri = 12;

  // A request for this procedure
  repeated core.Reference based_on = 13 [
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest"
  ];

  // Part of referenced event
  repeated core.Reference part_of = 14 [
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "MedicationAdministration"
  ];

  // preparation | in-progress | not-done | suspended | aborted | completed |
  // entered-in-error | unknown
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/event-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.EventStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 15
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Reason for current status
  core.CodeableConcept status_reason = 16;

  // Classification of the procedure
  core.CodeableConcept category = 17;

  // SNOMED-CT | ICD-10 | CPT-4
  core.CodeableConcept code = 18
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who the procedure was performed on
  core.Reference subject = 19 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter created as part of
  core.Reference encounter = 20 [
    (.google.fhir.proto.valid_reference_type) = "Encounter",
    (.google.fhir.proto.valid_reference_type) = "Group"
  ];

  // When the procedure was performed
  message PerformedX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
    }
  }
  PerformedX performed = 21
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Who recorded the procedure
  core.Reference recorder = 22 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // Person who asserts this procedure
  core.Reference asserter = 23 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole"
  ];

  // The people who performed the procedure
  message Performer {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Type of performance
    core.CodeableConcept function = 4;

    // The reference to the practitioner
    core.Reference actor = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "Organization",
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
    ];

    // Organization the device or practitioner was acting for
    core.Reference on_behalf_of = 6
        [(.google.fhir.proto.valid_reference_type) = "Organization"];
  }
  repeated Performer performer = 24
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Where the procedure happened
  core.Reference location = 25
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Coded reason procedure performed
  repeated core.CodeableConcept reason_code = 26;

  // The justification that the procedure was performed
  repeated core.Reference reason_reference = 27 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "Procedure",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // Target body sites
  repeated core.CodeableConcept body_site = 28;

  // The result of procedure
  core.CodeableConcept outcome = 29;

  // Any report resulting from the procedure
  repeated core.Reference report = 30
      [(.google.fhir.proto.valid_reference_type) = "DiagnosticReport"];

  // Complication following the procedure
  repeated core.CodeableConcept complication = 31;

  // A condition that is a result of the procedure
  repeated core.Reference complication_detail = 32
      [(.google.fhir.proto.valid_reference_type) = "Condition"];

  // Instructions for follow up
  repeated core.CodeableConcept follow_up = 33;

  // Additional information about the procedure
  repeated core.Annotation note = 34;

  // Manipulated, implanted, or removed device
  message FocalDevice {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Kind of change to device
    core.CodeableConcept action = 4;

    // Device that was changed
    core.Reference manipulated = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Device"
    ];
  }
  repeated FocalDevice focal_device = 35
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Items used during procedure
  repeated core.Reference used_reference = 36 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Medication",
    (.google.fhir.proto.valid_reference_type) = "Substance"
  ];

  // Coded items used during the procedure
  repeated core.CodeableConcept used_code = 37;

  // The access point or points used for this procedure
  repeated core.Reference approach_body_structure = 38 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/procedure-approachBodyStructure",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];

  // The first incision time
  core.DateTime incision_date_time = 39 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/procedure-incisionDateTime",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];
}

// Auto-generated from StructureDefinition for QICoreRelatedPerson.
// A person that is related to a patient, but who is not a direct target of
// care. See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-relatedperson
message QICoreRelatedPerson {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/RelatedPerson";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-relatedperson";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // RelatedPerson.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // A human identifier for this person
  repeated core.Identifier identifier = 10;

  // Whether this related person's record is in active use
  core.Boolean active = 11;

  // The patient this person is related to
  core.Reference patient = 12 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // The nature of the relationship
  repeated core.CodeableConcept relationship = 13;

  // A name associated with the person
  repeated core.HumanName name = 14;

  // A contact detail for the person
  repeated core.ContactPoint telecom = 15;

  // male | female | other | unknown
  message GenderCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/administrative-gender";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.AdministrativeGenderCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  GenderCode gender = 16;

  // The date on which the related person was born
  core.Date birth_date = 17;

  // Address where the related person can be contacted or visited
  repeated core.Address address = 18;

  // Image of the person
  repeated core.Attachment photo = 19;

  // Period of time that this relationship is considered valid
  core.Period period = 20;

  // A language which may be used to communicate with about the patient's health
  message Communication {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // The language which can be used to communicate with the patient about his
    // or her health
    core.CodeableConcept language = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Language preference indicator
    core.Boolean preferred = 5;
  }
  repeated Communication communication = 21
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];
}

// Auto-generated from StructureDefinition for
// QICoreServiceRequestAppropriatenessScore. Appropriateness Score. See
// http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest-appropriatenessScore
message ServiceRequestQICoreServiceRequestAppropriatenessScore {
  option (.google.fhir.proto.structure_definition_kind) = KIND_COMPLEX_TYPE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Extension";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest-appropriatenessScore";

  // xml:id (or equivalent in JSON)
  core.Id id = 1;

  // Value of extension
  message ValueX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Code code = 1;
      core.Decimal decimal = 2;
    }
  }
  ValueX value = 3
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
}

// Auto-generated from StructureDefinition for QICoreServiceRequest.
// A request for a service to be performed.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest
message QICoreServiceRequest {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/ServiceRequest";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // ServiceRequest.contained
  reserved 7;

  // Extension
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Identifiers assigned to this order
  repeated core.Identifier identifier = 10;

  // Instantiates FHIR protocol or definition
  repeated core.Canonical instantiates_canonical = 11;

  // Instantiates external protocol or definition
  repeated core.Uri instantiates_uri = 12;

  // What request fulfills
  repeated core.Reference based_on = 13 [
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest",
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest"
  ];

  // What request replaces
  repeated core.Reference replaces = 14
      [(.google.fhir.proto.valid_reference_type) = "ServiceRequest"];

  // Composite Request ID
  core.Identifier requisition = 15;

  // draft | active | suspended | completed | entered-in-error | cancelled
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 16
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // proposal | plan | order +
  message IntentCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-intent";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestIntentCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  IntentCode intent = 17
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Classification of service
  repeated core.CodeableConcept category = 18;

  // routine | urgent | asap | stat
  message PriorityCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/request-priority";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.RequestPriorityCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  PriorityCode priority = 19;

  // True if service/procedure should not be performed
  core.Boolean do_not_perform = 20;

  // What is being requested/ordered
  core.CodeableConcept code = 21;

  // Additional order information
  repeated core.CodeableConcept order_detail = 22;

  // Service amount
  message QuantityX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Quantity quantity = 1;
      core.Ratio ratio = 2;
      core.Range range = 3;
    }
  }
  QuantityX quantity = 23;

  // Individual or Entity the service is ordered for
  core.Reference subject = 24 [
    (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
    (.google.fhir.proto.valid_reference_type) = "Patient"
  ];

  // Encounter in which the request was created
  core.Reference encounter = 25 [
    (.google.fhir.proto.valid_reference_type) = "Encounter",
    (.google.fhir.proto.valid_reference_type) = "EpisodeOfCare"
  ];

  // When service should occur
  message OccurrenceX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.DateTime date_time = 1;
      core.Period period = 2;
      core.Timing timing = 3;
    }
  }
  OccurrenceX occurrence = 26;

  // Preconditions for service
  message AsNeededX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      core.Boolean boolean = 1;
      core.CodeableConcept codeable_concept = 2;
    }
  }
  AsNeededX as_needed = 27;

  // Date request signed
  core.DateTime authored_on = 28;

  // Who/what is requesting service
  core.Reference requester = 29 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "Device"
  ];

  // Performer role
  core.CodeableConcept performer_type = 30;

  // Requested performer
  repeated core.Reference performer = 31 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
    (.google.fhir.proto.valid_reference_type) = "HealthcareService"
  ];

  // Requested location
  repeated core.CodeableConcept location_code = 32;

  // Requested location
  repeated core.Reference location_reference = 33
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Explanation/Justification for procedure or service
  repeated core.CodeableConcept reason_code = 34;

  // Explanation/Justification for service or service
  repeated core.Reference reason_reference = 35 [
    (.google.fhir.proto.valid_reference_type) = "Condition",
    (.google.fhir.proto.valid_reference_type) = "Observation",
    (.google.fhir.proto.valid_reference_type) = "DiagnosticReport",
    (.google.fhir.proto.valid_reference_type) = "DocumentReference"
  ];

  // Associated insurance coverage
  repeated core.Reference insurance = 36 [
    (.google.fhir.proto.valid_reference_type) = "Coverage",
    (.google.fhir.proto.valid_reference_type) = "ClaimResponse"
  ];

  // Additional clinical information
  repeated core.Reference supporting_info = 37
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Procedure Samples
  repeated core.Reference specimen = 38
      [(.google.fhir.proto.valid_reference_type) = "Specimen"];

  // Location on Body
  repeated core.CodeableConcept body_site = 39;

  // Comments
  repeated core.Annotation note = 40;

  // Patient or consumer-oriented instructions
  core.String patient_instruction = 41;

  // Request provenance
  repeated core.Reference relevant_history = 42
      [(.google.fhir.proto.valid_reference_type) = "Provenance"];

  // Reason for current status
  core.CodeableConcept status_reason = 43 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/request-statusReason",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];

  // The access point or points used for this procedure
  repeated core.Reference approach_body_structure = 44 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/procedure-approachBodyStructure",
    (.google.fhir.proto.fhir_path_constraint) =
        "hasValue() or (children().count() > id.count())",
    (.google.fhir.proto.fhir_path_constraint) =
        "extension.exists() != value.exists()"
  ];

  // Appropriateness Score
  ServiceRequestQICoreServiceRequestAppropriatenessScore.ValueX
      appropriateness_score = 45 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest-appropriatenessScore"
  ];
}

// Auto-generated from StructureDefinition for QICoreSpecimen.
// Sample for analysis.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-specimen
message QICoreSpecimen {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Specimen";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-specimen";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Specimen.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // External Identifier
  repeated core.Identifier identifier = 10;

  // Identifier assigned by the lab
  core.Identifier accession_identifier = 11;

  // available | unavailable | unsatisfactory | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/specimen-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.SpecimenStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 12;

  // Kind of material that forms the specimen
  core.CodeableConcept type = 13;

  // Where the specimen came from. This may be from patient(s), from a location
  // (e.g., the source of an environmental sample), or a sampling of a substance
  // or a device
  core.Reference subject = 14 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Substance",
    (.google.fhir.proto.valid_reference_type) = "Group"
  ];

  // The time when specimen was received for processing
  core.DateTime received_time = 15;

  // Specimen from which this specimen originated
  repeated core.Reference parent = 16
      [(.google.fhir.proto.valid_reference_type) = "Specimen"];

  // Why the specimen was collected
  repeated core.Reference request = 17
      [(.google.fhir.proto.valid_reference_type) = "ServiceRequest"];

  // Collection details
  message Collection {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Who collected the specimen
    core.Reference collector = 4
        [(.google.fhir.proto.valid_reference_type) = "Practitioner"];

    // Collection time
    message CollectedX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.DateTime date_time = 1;
        core.Period period = 2;
      }
    }
    CollectedX collected = 5;

    // How long it took to collect specimen
    core.Duration duration = 6;

    // The quantity of specimen collected
    core.SimpleQuantity quantity = 7;

    // Technique used to perform collection
    core.CodeableConcept method = 8;

    // Anatomical collection site
    core.CodeableConcept body_site = 9;

    // Whether or how long patient abstained from food and/or drink
    message FastingStatusX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.CodeableConcept codeable_concept = 1;
        core.Duration duration = 2;
      }
    }
    FastingStatusX fasting_status = 10;
  }
  Collection collection = 18
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Processing and processing step details
  message Processing {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Textual description of procedure
    core.String description = 4;

    // Indicates the treatment step  applied to the specimen
    core.CodeableConcept procedure = 5;

    // Material used in the processing step
    repeated core.Reference additive = 6
        [(.google.fhir.proto.valid_reference_type) = "Substance"];

    // Date and time of specimen processing
    message TimeX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.DateTime date_time = 1;
        core.Period period = 2;
      }
    }
    TimeX time = 7;
  }
  repeated Processing processing = 19
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Direct container of specimen (tube/slide, etc.)
  message Container {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Extension
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Id for the container
    repeated core.Identifier identifier = 4;

    // Textual description of the container
    core.String description = 5;

    // Kind of container directly associated with specimen
    core.CodeableConcept type = 6;

    // Container volume or size
    core.SimpleQuantity capacity = 7;

    // Quantity of specimen within container
    core.SimpleQuantity specimen_quantity = 8;

    // Additive associated with container
    message AdditiveX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.CodeableConcept codeable_concept = 1;
        core.Reference reference = 2
            [(.google.fhir.proto.valid_reference_type) = "Substance"];
      }
    }
    AdditiveX additive = 9;

    // The sequence number of the sample
    core.Integer container_sequence_number = 10 [
      (.google.fhir.proto.fhir_inlined_extension_url) =
          "http://hl7.org/fhir/StructureDefinition/specimen-sequenceNumber",
      (.google.fhir.proto.fhir_path_constraint) =
          "hasValue() or (children().count() > id.count())",
      (.google.fhir.proto.fhir_path_constraint) =
          "extension.exists() != value.exists()"
    ];
  }
  repeated Container container = 20
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // State of the specimen
  repeated core.CodeableConcept condition = 21;

  // Comments
  repeated core.Annotation note = 22;
}

// Auto-generated from StructureDefinition for QICoreSubstance.
// A homogeneous material with a definite composition.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-substance
message QICoreSubstance {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Substance";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-substance";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Substance.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Unique identifier
  repeated core.Identifier identifier = 10;

  // active | inactive | entered-in-error
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/substance-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    core.FHIRSubstanceStatusCode.Value value = 1;

    core.String id = 2;

    repeated core.Extension extension = 3;
  }
  StatusCode status = 11;

  // What class/type of substance this is
  repeated core.CodeableConcept category = 12;

  // What substance this is
  core.CodeableConcept code = 13
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Textual description of the substance, comments
  core.String description = 14;

  // If this describes a specific package/container of the substance
  message Instance {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Identifier of the package/container
    core.Identifier identifier = 4;

    // When no longer valid to use
    core.DateTime expiry = 5;

    // Amount of substance in the package
    core.SimpleQuantity quantity = 6;
  }
  repeated Instance instance = 15
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Composition information about the substance
  message Ingredient {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Optional amount (concentration)
    core.Ratio quantity = 4;

    // A component of the substance
    message SubstanceX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Reference reference = 2
            [(.google.fhir.proto.valid_reference_type) = "Substance"];
      }
    }
    SubstanceX substance = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Ingredient ingredient = 16
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];
}

// Auto-generated from StructureDefinition for QICoreTask.
// A task to be performed.
// See http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-task
message QICoreTask {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/Task";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-task";

  // Logical id of this artifact
  core.Id id = 1;

  // Metadata about the resource
  core.Meta meta = 2;

  // A set of rules under which this content was created
  core.Uri implicit_rules = 3;

  // Language of the resource content
  core.Code language = 4;

  // Text summary of the resource, for human interpretation
  core.Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // Task.contained
  reserved 7;

  // Additional content defined by implementations
  repeated core.Extension extension = 8;

  // Extensions that cannot be ignored
  repeated core.Extension modifier_extension = 9;

  // Formal definition of task
  core.Canonical instantiates_canonical = 10;

  // Formal definition of task
  core.Uri instantiates_uri = 11;

  // Request fulfilled by this task
  repeated core.Reference based_on = 12
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Requisition or grouper id
  core.Identifier group_identifier = 13;

  // Composite task
  repeated core.Reference part_of = 14
      [(.google.fhir.proto.valid_reference_type) = "Task"];

  // Reason for current status
  core.CodeableConcept status_reason = 15;

  // E.g. "Specimen collected", "IV prepped"
  core.CodeableConcept business_status = 16;

  // Human-readable explanation of task
  core.String description = 17;

  // What task is acting on
  core.Reference focus = 18
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Beneficiary of the Task
  core.Reference for_value = 19 [
    (.google.fhir.proto.valid_reference_type) = "Resource",
    json_name = "for"
  ];

  // Healthcare event during which this task originated
  core.Reference encounter = 20
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Task Creation Date
  core.DateTime authored_on = 21;

  // Task Last Modified Date
  core.DateTime last_modified = 22;

  // Who is asking for task to be done
  core.Reference requester = 23 [
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Requested performer
  repeated core.CodeableConcept performer_type = 24;

  // Responsible individual
  core.Reference owner = 25 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam",
    (.google.fhir.proto.valid_reference_type) = "HealthcareService",
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "RelatedPerson"
  ];

  // Where task occurs
  core.Reference location = 26
      [(.google.fhir.proto.valid_reference_type) = "Location"];

  // Why task is needed
  core.CodeableConcept reason_code = 27;

  // Why task is needed
  core.Reference reason_reference = 28
      [(.google.fhir.proto.valid_reference_type) = "Resource"];

  // Associated insurance coverage
  repeated core.Reference insurance = 29 [
    (.google.fhir.proto.valid_reference_type) = "Coverage",
    (.google.fhir.proto.valid_reference_type) = "ClaimResponse"
  ];

  // Comments made about the task
  repeated core.Annotation note = 30;

  // Key events in history of the Task
  repeated core.Reference relevant_history = 31
      [(.google.fhir.proto.valid_reference_type) = "Provenance"];

  // Constraints on fulfillment tasks
  message Restriction {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // How many times to repeat
    core.PositiveInt repetitions = 4;

    // When fulfillment sought
    core.Period period = 5;

    // For whom is fulfillment sought?
    repeated core.Reference recipient = 6 [
      (.google.fhir.proto.valid_reference_type) = "Patient",
      (.google.fhir.proto.valid_reference_type) = "Practitioner",
      (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
      (.google.fhir.proto.valid_reference_type) = "RelatedPerson",
      (.google.fhir.proto.valid_reference_type) = "Group",
      (.google.fhir.proto.valid_reference_type) = "Organization"
    ];
  }
  Restriction restriction = 32
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Information used to perform task
  message Parameter {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Label for the input
    core.CodeableConcept type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Content to use in performing the task
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Base64Binary base64_binary = 1;
        core.Boolean boolean = 2;
        core.Canonical canonical = 3;
        core.Code code = 4;
        core.Date date = 5;
        core.DateTime date_time = 6;
        core.Decimal decimal = 7;
        core.Id id = 8;
        core.Instant instant = 9;
        core.Integer integer = 10;
        core.Markdown markdown = 11;
        core.Oid oid = 12;
        core.PositiveInt positive_int = 13;
        core.String string_value = 14 [json_name = "string"];
        core.Time time = 15;
        core.UnsignedInt unsigned_int = 16;
        core.Uri uri = 17;
        core.Url url = 18;
        core.Uuid uuid = 19;
        core.Address address = 20;
        core.Age age = 21;
        core.Annotation annotation = 22;
        core.Attachment attachment = 23;
        core.CodeableConcept codeable_concept = 24;
        core.Coding coding = 25;
        core.ContactPoint contact_point = 26;
        core.Count count = 27;
        core.Distance distance = 28;
        core.Duration duration = 29;
        core.HumanName human_name = 30;
        core.Identifier identifier = 31;
        core.Money money = 32;
        core.Period period = 33;
        core.Quantity quantity = 34;
        core.Range range = 35;
        core.Ratio ratio = 36;
        core.Reference reference = 37;
        core.SampledData sampled_data = 38;
        core.Signature signature = 39;
        core.Timing timing = 40;
        core.ContactDetail contact_detail = 41;
        core.Contributor contributor = 42;
        core.DataRequirement data_requirement = 43;
        core.Expression expression = 44;
        core.ParameterDefinition parameter_definition = 45;
        core.RelatedArtifact related_artifact = 46;
        core.TriggerDefinition trigger_definition = 47;
        core.UsageContext usage_context = 48;
        core.Dosage dosage = 49;
      }
    }
    ValueX value = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Parameter input = 33
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // Information produced as part of task
  message Output {
    // Unique id for inter-element referencing
    core.String id = 1;

    // Additional content defined by implementations
    repeated core.Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated core.Extension modifier_extension = 3;

    // Label for output
    core.CodeableConcept type = 4
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

    // Result of output
    message ValueX {
      option (.google.fhir.proto.is_choice_type) = true;

      oneof choice {
        core.Base64Binary base64_binary = 1;
        core.Boolean boolean = 2;
        core.Canonical canonical = 3;
        core.Code code = 4;
        core.Date date = 5;
        core.DateTime date_time = 6;
        core.Decimal decimal = 7;
        core.Id id = 8;
        core.Instant instant = 9;
        core.Integer integer = 10;
        core.Markdown markdown = 11;
        core.Oid oid = 12;
        core.PositiveInt positive_int = 13;
        core.String string_value = 14 [json_name = "string"];
        core.Time time = 15;
        core.UnsignedInt unsigned_int = 16;
        core.Uri uri = 17;
        core.Url url = 18;
        core.Uuid uuid = 19;
        core.Address address = 20;
        core.Age age = 21;
        core.Annotation annotation = 22;
        core.Attachment attachment = 23;
        core.CodeableConcept codeable_concept = 24;
        core.Coding coding = 25;
        core.ContactPoint contact_point = 26;
        core.Count count = 27;
        core.Distance distance = 28;
        core.Duration duration = 29;
        core.HumanName human_name = 30;
        core.Identifier identifier = 31;
        core.Money money = 32;
        core.Period period = 33;
        core.Quantity quantity = 34;
        core.Range range = 35;
        core.Ratio ratio = 36;
        core.Reference reference = 37;
        core.SampledData sampled_data = 38;
        core.Signature signature = 39;
        core.Timing timing = 40;
        core.ContactDetail contact_detail = 41;
        core.Contributor contributor = 42;
        core.DataRequirement data_requirement = 43;
        core.Expression expression = 44;
        core.ParameterDefinition parameter_definition = 45;
        core.RelatedArtifact related_artifact = 46;
        core.TriggerDefinition trigger_definition = 47;
        core.UsageContext usage_context = 48;
        core.Dosage dosage = 49;
      }
    }
    ValueX value = 5
        [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
  }
  repeated Output output = 34
      [(.google.fhir.proto.fhir_path_constraint) =
           "hasValue() or (children().count() > id.count())"];

  // field 35 reserved for Task.identifier:identifier which uses an unsupported
  // slicing on Identifier
  reserved 35;

  // field 36 reserved for Task.status:status which uses an unsupported slicing
  // on code
  reserved 36;

  // field 37 reserved for Task.intent:intent which uses an unsupported slicing
  // on code
  reserved 37;

  // field 38 reserved for Task.priority:priority which uses an unsupported
  // slicing on code
  reserved 38;

  // field 39 reserved for Task.code:code which uses an unsupported slicing on
  // CodeableConcept
  reserved 39;

  // field 40 reserved for Task.executionPeriod:executionPeriod which uses an
  // unsupported slicing on Period
  reserved 40;
}
